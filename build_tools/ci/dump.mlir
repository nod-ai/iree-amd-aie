+ '[' 7 -lt 2 ']'
+ '[' 7 -gt 7 ']'
++ realpath results_dir_tmp
+ OUTPUT_DIR=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp
+ mkdir -p /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp
+ '[' '!' -d /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp ']'
++ realpath ../../../builds/iree-clang
+ IREE_INSTALL_DIR=/proj/gdba/jamesn/workspace/builds/iree-clang
+ '[' '!' -d /proj/gdba/jamesn/workspace/builds/iree-clang ']'
+ IREE_COMPILE_EXE=
+ TEST_RUNNER=
+ for dir in "${IREE_INSTALL_DIR}" "${IREE_INSTALL_DIR}/bin" "${IREE_INSTALL_DIR}/tools"
+ '[' -f /proj/gdba/jamesn/workspace/builds/iree-clang/iree-compile ']'
+ '[' -f /proj/gdba/jamesn/workspace/builds/iree-clang/testing/e2e/iree-e2e-matmul-test ']'
+ for dir in "${IREE_INSTALL_DIR}" "${IREE_INSTALL_DIR}/bin" "${IREE_INSTALL_DIR}/tools"
+ '[' -f /proj/gdba/jamesn/workspace/builds/iree-clang/bin/iree-compile ']'
+ '[' -f /proj/gdba/jamesn/workspace/builds/iree-clang/bin/testing/e2e/iree-e2e-matmul-test ']'
+ for dir in "${IREE_INSTALL_DIR}" "${IREE_INSTALL_DIR}/bin" "${IREE_INSTALL_DIR}/tools"
+ '[' -f /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile ']'
+ IREE_COMPILE_EXE=/proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile
+ '[' -f /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test ']'
+ TEST_RUNNER=/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test
+ '[' -z /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile ']'
+ '[' -z /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test ']'
+ '[' -z /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install ']'
++ realpath /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ MLIR_AIE_INSTALL=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ '[' '!' -d /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install ']'
+ '[' -z /proj/gdba/jamesn/workspace/peano/install ']'
++ realpath /proj/gdba/jamesn/workspace/peano/install
+ PEANO=/proj/gdba/jamesn/workspace/peano/install
+ '[' '!' -d /proj/gdba/jamesn/workspace/peano/install ']'
+ '[' -z /opt/xilinx/xrt ']'
++ realpath /opt/xilinx/xrt
+ XRT_DIR=/opt/xilinx/xrt
+ '[' '!' -d /opt/xilinx/xrt ']'
+ '[' -z /proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2 ']'
++ realpath /proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2
+ VITIS=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ '[' '!' -d /proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 ']'
+ '[' -z 0 ']'
+ DO_SIGNING=0
+++ dirname ./run_matmul_test.sh
++ cd .
++ pwd
+ THIS_DIR=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci
++ cd /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/../..
++ pwd
+ ROOT_DIR=/proj/gdba/jamesn/workspace/iree-amd-aie
+ GENERATOR=/proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py
+ '[' '!' -f /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py ']'
+ IREE_PYTHON3_EXECUTABLE=python3
+ '[' -z python3 ']'
++ python3 --version
+ echo 'Python version: Python 3.10.13'
Python version: Python 3.10.13
+ source /opt/xilinx/xrt/setup.sh
+++ cat /etc/os-release
+++ grep -i '^ID='
+++ awk -F= '{print $2}'
++ OSDIST=ubuntu
++ [[ ubuntu == \c\e\n\t\o\s ]]
+++ grep -i '^VERSION_ID='
+++ cat /etc/os-release
+++ awk -F= '{print $2}'
+++ tr -d '"'
+++ awk -F. '{print $1*100+$2}'
++ OSREL=2204
++ [[ ubuntu == \u\b\u\n\t\u ]]
++ ((  2204 < 1604  ))
++ [[ ubuntu == \c\e\n\t\o\s ]]
++ [[ ubuntu == \r\h\e\l* ]]
++ '[' -n '5.1.16(1)-release' ']'
++++ dirname /opt/xilinx/xrt/setup.sh
+++ readlink -f /opt/xilinx/xrt
++ XILINX_XRT=/opt/xilinx/xrt
++ [[ /opt/xilinx/xrt != *\/\x\r\t ]]
++ COMP_FILE=/usr/share/bash-completion/bash_completion
++ [[ ehuxB != *e* ]]
++ echo Autocomplete not enabled for XRT tools
Autocomplete not enabled for XRT tools
++ export XILINX_XRT
++ export LD_LIBRARY_PATH=/opt/xilinx/xrt/lib:/opt/xaiengine/lib:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/lib:/opt/xilinx/xrt/lib:/opt/xilinx/xrt/python
++ LD_LIBRARY_PATH=/opt/xilinx/xrt/lib:/opt/xaiengine/lib:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/lib:/opt/xilinx/xrt/lib:/opt/xilinx/xrt/python
++ export PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin
++ PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin
++ export PYTHONPATH=/opt/xilinx/xrt/python
++ PYTHONPATH=/opt/xilinx/xrt/python
++ echo 'XILINX_XRT        : /opt/xilinx/xrt'
XILINX_XRT        : /opt/xilinx/xrt
++ echo 'PATH              : /opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin'
PATH              : /opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin
++ echo 'LD_LIBRARY_PATH   : /opt/xilinx/xrt/lib:/opt/xaiengine/lib:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/lib:/opt/xilinx/xrt/lib:/opt/xilinx/xrt/python'
LD_LIBRARY_PATH   : /opt/xilinx/xrt/lib:/opt/xaiengine/lib:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/lib:/opt/xilinx/xrt/lib:/opt/xilinx/xrt/python
++ echo 'PYTHONPATH        : /opt/xilinx/xrt/python'
PYTHONPATH        : /opt/xilinx/xrt/python
+ cd /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp
+ run_matmul_test --name_prefix test1 --lhs_rhs_type bf16 --acc_type f32 --target_backend amd-aie --device xrt --peano_install_path /proj/gdba/jamesn/workspace/peano/install --mlir_aie_install_path /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --vitis_path /proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --pipeline pad-pack --m 64 --n 64 --k 64 --dynamicity static --accumulate false --expect-compile-failure 0 --compile-only 0 --do_transpose_rhs 0 --max_elements_to_check 0 --use_ukernel 0
+ local lhs_rhs_type=
+ local acc_type=
+ local m=
+ local n=
+ local k=
+ local name_prefix=noprefix
+ local target_backend=amd-aie
+ local device=xrt
+ local peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ local mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ local vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ local pipeline=pad-pack
+ local dynamicity=static
+ local accumulate=false
+ local expect_compile_failure=0
+ local compile_only=0
+ local do_transpose_rhs=0
+ local max_elements_to_check=20000
+ local use_ukernel=0
+ '[' 38 -gt 0 ']'
+ case "$1" in
+ name_prefix=test1
+ shift 2
+ '[' 36 -gt 0 ']'
+ case "$1" in
+ lhs_rhs_type=bf16
+ shift 2
+ '[' 34 -gt 0 ']'
+ case "$1" in
+ acc_type=f32
+ shift 2
+ '[' 32 -gt 0 ']'
+ case "$1" in
+ target_backend=amd-aie
+ shift 2
+ '[' 30 -gt 0 ']'
+ case "$1" in
+ device=xrt
+ shift 2
+ '[' 28 -gt 0 ']'
+ case "$1" in
+ peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ shift 2
+ '[' 26 -gt 0 ']'
+ case "$1" in
+ mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ shift 2
+ '[' 24 -gt 0 ']'
+ case "$1" in
+ vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ shift 2
+ '[' 22 -gt 0 ']'
+ case "$1" in
+ pipeline=pad-pack
+ shift 2
+ '[' 20 -gt 0 ']'
+ case "$1" in
+ m=64
+ shift 2
+ '[' 18 -gt 0 ']'
+ case "$1" in
+ n=64
+ shift 2
+ '[' 16 -gt 0 ']'
+ case "$1" in
+ k=64
+ shift 2
+ '[' 14 -gt 0 ']'
+ case "$1" in
+ dynamicity=static
+ shift 2
+ '[' 12 -gt 0 ']'
+ case "$1" in
+ accumulate=false
+ shift 2
+ '[' 10 -gt 0 ']'
+ case "$1" in
+ expect_compile_failure=0
+ shift 2
+ '[' 8 -gt 0 ']'
+ case "$1" in
+ compile_only=0
+ shift 2
+ '[' 6 -gt 0 ']'
+ case "$1" in
+ do_transpose_rhs=0
+ shift 2
+ '[' 4 -gt 0 ']'
+ case "$1" in
+ max_elements_to_check=0
+ shift 2
+ '[' 2 -gt 0 ']'
+ case "$1" in
+ use_ukernel=0
+ shift 2
+ '[' 0 -gt 0 ']'
+ set -x
++ date +%s%3N
+ start_time=1716219036238
+ name=mm_test1_bf16_f32_m64_n64_k64
+ set +e
++ echo mm_test1_bf16_f32_m64_n64_k64
++ grep -c ,
+ nameContainsComma=0
++ echo mm_test1_bf16_f32_m64_n64_k64
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_test1_bf16_f32_m64_n64_k64
++ grep -c ,
+ nameContainsComma=0
++ grep -c ' '
++ echo mm_test1_bf16_f32_m64_n64_k64
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=64                     --n=64                     --k=64                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=64 --n=64 --k=64 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.mlir
[TestShape(m=64, k=64, n=64, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219036321
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_test1_bf16_f32_m64_n64_k64 ****'
**** Generating matmul .vmfb file for mm_test1_bf16_f32_m64_n64_k64 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_64x64_64xbf16__dispatch_0_matmul_64x64x64 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 4720 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (11066 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_test1_bf16_f32_m64_n64_k64 ****'
**** Generating calls .vmfb file for mm_test1_bf16_f32_m64_n64_k64 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_ir.mlir
+ function_names=matmul_64x64_64xbf16_
++ date +%s%3N
+ compiled_time=1716219036857
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_test1_bf16_f32_m64_n64_k64'\'' matmul tests ****'
**** Running 'mm_test1_bf16_f32_m64_n64_k64' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.vmfb       --device=xrt       --max_elements_to_check=0'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.vmfb       --device=xrt       --max_elements_to_check=0'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.vmfb       --device=xrt       --max_elements_to_check=0
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.vmfb       --device=xrt       --max_elements_to_check=0'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_test1_bf16_f32_m64_n64_k64_calls.vmfb --device=xrt --max_elements_to_check=0
--- TEST[matmul_64x64_64xbf16__64_64_64_0] ---
Matmul shape (MxKxN): 64x64x64
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219036899
+ echo 'Time spent in generation: 83 [ms]'
Time spent in generation: 83 [ms]
+ echo 'Time spent in compilation: 536 [ms]'
Time spent in compilation: 536 [ms]
+ echo 'Time spent in execution and verification: 42 [ms]'
Time spent in execution and verification: 42 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219036902
+ name=mm_ukern_bf16_f32_m256_n256_k256
+ set +e
++ echo mm_ukern_bf16_f32_m256_n256_k256
++ grep -c ,
+ nameContainsComma=0
++ echo mm_ukern_bf16_f32_m256_n256_k256
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_ukern_bf16_f32_m256_n256_k256
++ grep -c ,
+ nameContainsComma=0
++ echo mm_ukern_bf16_f32_m256_n256_k256
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=256                     --n=256                     --k=256                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=256 --n=256 --k=256 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.mlir
[TestShape(m=256, k=256, n=256, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219036977
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 1 -ne 0 ']'
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands                         --iree-amdaie-enable-ukernels=all'
+ '[' -f /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm.o ']'
+ SRC_DIR=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_kernels/mm.o
+ ln -s /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_kernels/mm.o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm.o
+ echo '**** Generating matmul .vmfb file for mm_ukern_bf16_f32_m256_n256_k256 ****'
**** Generating matmul .vmfb file for mm_ukern_bf16_f32_m256_n256_k256 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands --iree-amdaie-enable-ukernels=all -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_256x256_256xbf16__dispatch_0_matmul_256x2 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 58400 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (64746 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_256x256_256xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_ukern_bf16_f32_m256_n256_k256 ****'
**** Generating calls .vmfb file for mm_ukern_bf16_f32_m256_n256_k256 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_ir.mlir
+ function_names=matmul_256x256_256xbf16_
++ date +%s%3N
+ compiled_time=1716219038282
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_ukern_bf16_f32_m256_n256_k256'\'' matmul tests ****'
**** Running 'mm_ukern_bf16_f32_m256_n256_k256' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_ukern_bf16_f32_m256_n256_k256_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_256x256_256xbf16__256_256_256_0] ---
Matmul shape (MxKxN): 256x256x256
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219038327
+ echo 'Time spent in generation: 75 [ms]'
Time spent in generation: 75 [ms]
+ echo 'Time spent in compilation: 1305 [ms]'
Time spent in compilation: 1305 [ms]
+ echo 'Time spent in execution and verification: 45 [ms]'
Time spent in execution and verification: 45 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219038330
+ name=mm_transpose_int32_i32_i32_m8_n16_k32
+ set +e
++ echo mm_transpose_int32_i32_i32_m8_n16_k32
++ grep -c ,
+ nameContainsComma=0
++ echo mm_transpose_int32_i32_i32_m8_n16_k32
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_transpose_int32_i32_i32_m8_n16_k32
++ grep -c ,
+ nameContainsComma=0
++ echo mm_transpose_int32_i32_i32_m8_n16_k32
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=8                     --n=16                     --k=32                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.mlir'
+ '[' 1 -ne 0 ']'
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=8                     --n=16                     --k=32                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.mlir --transpose_rhs'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=8 --n=16 --k=32 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.mlir --transpose_rhs
[TestShape(m=8, k=32, n=16, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219038394
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_transpose_int32_i32_i32_m8_n16_k32 ****'
**** Generating matmul .vmfb file for mm_transpose_int32_i32_i32_m8_n16_k32 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_8x32_16xi32__dispatch_0_matmul_transpose_ --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 4960 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (11306 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_transpose_int32_i32_i32_m8_n16_k32 ****'
**** Generating calls .vmfb file for mm_transpose_int32_i32_i32_m8_n16_k32 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_ir.mlir
+ function_names=matmul_8x32_16xi32_
++ date +%s%3N
+ compiled_time=1716219038833
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_transpose_int32_i32_i32_m8_n16_k32'\'' matmul tests ****'
**** Running 'mm_transpose_int32_i32_i32_m8_n16_k32' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_int32_i32_i32_m8_n16_k32_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_8x32_16xi32__8_32_16_0] ---
Matmul shape (MxKxN): 8x32x16
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219039836
+ echo 'Time spent in generation: 64 [ms]'
Time spent in generation: 64 [ms]
+ echo 'Time spent in compilation: 439 [ms]'
Time spent in compilation: 439 [ms]
+ echo 'Time spent in execution and verification: 1003 [ms]'
Time spent in execution and verification: 1003 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219039839
+ name=mm_transpose_bf16_bf16_f32_m256_n256_k256
+ set +e
++ echo mm_transpose_bf16_bf16_f32_m256_n256_k256
++ grep -c ,
+ nameContainsComma=0
++ echo mm_transpose_bf16_bf16_f32_m256_n256_k256
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_transpose_bf16_bf16_f32_m256_n256_k256
++ grep -c ,
+ nameContainsComma=0
++ echo mm_transpose_bf16_bf16_f32_m256_n256_k256
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=256                     --n=256                     --k=256                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_calls.mlir'
+ '[' 1 -ne 0 ']'
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=256                     --n=256                     --k=256                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_calls.mlir --transpose_rhs'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=256 --n=256 --k=256 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_calls.mlir --transpose_rhs
[TestShape(m=256, k=256, n=256, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219039913
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_transpose_bf16_bf16_f32_m256_n256_k256 ****'
**** Generating matmul .vmfb file for mm_transpose_bf16_bf16_f32_m256_n256_k256 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_transpose_bf16_bf16_f32_m256_n256_k256.vmfb
<unknown>:0: error: 'aie.dma_bd' op For <32b width datatypes, inner-most dim stride must be 1
<unknown>:0: note: see current operation: "aie.dma_bd"(%148) <{dimensions = #aie<bd_dim_layout_arr[<size = 8, stride = 8>, <size = 16, stride = 1024>, <size = 8, stride = 1>, <size = 4, stride = 256>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_256x256_256xbf16__dispatch_0.mlir:2:2: error: failed to run translation of source executable to target executable for backend #hal.executable.target<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>
  hal.executable.variant public @amdaie_xclbin_fb target(<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>) {
 ^
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_256x256_256xbf16__dispatch_0.mlir:2:2: note: see current operation: 
"hal.executable.variant"() ({
  "hal.executable.export"() ({
  ^bb0(%arg0: !hal.device):
    %0:3 = "flow.dispatch.workgroup_count_from_slice"() : () -> (index, index, index)
    "hal.return"(%0#0, %0#1, %0#2) : (index, index, index) -> ()
  }) {hal.interface.bindings = [#hal.interface.binding<0, 0>, #hal.interface.binding<0, 1>, #hal.interface.binding<0, 2>], layout = #hal.pipeline.layout<push_constants = 0, sets = [<0, bindings = [<0, storage_buffer, ReadOnly>, <1, storage_buffer, ReadOnly>, <2, storage_buffer>]>]>, ordinal = 0 : index, sym_name = "matmul_256x256_256xbf16__dispatch_0_matmul_transpose_b_256x256x256_bf16xbf16xf32"} : () -> ()
  "builtin.module"() ({
    "aie.device"() <{device = 8 : i32}> ({
      %0 = "aie.tile"() <{col = 0 : i32, row = 0 : i32}> : () -> index
      %1 = "aie.tile"() <{col = 1 : i32, row = 0 : i32}> : () -> index
      %2 = "aie.tile"() <{col = 2 : i32, row = 0 : i32}> : () -> index
      %3 = "aie.tile"() <{col = 3 : i32, row = 0 : i32}> : () -> index
      %4 = "aie.tile"() <{col = 0 : i32, row = 1 : i32}> : () -> index
      %5 = "aie.tile"() <{col = 1 : i32, row = 1 : i32}> : () -> index
      %6 = "aie.tile"() <{col = 2 : i32, row = 1 : i32}> : () -> index
      %7 = "aie.tile"() <{col = 3 : i32, row = 1 : i32}> : () -> index
      %8 = "aie.tile"() <{col = 0 : i32, row = 2 : i32}> : () -> index
      %9 = "aie.tile"() <{col = 1 : i32, row = 2 : i32}> : () -> index
      %10 = "aie.tile"() <{col = 2 : i32, row = 2 : i32}> : () -> index
      %11 = "aie.tile"() <{col = 3 : i32, row = 2 : i32}> : () -> index
      %12 = "aie.tile"() <{col = 0 : i32, row = 3 : i32}> : () -> index
      %13 = "aie.tile"() <{col = 1 : i32, row = 3 : i32}> : () -> index
      %14 = "aie.tile"() <{col = 2 : i32, row = 3 : i32}> : () -> index
      %15 = "aie.tile"() <{col = 3 : i32, row = 3 : i32}> : () -> index
      %16 = "aie.tile"() <{col = 0 : i32, row = 4 : i32}> : () -> index
      %17 = "aie.tile"() <{col = 1 : i32, row = 4 : i32}> : () -> index
      %18 = "aie.tile"() <{col = 2 : i32, row = 4 : i32}> : () -> index
      %19 = "aie.tile"() <{col = 3 : i32, row = 4 : i32}> : () -> index
      %20 = "aie.tile"() <{col = 0 : i32, row = 5 : i32}> : () -> index
      %21 = "aie.tile"() <{col = 1 : i32, row = 5 : i32}> : () -> index
      %22 = "aie.tile"() <{col = 2 : i32, row = 5 : i32}> : () -> index
      %23 = "aie.tile"() <{col = 3 : i32, row = 5 : i32}> : () -> index
      %24 = "aie.lock"(%7) <{init = 4 : i32, lockID = 5 : i32}> : (index) -> index
      %25 = "aie.lock"(%7) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %26 = "aie.lock"(%7) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
      %27 = "aie.lock"(%7) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %28 = "aie.lock"(%7) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %29 = "aie.lock"(%7) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %30 = "aie.lock"(%6) <{init = 4 : i32, lockID = 5 : i32}> : (index) -> index
      %31 = "aie.lock"(%6) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %32 = "aie.lock"(%6) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
      %33 = "aie.lock"(%6) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %34 = "aie.lock"(%6) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %35 = "aie.lock"(%6) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %36 = "aie.lock"(%5) <{init = 4 : i32, lockID = 5 : i32}> : (index) -> index
      %37 = "aie.lock"(%5) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %38 = "aie.lock"(%5) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
      %39 = "aie.lock"(%5) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %40 = "aie.lock"(%5) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %41 = "aie.lock"(%5) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %42 = "aie.lock"(%4) <{init = 4 : i32, lockID = 5 : i32}> : (index) -> index
      %43 = "aie.lock"(%4) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %44 = "aie.lock"(%4) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
      %45 = "aie.lock"(%4) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %46 = "aie.lock"(%4) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %47 = "aie.lock"(%4) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %48 = "aie.lock"(%8) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %49 = "aie.lock"(%8) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %50 = "aie.lock"(%8) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %51 = "aie.lock"(%8) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %52 = "aie.lock"(%8) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %53 = "aie.lock"(%8) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %54 = "aie.lock"(%9) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %55 = "aie.lock"(%9) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %56 = "aie.lock"(%9) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %57 = "aie.lock"(%9) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %58 = "aie.lock"(%9) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %59 = "aie.lock"(%9) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %60 = "aie.lock"(%10) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %61 = "aie.lock"(%10) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %62 = "aie.lock"(%10) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %63 = "aie.lock"(%10) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %64 = "aie.lock"(%10) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %65 = "aie.lock"(%10) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %66 = "aie.lock"(%11) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %67 = "aie.lock"(%11) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %68 = "aie.lock"(%11) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %69 = "aie.lock"(%11) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %70 = "aie.lock"(%11) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %71 = "aie.lock"(%11) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %72 = "aie.lock"(%12) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %73 = "aie.lock"(%12) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %74 = "aie.lock"(%12) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %75 = "aie.lock"(%12) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %76 = "aie.lock"(%12) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %77 = "aie.lock"(%12) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %78 = "aie.lock"(%13) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %79 = "aie.lock"(%13) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %80 = "aie.lock"(%13) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %81 = "aie.lock"(%13) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %82 = "aie.lock"(%13) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %83 = "aie.lock"(%13) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %84 = "aie.lock"(%14) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %85 = "aie.lock"(%14) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %86 = "aie.lock"(%14) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %87 = "aie.lock"(%14) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %88 = "aie.lock"(%14) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %89 = "aie.lock"(%14) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %90 = "aie.lock"(%15) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %91 = "aie.lock"(%15) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %92 = "aie.lock"(%15) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %93 = "aie.lock"(%15) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %94 = "aie.lock"(%15) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %95 = "aie.lock"(%15) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %96 = "aie.lock"(%16) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %97 = "aie.lock"(%16) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %98 = "aie.lock"(%16) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %99 = "aie.lock"(%16) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %100 = "aie.lock"(%16) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %101 = "aie.lock"(%16) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %102 = "aie.lock"(%17) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %103 = "aie.lock"(%17) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %104 = "aie.lock"(%17) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %105 = "aie.lock"(%17) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %106 = "aie.lock"(%17) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %107 = "aie.lock"(%17) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %108 = "aie.lock"(%18) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %109 = "aie.lock"(%18) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %110 = "aie.lock"(%18) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %111 = "aie.lock"(%18) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %112 = "aie.lock"(%18) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %113 = "aie.lock"(%18) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %114 = "aie.lock"(%19) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %115 = "aie.lock"(%19) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %116 = "aie.lock"(%19) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %117 = "aie.lock"(%19) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %118 = "aie.lock"(%19) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %119 = "aie.lock"(%19) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %120 = "aie.lock"(%20) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %121 = "aie.lock"(%20) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %122 = "aie.lock"(%20) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %123 = "aie.lock"(%20) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %124 = "aie.lock"(%20) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %125 = "aie.lock"(%20) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %126 = "aie.lock"(%21) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %127 = "aie.lock"(%21) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %128 = "aie.lock"(%21) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %129 = "aie.lock"(%21) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %130 = "aie.lock"(%21) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %131 = "aie.lock"(%21) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %132 = "aie.lock"(%22) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %133 = "aie.lock"(%22) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %134 = "aie.lock"(%22) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %135 = "aie.lock"(%22) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %136 = "aie.lock"(%22) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %137 = "aie.lock"(%22) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %138 = "aie.lock"(%23) <{init = 2 : i32, lockID = 5 : i32}> : (index) -> index
      %139 = "aie.lock"(%23) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %140 = "aie.lock"(%23) <{init = 2 : i32, lockID = 3 : i32}> : (index) -> index
      %141 = "aie.lock"(%23) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %142 = "aie.lock"(%23) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %143 = "aie.lock"(%23) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %144 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf91"}> : (index) -> memref<64x256xbf16, 1>
      %145 = "aie.buffer"(%5) <{mem_bank = 0 : i32, sym_name = "buf90"}> : (index) -> memref<64x256xbf16, 1>
      %146 = "aie.buffer"(%6) <{mem_bank = 0 : i32, sym_name = "buf89"}> : (index) -> memref<64x256xbf16, 1>
      %147 = "aie.buffer"(%7) <{mem_bank = 0 : i32, sym_name = "buf88"}> : (index) -> memref<64x256xbf16, 1>
      %148 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf87"}> : (index) -> memref<64x256xbf16, 1>
      %149 = "aie.buffer"(%5) <{mem_bank = 0 : i32, sym_name = "buf86"}> : (index) -> memref<64x256xbf16, 1>
      %150 = "aie.buffer"(%6) <{mem_bank = 0 : i32, sym_name = "buf85"}> : (index) -> memref<64x256xbf16, 1>
      %151 = "aie.buffer"(%7) <{mem_bank = 0 : i32, sym_name = "buf84"}> : (index) -> memref<64x256xbf16, 1>
      %152 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf83"}> : (index) -> memref<64x256xf32, 1>
      %153 = "aie.buffer"(%5) <{mem_bank = 0 : i32, sym_name = "buf82"}> : (index) -> memref<64x256xf32, 1>
      %154 = "aie.buffer"(%6) <{mem_bank = 0 : i32, sym_name = "buf81"}> : (index) -> memref<64x256xf32, 1>
      %155 = "aie.buffer"(%7) <{mem_bank = 0 : i32, sym_name = "buf80"}> : (index) -> memref<64x256xf32, 1>
      %156 = "aie.buffer"(%23) <{mem_bank = 0 : i32, sym_name = "buf79"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %157 = "aie.buffer"(%23) <{mem_bank = 0 : i32, sym_name = "buf78"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %158 = "aie.buffer"(%23) <{mem_bank = 0 : i32, sym_name = "buf77"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %159 = "aie.buffer"(%23) <{mem_bank = 0 : i32, sym_name = "buf76"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %160 = "aie.buffer"(%23) <{mem_bank = 0 : i32, sym_name = "buf75"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %161 = "aie.buffer"(%22) <{mem_bank = 0 : i32, sym_name = "buf74"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %162 = "aie.buffer"(%22) <{mem_bank = 0 : i32, sym_name = "buf73"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %163 = "aie.buffer"(%22) <{mem_bank = 0 : i32, sym_name = "buf72"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %164 = "aie.buffer"(%22) <{mem_bank = 0 : i32, sym_name = "buf71"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %165 = "aie.buffer"(%22) <{mem_bank = 0 : i32, sym_name = "buf70"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %166 = "aie.buffer"(%21) <{mem_bank = 0 : i32, sym_name = "buf69"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %167 = "aie.buffer"(%21) <{mem_bank = 0 : i32, sym_name = "buf68"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %168 = "aie.buffer"(%21) <{mem_bank = 0 : i32, sym_name = "buf67"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %169 = "aie.buffer"(%21) <{mem_bank = 0 : i32, sym_name = "buf66"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %170 = "aie.buffer"(%21) <{mem_bank = 0 : i32, sym_name = "buf65"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %171 = "aie.buffer"(%20) <{mem_bank = 0 : i32, sym_name = "buf64"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %172 = "aie.buffer"(%20) <{mem_bank = 0 : i32, sym_name = "buf63"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %173 = "aie.buffer"(%20) <{mem_bank = 0 : i32, sym_name = "buf62"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %174 = "aie.buffer"(%20) <{mem_bank = 0 : i32, sym_name = "buf61"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %175 = "aie.buffer"(%20) <{mem_bank = 0 : i32, sym_name = "buf60"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %176 = "aie.buffer"(%19) <{mem_bank = 0 : i32, sym_name = "buf59"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %177 = "aie.buffer"(%19) <{mem_bank = 0 : i32, sym_name = "buf58"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %178 = "aie.buffer"(%19) <{mem_bank = 0 : i32, sym_name = "buf57"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %179 = "aie.buffer"(%19) <{mem_bank = 0 : i32, sym_name = "buf56"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %180 = "aie.buffer"(%19) <{mem_bank = 0 : i32, sym_name = "buf55"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %181 = "aie.buffer"(%18) <{mem_bank = 0 : i32, sym_name = "buf54"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %182 = "aie.buffer"(%18) <{mem_bank = 0 : i32, sym_name = "buf53"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %183 = "aie.buffer"(%18) <{mem_bank = 0 : i32, sym_name = "buf52"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %184 = "aie.buffer"(%18) <{mem_bank = 0 : i32, sym_name = "buf51"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %185 = "aie.buffer"(%18) <{mem_bank = 0 : i32, sym_name = "buf50"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %186 = "aie.buffer"(%17) <{mem_bank = 0 : i32, sym_name = "buf49"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %187 = "aie.buffer"(%17) <{mem_bank = 0 : i32, sym_name = "buf48"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %188 = "aie.buffer"(%17) <{mem_bank = 0 : i32, sym_name = "buf47"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %189 = "aie.buffer"(%17) <{mem_bank = 0 : i32, sym_name = "buf46"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %190 = "aie.buffer"(%17) <{mem_bank = 0 : i32, sym_name = "buf45"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %191 = "aie.buffer"(%16) <{mem_bank = 0 : i32, sym_name = "buf44"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %192 = "aie.buffer"(%16) <{mem_bank = 0 : i32, sym_name = "buf43"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %193 = "aie.buffer"(%16) <{mem_bank = 0 : i32, sym_name = "buf42"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %194 = "aie.buffer"(%16) <{mem_bank = 0 : i32, sym_name = "buf41"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %195 = "aie.buffer"(%16) <{mem_bank = 0 : i32, sym_name = "buf40"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %196 = "aie.buffer"(%15) <{mem_bank = 0 : i32, sym_name = "buf39"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %197 = "aie.buffer"(%15) <{mem_bank = 0 : i32, sym_name = "buf38"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %198 = "aie.buffer"(%15) <{mem_bank = 0 : i32, sym_name = "buf37"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %199 = "aie.buffer"(%15) <{mem_bank = 0 : i32, sym_name = "buf36"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %200 = "aie.buffer"(%15) <{mem_bank = 0 : i32, sym_name = "buf35"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %201 = "aie.buffer"(%14) <{mem_bank = 0 : i32, sym_name = "buf34"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %202 = "aie.buffer"(%14) <{mem_bank = 0 : i32, sym_name = "buf33"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %203 = "aie.buffer"(%14) <{mem_bank = 0 : i32, sym_name = "buf32"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %204 = "aie.buffer"(%14) <{mem_bank = 0 : i32, sym_name = "buf31"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %205 = "aie.buffer"(%14) <{mem_bank = 0 : i32, sym_name = "buf30"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %206 = "aie.buffer"(%13) <{mem_bank = 0 : i32, sym_name = "buf29"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %207 = "aie.buffer"(%13) <{mem_bank = 0 : i32, sym_name = "buf28"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %208 = "aie.buffer"(%13) <{mem_bank = 0 : i32, sym_name = "buf27"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %209 = "aie.buffer"(%13) <{mem_bank = 0 : i32, sym_name = "buf26"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %210 = "aie.buffer"(%13) <{mem_bank = 0 : i32, sym_name = "buf25"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %211 = "aie.buffer"(%12) <{mem_bank = 0 : i32, sym_name = "buf24"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %212 = "aie.buffer"(%12) <{mem_bank = 0 : i32, sym_name = "buf23"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %213 = "aie.buffer"(%12) <{mem_bank = 0 : i32, sym_name = "buf22"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %214 = "aie.buffer"(%12) <{mem_bank = 0 : i32, sym_name = "buf21"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %215 = "aie.buffer"(%12) <{mem_bank = 0 : i32, sym_name = "buf20"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %216 = "aie.buffer"(%11) <{mem_bank = 0 : i32, sym_name = "buf19"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %217 = "aie.buffer"(%11) <{mem_bank = 0 : i32, sym_name = "buf18"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %218 = "aie.buffer"(%11) <{mem_bank = 0 : i32, sym_name = "buf17"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %219 = "aie.buffer"(%11) <{mem_bank = 0 : i32, sym_name = "buf16"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %220 = "aie.buffer"(%11) <{mem_bank = 0 : i32, sym_name = "buf15"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %221 = "aie.buffer"(%10) <{mem_bank = 0 : i32, sym_name = "buf14"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %222 = "aie.buffer"(%10) <{mem_bank = 0 : i32, sym_name = "buf13"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %223 = "aie.buffer"(%10) <{mem_bank = 0 : i32, sym_name = "buf12"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %224 = "aie.buffer"(%10) <{mem_bank = 0 : i32, sym_name = "buf11"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %225 = "aie.buffer"(%10) <{mem_bank = 0 : i32, sym_name = "buf10"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %226 = "aie.buffer"(%9) <{mem_bank = 0 : i32, sym_name = "buf9"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %227 = "aie.buffer"(%9) <{mem_bank = 0 : i32, sym_name = "buf8"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %228 = "aie.buffer"(%9) <{mem_bank = 0 : i32, sym_name = "buf7"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %229 = "aie.buffer"(%9) <{mem_bank = 0 : i32, sym_name = "buf6"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %230 = "aie.buffer"(%9) <{mem_bank = 0 : i32, sym_name = "buf5"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %231 = "aie.buffer"(%8) <{mem_bank = 0 : i32, sym_name = "buf4"}> : (index) -> memref<16x16x4x4xf32, 2 : i32>
      %232 = "aie.buffer"(%8) <{mem_bank = 0 : i32, sym_name = "buf3"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %233 = "aie.buffer"(%8) <{mem_bank = 0 : i32, sym_name = "buf2"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %234 = "aie.buffer"(%8) <{mem_bank = 0 : i32, sym_name = "buf1"}> : (index) -> memref<8x16x4x8xbf16, 2 : i32>
      %235 = "aie.buffer"(%8) <{mem_bank = 0 : i32, sym_name = "buf0"}> : (index) -> memref<8x16x8x4xbf16, 2 : i32>
      %236 = "aie.mem"(%23) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%140) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%159) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%141) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%140) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%158) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%141) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%138) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%160) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%139) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%138) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%157) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%139) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%143) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%156) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%142) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %237 = "aie.core"(%23) <{elf_file = "segment_0_core_3_5.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0 : index}> : () -> index
        %278 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %279 = "arith.constant"() <{value = 4 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%142) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%277, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %279, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %279, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%278, %156, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%277, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%141) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%139) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%159, %arg3, %arg1, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%160, %arg3, %arg2, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%156, %arg2, %arg1, %277, %277, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %156, %arg2, %arg1, %277, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%140) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%138) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%141) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%139) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%158, %arg3, %arg1, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%157, %arg3, %arg2, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%156, %arg2, %arg1, %277, %277, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %156, %arg2, %arg1, %277, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%140) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%138) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%143) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %238 = "aie.mem"(%22) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%134) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%164) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%135) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%134) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%163) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%135) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%132) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%165) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%133) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%132) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%162) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%133) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%137) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%161) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%136) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %239 = "aie.core"(%22) <{elf_file = "segment_0_core_2_5.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0 : index}> : () -> index
        %278 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %279 = "arith.constant"() <{value = 4 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%136) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%277, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %279, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %279, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%278, %161, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%277, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%135) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%133) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%164, %arg3, %arg1, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%165, %arg3, %arg2, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%161, %arg2, %arg1, %277, %277, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %161, %arg2, %arg1, %277, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%134) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%132) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%135) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%133) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%163, %arg3, %arg1, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%162, %arg3, %arg2, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%161, %arg2, %arg1, %277, %277, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %161, %arg2, %arg1, %277, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%134) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%132) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%137) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %240 = "aie.mem"(%21) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%128) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%169) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%129) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%128) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%168) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%129) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%126) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%170) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%127) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%126) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%167) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%127) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%131) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%166) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%130) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %241 = "aie.core"(%21) <{elf_file = "segment_0_core_1_5.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 32 : index}> : () -> index
        %274 = "arith.constant"() <{value = 16 : index}> : () -> index
        %275 = "arith.constant"() <{value = 8 : index}> : () -> index
        %276 = "arith.constant"() <{value = 0 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 1 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%130) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%276, %274, %279) ({
        ^bb0(%arg0: index):
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %278, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %278, %279) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %166, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%276, %273, %274) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%129) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%127) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%169, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%170, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%166, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %166, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%128) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%126) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%129) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%127) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%168, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%167, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%166, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %166, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%128) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%126) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%131) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %242 = "aie.mem"(%20) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%122) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%174) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%123) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%122) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%173) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%123) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%120) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%175) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%121) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%120) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%172) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%121) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%125) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%171) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%124) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %243 = "aie.core"(%20) <{elf_file = "segment_0_core_0_5.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 0 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%124) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%279, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %278, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %278, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %171, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%279, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%123) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%121) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%174, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%175, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%171, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %171, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%122) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%120) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%123) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%121) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%173, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%172, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%171, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %171, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%122) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%120) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%125) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %244 = "aie.mem"(%19) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%116) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%179) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%117) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%116) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%178) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%117) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%114) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%180) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%115) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%114) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%177) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%115) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%119) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%176) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%118) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %245 = "aie.core"(%19) <{elf_file = "segment_0_core_3_4.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0 : index}> : () -> index
        %278 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %279 = "arith.constant"() <{value = 4 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%118) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%277, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %279, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %279, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%278, %176, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%277, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%117) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%115) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%179, %arg3, %arg1, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%180, %arg3, %arg2, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%176, %arg2, %arg1, %277, %277, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %176, %arg2, %arg1, %277, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%116) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%114) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%117) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%115) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%178, %arg3, %arg1, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%177, %arg3, %arg2, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%176, %arg2, %arg1, %277, %277, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %176, %arg2, %arg1, %277, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%116) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%114) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%119) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %246 = "aie.mem"(%18) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%110) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%184) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%111) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%110) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%183) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%111) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%108) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%185) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%109) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%108) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%182) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%109) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%113) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%181) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%112) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %247 = "aie.core"(%18) <{elf_file = "segment_0_core_2_4.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0 : index}> : () -> index
        %278 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %279 = "arith.constant"() <{value = 4 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%112) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%277, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %279, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %279, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%278, %181, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%277, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%111) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%109) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%184, %arg3, %arg1, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%185, %arg3, %arg2, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%181, %arg2, %arg1, %277, %277, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %181, %arg2, %arg1, %277, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%110) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%108) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%111) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%109) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%277, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%277, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%277, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%183, %arg3, %arg1, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%182, %arg3, %arg2, %277, %277, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%181, %arg2, %arg1, %277, %277, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %181, %arg2, %arg1, %277, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%110) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%108) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%113) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %248 = "aie.mem"(%17) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%104) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%189) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%105) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%104) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%188) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%105) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%102) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%190) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%103) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%102) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%187) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%103) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%107) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%186) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%106) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %249 = "aie.core"(%17) <{elf_file = "segment_0_core_1_4.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 32 : index}> : () -> index
        %274 = "arith.constant"() <{value = 16 : index}> : () -> index
        %275 = "arith.constant"() <{value = 8 : index}> : () -> index
        %276 = "arith.constant"() <{value = 0 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 1 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%106) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%276, %274, %279) ({
        ^bb0(%arg0: index):
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %278, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %278, %279) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %186, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%276, %273, %274) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%105) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%103) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%189, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%190, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%186, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %186, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%104) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%102) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%105) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%103) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%188, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%187, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%186, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %186, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%104) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%102) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%107) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %250 = "aie.mem"(%16) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%98) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%194) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%99) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%98) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%193) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%99) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%96) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%195) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%97) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%96) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%192) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%97) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%101) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%191) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%100) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %251 = "aie.core"(%16) <{elf_file = "segment_0_core_0_4.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 0 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%100) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%279, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %278, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %278, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %191, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%279, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%99) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%97) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%194, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%195, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%191, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %191, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%98) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%96) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%99) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%97) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%193, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%192, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%191, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %191, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%98) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%96) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%101) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %252 = "aie.mem"(%15) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%92) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%199) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%93) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%92) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%198) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%93) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%90) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%200) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%91) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%90) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%197) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%91) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%95) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%196) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%94) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %253 = "aie.core"(%15) <{elf_file = "segment_0_core_3_3.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 32 : index}> : () -> index
        %274 = "arith.constant"() <{value = 16 : index}> : () -> index
        %275 = "arith.constant"() <{value = 8 : index}> : () -> index
        %276 = "arith.constant"() <{value = 0 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 1 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%94) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%276, %274, %279) ({
        ^bb0(%arg0: index):
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %278, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %278, %279) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %196, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%276, %273, %274) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%93) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%91) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%199, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%200, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%196, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %196, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%92) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%90) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%93) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%91) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%198, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%197, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%196, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %196, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%92) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%90) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%95) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %254 = "aie.mem"(%14) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%86) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%204) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%87) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%86) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%203) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%87) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%84) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%205) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%85) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%84) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%202) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%85) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%89) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%201) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%88) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %255 = "aie.core"(%14) <{elf_file = "segment_0_core_2_3.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 32 : index}> : () -> index
        %274 = "arith.constant"() <{value = 16 : index}> : () -> index
        %275 = "arith.constant"() <{value = 8 : index}> : () -> index
        %276 = "arith.constant"() <{value = 0 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 1 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%88) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%276, %274, %279) ({
        ^bb0(%arg0: index):
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %278, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %278, %279) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %201, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%276, %273, %274) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%87) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%85) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%204, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%205, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%201, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %201, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%86) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%84) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%87) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%85) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%203, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%202, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%201, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %201, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%86) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%84) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%89) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %256 = "aie.mem"(%13) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%80) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%209) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%81) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%80) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%208) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%81) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%78) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%210) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%79) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%78) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%207) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%79) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%83) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%206) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%82) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %257 = "aie.core"(%13) <{elf_file = "segment_0_core_1_3.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 32 : index}> : () -> index
        %274 = "arith.constant"() <{value = 16 : index}> : () -> index
        %275 = "arith.constant"() <{value = 8 : index}> : () -> index
        %276 = "arith.constant"() <{value = 0 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 1 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%82) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%276, %274, %279) ({
        ^bb0(%arg0: index):
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %278, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %278, %279) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %206, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%276, %273, %274) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%81) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%79) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%209, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%210, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%206, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %206, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%80) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%78) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%81) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%79) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%276, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%276, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%276, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%208, %arg3, %arg1, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%207, %arg3, %arg2, %276, %276, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%206, %arg2, %arg1, %276, %276, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %206, %arg2, %arg1, %276, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%80) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%78) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%83) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %258 = "aie.mem"(%12) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%74) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%214) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%75) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%74) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%213) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%75) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%72) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%215) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%73) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%72) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%212) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%73) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%77) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%211) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%76) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %259 = "aie.core"(%12) <{elf_file = "segment_0_core_0_3.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 32 : index}> : () -> index
        %274 = "arith.constant"() <{value = 16 : index}> : () -> index
        %275 = "arith.constant"() <{value = 8 : index}> : () -> index
        %276 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %277 = "arith.constant"() <{value = 4 : index}> : () -> index
        %278 = "arith.constant"() <{value = 1 : index}> : () -> index
        %279 = "arith.constant"() <{value = 0 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%76) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%279, %274, %278) ({
        ^bb0(%arg0: index):
          "scf.for"(%279, %274, %278) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %277, %278) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %277, %278) ({
              ^bb0(%arg3: index):
                "memref.store"(%276, %211, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%279, %273, %274) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%75) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%73) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %274, %278) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %274, %278) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %275, %278) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%214, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%215, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%211, %arg2, %arg1, %279, %279, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %211, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%74) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%72) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%75) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%73) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %274, %278) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %274, %278) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %275, %278) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%213, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%212, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%211, %arg2, %arg1, %279, %279, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %211, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%74) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%72) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%77) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %260 = "aie.mem"(%11) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%68) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%219) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%69) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%68) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%218) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%69) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%66) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%220) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%67) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%66) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%217) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%67) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%71) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%216) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%70) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %261 = "aie.core"(%11) <{elf_file = "segment_0_core_3_2.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 0 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%70) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%279, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %278, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %278, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %216, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%279, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%69) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%67) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%219, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%220, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%216, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %216, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%68) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%66) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%69) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%67) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%218, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%217, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%216, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %216, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%68) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%66) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%71) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %262 = "aie.mem"(%10) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%62) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%224) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%63) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%62) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%223) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%63) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%60) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%225) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%61) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%60) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%222) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%61) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%65) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%221) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%64) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %263 = "aie.core"(%10) <{elf_file = "segment_0_core_2_2.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 0 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%64) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%279, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %278, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %278, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %221, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%279, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%63) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%61) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%224, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%225, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%221, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %221, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%62) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%60) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%63) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%61) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%223, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%222, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%221, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %221, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%62) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%60) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%65) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %264 = "aie.mem"(%9) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%56) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%229) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%57) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%56) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%228) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%57) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%54) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%230) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%55) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%54) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%227) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%55) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%59) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%226) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%58) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %265 = "aie.core"(%9) <{elf_file = "segment_0_core_1_2.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 32 : index}> : () -> index
        %274 = "arith.constant"() <{value = 16 : index}> : () -> index
        %275 = "arith.constant"() <{value = 8 : index}> : () -> index
        %276 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %277 = "arith.constant"() <{value = 4 : index}> : () -> index
        %278 = "arith.constant"() <{value = 0 : index}> : () -> index
        %279 = "arith.constant"() <{value = 1 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%58) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%278, %274, %279) ({
        ^bb0(%arg0: index):
          "scf.for"(%278, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%278, %277, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%278, %277, %279) ({
              ^bb0(%arg3: index):
                "memref.store"(%276, %226, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%278, %273, %274) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%57) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%55) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%278, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%278, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%278, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%229, %arg3, %arg1, %278, %278, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%230, %arg3, %arg2, %278, %278, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%226, %arg2, %arg1, %278, %278, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %226, %arg2, %arg1, %278, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%56) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%54) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%57) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%55) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%278, %274, %279) ({
          ^bb0(%arg1: index):
            "scf.for"(%278, %274, %279) ({
            ^bb0(%arg2: index):
              "scf.for"(%278, %275, %279) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%228, %arg3, %arg1, %278, %278, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%227, %arg3, %arg2, %278, %278, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%226, %arg2, %arg1, %278, %278, %276) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %226, %arg2, %arg1, %278, %278) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%56) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%54) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%59) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      %266 = "aie.mem"(%8) ({
        %272 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%50) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%234) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%51) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%50) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%233) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%51) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb3:  // pred: ^bb4
        "aie.end"() : () -> ()
      ^bb4:  // pred: ^bb7
        %273 = "aie.dma_start"()[^bb5, ^bb3] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb5:  // 2 preds: ^bb4, ^bb6
        "aie.use_lock"(%48) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%235) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%49) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%48) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%232) <{len = 4096 : i32, offset = 0 : i32}> : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%49) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb5] : () -> ()
      ^bb7:  // pred: ^bb0
        %274 = "aie.dma_start"()[^bb8, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%53) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%231) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%52) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %267 = "aie.core"(%8) <{elf_file = "segment_0_core_0_2.elf", stack_size = 1024 : i32}> ({
        %272 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %273 = "arith.constant"() <{value = 1 : index}> : () -> index
        %274 = "arith.constant"() <{value = 32 : index}> : () -> index
        %275 = "arith.constant"() <{value = 16 : index}> : () -> index
        %276 = "arith.constant"() <{value = 8 : index}> : () -> index
        %277 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %278 = "arith.constant"() <{value = 4 : index}> : () -> index
        %279 = "arith.constant"() <{value = 0 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb2
        "aie.use_lock"(%52) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "scf.for"(%279, %275, %273) ({
        ^bb0(%arg0: index):
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %278, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %278, %273) ({
              ^bb0(%arg3: index):
                "memref.store"(%277, %231, %arg0, %arg1, %arg2, %arg3) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%279, %274, %275) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%51) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%49) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%234, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%235, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%231, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %231, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%50) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%48) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%51) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%49) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%279, %275, %273) ({
          ^bb0(%arg1: index):
            "scf.for"(%279, %275, %273) ({
            ^bb0(%arg2: index):
              "scf.for"(%279, %276, %273) ({
              ^bb0(%arg3: index):
                %280 = "vector.transfer_read"(%233, %arg3, %arg1, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                %281 = "vector.transfer_read"(%232, %arg3, %arg2, %279, %279, %272) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                %282 = "vector.transfer_read"(%231, %arg2, %arg1, %279, %279, %277) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                %283 = "arith.extf"(%280) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                %284 = "arith.extf"(%281) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                %285 = "vector.contract"(%283, %284, %282) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                "vector.transfer_write"(%285, %231, %arg2, %arg1, %279, %279) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%50) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%48) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%53) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      "air.channel"() <{size = [1, 1], sym_name = "channel_13"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_34"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_35"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_36"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_10"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_31"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_32"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_33"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_0"}> {broadcast_shape = [1, 4]} : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_1"}> {broadcast_shape = [1, 4]} : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_2"}> {broadcast_shape = [1, 4]} : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_3"}> {broadcast_shape = [1, 4]} : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_4"}> {broadcast_shape = [4, 1]} : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_5"}> {broadcast_shape = [4, 1]} : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_6"}> {broadcast_shape = [4, 1]} : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_7"}> {broadcast_shape = [4, 1]} : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_14"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_16"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_17"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_18"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_19"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_20"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_21"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_22"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_23"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_24"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_25"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_26"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_27"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_28"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_29"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_30"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_8"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_9"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_11"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_15"}> : () -> ()
      "aie.flow"(%0, %4) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%0, %5) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%1, %6) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%1, %7) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%2, %4) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%2, %5) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%3, %6) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%3, %7) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %0) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %0) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %1) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %1) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %8) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %12) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %16) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %20) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %9) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %13) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %17) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %21) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %10) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %14) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %18) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %22) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %11) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %15) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %19) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %23) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %8) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %9) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %10) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %11) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %12) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %13) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %14) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %15) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %16) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %17) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %18) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%6, %19) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %20) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %21) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %22) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%7, %23) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 2 : i32}> : (index, index) -> ()
      "aie.flow"(%8, %4) <{dest_bundle = 1 : i32, dest_channel = 2 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%9, %5) <{dest_bundle = 1 : i32, dest_channel = 2 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%10, %6) <{dest_bundle = 1 : i32, dest_channel = 2 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%11, %7) <{dest_bundle = 1 : i32, dest_channel = 2 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%12, %4) <{dest_bundle = 1 : i32, dest_channel = 3 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%13, %5) <{dest_bundle = 1 : i32, dest_channel = 3 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%14, %6) <{dest_bundle = 1 : i32, dest_channel = 3 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%15, %7) <{dest_bundle = 1 : i32, dest_channel = 3 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%16, %4) <{dest_bundle = 1 : i32, dest_channel = 4 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%17, %5) <{dest_bundle = 1 : i32, dest_channel = 4 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%18, %6) <{dest_bundle = 1 : i32, dest_channel = 4 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%19, %7) <{dest_bundle = 1 : i32, dest_channel = 4 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%20, %4) <{dest_bundle = 1 : i32, dest_channel = 5 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%21, %5) <{dest_bundle = 1 : i32, dest_channel = 5 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%22, %6) <{dest_bundle = 1 : i32, dest_channel = 5 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%23, %7) <{dest_bundle = 1 : i32, dest_channel = 5 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      %268 = "aie.memtile_dma"(%4) ({
        %272 = "aie.dma_start"()[^bb1, ^bb17] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%46) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%144) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%47) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb2:  // pred: ^bb3
        "aie.end"() : () -> ()
      ^bb3:  // pred: ^bb5
        %273 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb4:  // 2 preds: ^bb3, ^bb4
        "aie.use_lock"(%44) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%148) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%45) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb4] : () -> ()
      ^bb5:  // pred: ^bb7
        %274 = "aie.dma_start"()[^bb6, ^bb3] <{channel_dir = 0 : i32, channel_index = 2 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb6
        "aie.use_lock"(%42) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%152) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%43) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb7:  // pred: ^bb9
        %275 = "aie.dma_start"()[^bb8, ^bb5] <{channel_dir = 0 : i32, channel_index = 3 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%42) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%152) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 64 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%43) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      ^bb9:  // pred: ^bb11
        %276 = "aie.dma_start"()[^bb10, ^bb7] <{channel_dir = 0 : i32, channel_index = 4 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb10:  // 2 preds: ^bb9, ^bb10
        "aie.use_lock"(%42) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%152) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 128 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%43) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb10] : () -> ()
      ^bb11:  // pred: ^bb13
        %277 = "aie.dma_start"()[^bb12, ^bb9] <{channel_dir = 0 : i32, channel_index = 5 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb12:  // 2 preds: ^bb11, ^bb12
        "aie.use_lock"(%42) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%152) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 192 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%43) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb12] : () -> ()
      ^bb13:  // pred: ^bb15
        %278 = "aie.dma_start"()[^bb14, ^bb11] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb14:  // 2 preds: ^bb13, ^bb14
        "aie.use_lock"(%43) <{acq_en = true, action = 2 : i32, value = 4 : i32}> : (index) -> ()
        "aie.dma_bd"(%152) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%42) <{acq_en = true, action = 1 : i32, value = 4 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb14] : () -> ()
      ^bb15:  // pred: ^bb17
        %279 = "aie.dma_start"()[^bb16, ^bb13] <{channel_dir = 1 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb16:  // 2 preds: ^bb15, ^bb16
        "aie.use_lock"(%47) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%144) <{dimensions = #aie<bd_dim_layout_arr[<size = 32, stride = 8>, <size = 64, stride = 256>, <size = 8, stride = 1>]>, len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%46) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb16] : () -> ()
      ^bb17:  // pred: ^bb0
        %280 = "aie.dma_start"()[^bb18, ^bb15] <{channel_dir = 1 : i32, channel_index = 2 : i32, repeat_count = 4 : i32}> : () -> i1
      ^bb18:  // 2 preds: ^bb17, ^bb18
        "aie.use_lock"(%45) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%148) <{dimensions = #aie<bd_dim_layout_arr[<size = 8, stride = 8>, <size = 16, stride = 1024>, <size = 8, stride = 1>, <size = 4, stride = 256>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%44) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb18] : () -> ()
      }) : (index) -> index
      %269 = "aie.memtile_dma"(%5) ({
        %272 = "aie.dma_start"()[^bb1, ^bb17] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%40) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%145) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%41) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb2:  // pred: ^bb3
        "aie.end"() : () -> ()
      ^bb3:  // pred: ^bb5
        %273 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb4:  // 2 preds: ^bb3, ^bb4
        "aie.use_lock"(%38) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%149) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%39) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb4] : () -> ()
      ^bb5:  // pred: ^bb7
        %274 = "aie.dma_start"()[^bb6, ^bb3] <{channel_dir = 0 : i32, channel_index = 2 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb6
        "aie.use_lock"(%36) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%153) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%37) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb7:  // pred: ^bb9
        %275 = "aie.dma_start"()[^bb8, ^bb5] <{channel_dir = 0 : i32, channel_index = 3 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%36) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%153) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 64 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%37) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      ^bb9:  // pred: ^bb11
        %276 = "aie.dma_start"()[^bb10, ^bb7] <{channel_dir = 0 : i32, channel_index = 4 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb10:  // 2 preds: ^bb9, ^bb10
        "aie.use_lock"(%36) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%153) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 128 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%37) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb10] : () -> ()
      ^bb11:  // pred: ^bb13
        %277 = "aie.dma_start"()[^bb12, ^bb9] <{channel_dir = 0 : i32, channel_index = 5 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb12:  // 2 preds: ^bb11, ^bb12
        "aie.use_lock"(%36) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%153) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 192 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%37) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb12] : () -> ()
      ^bb13:  // pred: ^bb15
        %278 = "aie.dma_start"()[^bb14, ^bb11] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb14:  // 2 preds: ^bb13, ^bb14
        "aie.use_lock"(%37) <{acq_en = true, action = 2 : i32, value = 4 : i32}> : (index) -> ()
        "aie.dma_bd"(%153) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%36) <{acq_en = true, action = 1 : i32, value = 4 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb14] : () -> ()
      ^bb15:  // pred: ^bb17
        %279 = "aie.dma_start"()[^bb16, ^bb13] <{channel_dir = 1 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb16:  // 2 preds: ^bb15, ^bb16
        "aie.use_lock"(%41) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%145) <{dimensions = #aie<bd_dim_layout_arr[<size = 32, stride = 8>, <size = 64, stride = 256>, <size = 8, stride = 1>]>, len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%40) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb16] : () -> ()
      ^bb17:  // pred: ^bb0
        %280 = "aie.dma_start"()[^bb18, ^bb15] <{channel_dir = 1 : i32, channel_index = 2 : i32, repeat_count = 4 : i32}> : () -> i1
      ^bb18:  // 2 preds: ^bb17, ^bb18
        "aie.use_lock"(%39) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%149) <{dimensions = #aie<bd_dim_layout_arr[<size = 8, stride = 8>, <size = 16, stride = 1024>, <size = 8, stride = 1>, <size = 4, stride = 256>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%38) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb18] : () -> ()
      }) : (index) -> index
      %270 = "aie.memtile_dma"(%6) ({
        %272 = "aie.dma_start"()[^bb1, ^bb17] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%34) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%146) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%35) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb2:  // pred: ^bb3
        "aie.end"() : () -> ()
      ^bb3:  // pred: ^bb5
        %273 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb4:  // 2 preds: ^bb3, ^bb4
        "aie.use_lock"(%32) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%150) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%33) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb4] : () -> ()
      ^bb5:  // pred: ^bb7
        %274 = "aie.dma_start"()[^bb6, ^bb3] <{channel_dir = 0 : i32, channel_index = 2 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb6
        "aie.use_lock"(%30) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%154) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%31) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb7:  // pred: ^bb9
        %275 = "aie.dma_start"()[^bb8, ^bb5] <{channel_dir = 0 : i32, channel_index = 3 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%30) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%154) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 64 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%31) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      ^bb9:  // pred: ^bb11
        %276 = "aie.dma_start"()[^bb10, ^bb7] <{channel_dir = 0 : i32, channel_index = 4 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb10:  // 2 preds: ^bb9, ^bb10
        "aie.use_lock"(%30) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%154) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 128 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%31) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb10] : () -> ()
      ^bb11:  // pred: ^bb13
        %277 = "aie.dma_start"()[^bb12, ^bb9] <{channel_dir = 0 : i32, channel_index = 5 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb12:  // 2 preds: ^bb11, ^bb12
        "aie.use_lock"(%30) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%154) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 192 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%31) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb12] : () -> ()
      ^bb13:  // pred: ^bb15
        %278 = "aie.dma_start"()[^bb14, ^bb11] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb14:  // 2 preds: ^bb13, ^bb14
        "aie.use_lock"(%31) <{acq_en = true, action = 2 : i32, value = 4 : i32}> : (index) -> ()
        "aie.dma_bd"(%154) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%30) <{acq_en = true, action = 1 : i32, value = 4 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb14] : () -> ()
      ^bb15:  // pred: ^bb17
        %279 = "aie.dma_start"()[^bb16, ^bb13] <{channel_dir = 1 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb16:  // 2 preds: ^bb15, ^bb16
        "aie.use_lock"(%35) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%146) <{dimensions = #aie<bd_dim_layout_arr[<size = 32, stride = 8>, <size = 64, stride = 256>, <size = 8, stride = 1>]>, len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%34) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb16] : () -> ()
      ^bb17:  // pred: ^bb0
        %280 = "aie.dma_start"()[^bb18, ^bb15] <{channel_dir = 1 : i32, channel_index = 2 : i32, repeat_count = 4 : i32}> : () -> i1
      ^bb18:  // 2 preds: ^bb17, ^bb18
        "aie.use_lock"(%33) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%150) <{dimensions = #aie<bd_dim_layout_arr[<size = 8, stride = 8>, <size = 16, stride = 1024>, <size = 8, stride = 1>, <size = 4, stride = 256>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%32) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb18] : () -> ()
      }) : (index) -> index
      %271 = "aie.memtile_dma"(%7) ({
        %272 = "aie.dma_start"()[^bb1, ^bb17] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%28) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%147) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%29) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb2:  // pred: ^bb3
        "aie.end"() : () -> ()
      ^bb3:  // pred: ^bb5
        %273 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb4:  // 2 preds: ^bb3, ^bb4
        "aie.use_lock"(%26) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%151) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%27) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb4] : () -> ()
      ^bb5:  // pred: ^bb7
        %274 = "aie.dma_start"()[^bb6, ^bb3] <{channel_dir = 0 : i32, channel_index = 2 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb6
        "aie.use_lock"(%24) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%155) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%25) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb7:  // pred: ^bb9
        %275 = "aie.dma_start"()[^bb8, ^bb5] <{channel_dir = 0 : i32, channel_index = 3 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%24) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%155) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 64 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%25) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      ^bb9:  // pred: ^bb11
        %276 = "aie.dma_start"()[^bb10, ^bb7] <{channel_dir = 0 : i32, channel_index = 4 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb10:  // 2 preds: ^bb9, ^bb10
        "aie.use_lock"(%24) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%155) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 128 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%25) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb10] : () -> ()
      ^bb11:  // pred: ^bb13
        %277 = "aie.dma_start"()[^bb12, ^bb9] <{channel_dir = 0 : i32, channel_index = 5 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb12:  // 2 preds: ^bb11, ^bb12
        "aie.use_lock"(%24) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%155) <{dimensions = #aie<bd_dim_layout_arr[<size = 64, stride = 256>, <size = 64, stride = 1>]>, len = 4096 : i32, offset = 192 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%25) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb12] : () -> ()
      ^bb13:  // pred: ^bb15
        %278 = "aie.dma_start"()[^bb14, ^bb11] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb14:  // 2 preds: ^bb13, ^bb14
        "aie.use_lock"(%25) <{acq_en = true, action = 2 : i32, value = 4 : i32}> : (index) -> ()
        "aie.dma_bd"(%155) <{len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xf32, 1>) -> ()
        "aie.use_lock"(%24) <{acq_en = true, action = 1 : i32, value = 4 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb14] : () -> ()
      ^bb15:  // pred: ^bb17
        %279 = "aie.dma_start"()[^bb16, ^bb13] <{channel_dir = 1 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb16:  // 2 preds: ^bb15, ^bb16
        "aie.use_lock"(%29) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%147) <{dimensions = #aie<bd_dim_layout_arr[<size = 32, stride = 8>, <size = 64, stride = 256>, <size = 8, stride = 1>]>, len = 16384 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%28) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb16] : () -> ()
      ^bb17:  // pred: ^bb0
        %280 = "aie.dma_start"()[^bb18, ^bb15] <{channel_dir = 1 : i32, channel_index = 2 : i32, repeat_count = 4 : i32}> : () -> i1
      ^bb18:  // 2 preds: ^bb17, ^bb18
        "aie.use_lock"(%27) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%151) <{dimensions = #aie<bd_dim_layout_arr[<size = 8, stride = 8>, <size = 16, stride = 1024>, <size = 8, stride = 1>, <size = 4, stride = 256>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<64x256xbf16, 1>) -> ()
        "aie.use_lock"(%26) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb18] : () -> ()
      }) : (index) -> index
      "aie.shim_dma_allocation"() <{channel_dir = 0 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId62}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId62", sym_visibility = "public", type = memref<64x256xf32, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 0 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId63}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId63", sym_visibility = "public", type = memref<64x256xf32, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 0 : i32, channel_index = 0 : i64, col = 1 : i64, sym_name = @airMemcpyId64}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId64", sym_visibility = "public", type = memref<64x256xf32, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 0 : i32, channel_index = 1 : i64, col = 1 : i64, sym_name = @airMemcpyId65}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId65", sym_visibility = "public", type = memref<64x256xf32, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId13}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId13", sym_visibility = "public", type = memref<64x256xbf16, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId14}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId14", sym_visibility = "public", type = memref<64x256xbf16, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 1 : i64, sym_name = @airMemcpyId15}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId15", sym_visibility = "public", type = memref<64x256xbf16, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 1 : i64, sym_name = @airMemcpyId16}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId16", sym_visibility = "public", type = memref<64x256xbf16, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 2 : i64, sym_name = @airMemcpyId17}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId17", sym_visibility = "public", type = memref<64x256xbf16, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 2 : i64, sym_name = @airMemcpyId18}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId18", sym_visibility = "public", type = memref<64x256xbf16, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 3 : i64, sym_name = @airMemcpyId19}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId19", sym_visibility = "public", type = memref<64x256xbf16, 1>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 3 : i64, sym_name = @airMemcpyId20}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId20", sym_visibility = "public", type = memref<64x256xbf16, 1>}> : () -> ()
    }) {sym_name = "segment_0"} : () -> ()
    "airrt.module_metadata"() ({
      "airrt.module_metadata_terminator"() : () -> ()
    }) : () -> ()
    "air.channel"() <{size = [4, 1], sym_name = "channel_14"}> : () -> ()
    "air.channel"() <{size = [4, 1], sym_name = "channel_13"}> : () -> ()
    "air.channel"() <{size = [4, 1], sym_name = "channel_12"}> : () -> ()
    "air.channel"() <{size = [4, 4], sym_name = "channel_10"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_7"}> {broadcast_shape = [4, 1]} : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_6"}> {broadcast_shape = [4, 1]} : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_5"}> {broadcast_shape = [4, 1]} : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_4"}> {broadcast_shape = [4, 1]} : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_3"}> {broadcast_shape = [1, 4]} : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_2"}> {broadcast_shape = [1, 4]} : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_1"}> {broadcast_shape = [1, 4]} : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_0"}> {broadcast_shape = [1, 4]} : () -> ()
    "func.func"() <{function_type = () -> (), sym_name = "matmul_256x256_256xbf16__dispatch_0_matmul_transpose_b_256x256x256_bf16xbf16xf32"}> ({
      %0 = "arith.constant"() <{value = 1 : index}> : () -> index
      %1 = "arith.constant"() <{value = 0 : index}> : () -> index
      %2:2 = "air.execute"() ({
        %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 0 : index, descriptor_flags = 1 : i32, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<256x256xbf16>
        "air.execute_terminator"(%9) : (memref<256x256xbf16>) -> ()
      }) : () -> (!air.async.token, memref<256x256xbf16>)
      %3 = "air.execute"(%2#0) ({
        "memref.assume_alignment"(%2#1) <{alignment = 64 : i32}> : (memref<256x256xbf16>) -> ()
        "air.execute_terminator"() : () -> ()
      }) : (!air.async.token) -> !air.async.token
      %4:2 = "air.execute"() ({
        %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 1 : index, descriptor_flags = 1 : i32, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<256x256xbf16>
        "air.execute_terminator"(%9) : (memref<256x256xbf16>) -> ()
      }) : () -> (!air.async.token, memref<256x256xbf16>)
      %5 = "air.execute"(%4#0) ({
        "memref.assume_alignment"(%4#1) <{alignment = 64 : i32}> : (memref<256x256xbf16>) -> ()
        "air.execute_terminator"() : () -> ()
      }) : (!air.async.token) -> !air.async.token
      %6:2 = "air.execute"() ({
        %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 2 : index, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<256x256xf32>
        "air.execute_terminator"(%9) : (memref<256x256xf32>) -> ()
      }) : () -> (!air.async.token, memref<256x256xf32>)
      %7 = "air.execute"(%6#0) ({
        "memref.assume_alignment"(%6#1) <{alignment = 64 : i32}> : (memref<256x256xf32>) -> ()
        "air.execute_terminator"() : () -> ()
      }) : (!air.async.token) -> !air.async.token
      %8 = "air.launch"(%7, %5, %3, %0, %0, %2#1, %4#1, %6#1) <{operandSegmentSizes = array<i32: 3, 2, 3>}> ({
      ^bb0(%arg0: index, %arg1: index, %arg2: index, %arg3: index, %arg4: memref<256x256xbf16>, %arg5: memref<256x256xbf16>, %arg6: memref<256x256xf32>):
        %9 = "arith.constant"() <{value = 3 : index}> : () -> index
        %10 = "arith.constant"() <{value = 2 : index}> : () -> index
        %11 = "arith.constant"() <{value = 64 : index}> : () -> index
        %12 = "arith.constant"() <{value = 1 : index}> : () -> index
        %13 = "arith.constant"() <{value = 256 : index}> : () -> index
        %14 = "arith.constant"() <{value = 0 : index}> : () -> index
        %15 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 256)>}> : (index) -> index
        %16 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 256 + 64)>}> : (index) -> index
        %17 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 256 + 128)>}> : (index) -> index
        %18 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 256 + 192)>}> : (index) -> index
        %19 = "air.wait_all"() : () -> !air.async.token
        %20 = "air.channel.put"(%19, %14, %14, %arg4, %15, %14, %11, %13, %13, %12) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 1 : i32, metadata = @airMemcpyId13} : (!air.async.token, index, index, memref<256x256xbf16>, index, index, index, index, index, index) -> !air.async.token
        %21 = "air.channel.put"(%19, %12, %14, %arg4, %16, %14, %11, %13, %13, %12) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 2 : i32, metadata = @airMemcpyId14} : (!air.async.token, index, index, memref<256x256xbf16>, index, index, index, index, index, index) -> !air.async.token
        %22 = "air.channel.put"(%19, %10, %14, %arg4, %17, %14, %11, %13, %13, %12) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 3 : i32, metadata = @airMemcpyId15} : (!air.async.token, index, index, memref<256x256xbf16>, index, index, index, index, index, index) -> !air.async.token
        %23 = "air.channel.put"(%19, %9, %14, %arg4, %18, %14, %11, %13, %13, %12) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 4 : i32, metadata = @airMemcpyId16} : (!air.async.token, index, index, memref<256x256xbf16>, index, index, index, index, index, index) -> !air.async.token
        %24 = "air.wait_all"(%20, %21, %22, %23) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
        %25 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 256)>}> : (index) -> index
        %26 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 256 + 64)>}> : (index) -> index
        %27 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 256 + 128)>}> : (index) -> index
        %28 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 256 + 192)>}> : (index) -> index
        %29 = "air.wait_all"() : () -> !air.async.token
        %30 = "air.channel.put"(%29, %14, %14, %arg5, %25, %14, %11, %13, %13, %12) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 5 : i32, metadata = @airMemcpyId17} : (!air.async.token, index, index, memref<256x256xbf16>, index, index, index, index, index, index) -> !air.async.token
        %31 = "air.channel.put"(%29, %12, %14, %arg5, %26, %14, %11, %13, %13, %12) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 6 : i32, metadata = @airMemcpyId18} : (!air.async.token, index, index, memref<256x256xbf16>, index, index, index, index, index, index) -> !air.async.token
        %32 = "air.channel.put"(%29, %10, %14, %arg5, %27, %14, %11, %13, %13, %12) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 7 : i32, metadata = @airMemcpyId19} : (!air.async.token, index, index, memref<256x256xbf16>, index, index, index, index, index, index) -> !air.async.token
        %33 = "air.channel.put"(%29, %9, %14, %arg5, %28, %14, %11, %13, %13, %12) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 8 : i32, metadata = @airMemcpyId20} : (!air.async.token, index, index, memref<256x256xbf16>, index, index, index, index, index, index) -> !air.async.token
        %34 = "air.wait_all"(%30, %31, %32, %33) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
        %35 = "air.wait_all"() : () -> !air.async.token
        %36:2 = "air.execute"() ({
          "air.execute_terminator"(%25) : (index) -> ()
        }) : () -> (!air.async.token, index)
        %37 = "air.channel.get"(%36#0, %35, %14, %14, %arg6, %15, %36#1, %11, %13, %13, %12) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 9 : i32, metadata = @airMemcpyId62} : (!air.async.token, !air.async.token, index, index, memref<256x256xf32>, index, index, index, index, index, index) -> !air.async.token
        %38 = "air.channel.get"(%36#0, %35, %12, %14, %arg6, %16, %36#1, %11, %13, %13, %12) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 10 : i32, metadata = @airMemcpyId63} : (!air.async.token, !air.async.token, index, index, memref<256x256xf32>, index, index, index, index, index, index) -> !air.async.token
        %39 = "air.channel.get"(%36#0, %35, %10, %14, %arg6, %17, %36#1, %11, %13, %13, %12) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 11 : i32, metadata = @airMemcpyId64} : (!air.async.token, !air.async.token, index, index, memref<256x256xf32>, index, index, index, index, index, index) -> !air.async.token
        %40 = "air.channel.get"(%36#0, %35, %9, %14, %arg6, %18, %36#1, %11, %13, %13, %12) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 12 : i32, metadata = @airMemcpyId65} : (!air.async.token, !air.async.token, index, index, memref<256x256xf32>, index, index, index, index, index, index) -> !air.async.token
        %41 = "air.wait_all"(%37, %38, %39, %40) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
        %42 = "air.segment"() <{operandSegmentSizes = array<i32: 0, 0, 0>, sym_name = "segment_0"}> ({
          %43 = "arith.constant"() <{value = 32 : index}> : () -> index
          %44 = "arith.constant"() <{value = 3 : index}> : () -> index
          %45 = "arith.constant"() <{value = 2 : index}> : () -> index
          %46 = "arith.constant"() <{value = 192 : index}> : () -> index
          %47 = "arith.constant"() <{value = 128 : index}> : () -> index
          %48 = "arith.constant"() <{value = 1024 : index}> : () -> index
          %49 = "arith.constant"() <{value = 16 : index}> : () -> index
          %50 = "arith.constant"() <{value = 8 : index}> : () -> index
          %51 = "arith.constant"() <{value = 64 : index}> : () -> index
          %52 = "arith.constant"() <{value = 1 : index}> : () -> index
          %53 = "arith.constant"() <{value = 256 : index}> : () -> index
          %54 = "arith.constant"() <{value = 0 : index}> : () -> index
          %55 = "arith.constant"() <{value = 4 : index}> : () -> index
          %56 = "air.wait_all"() : () -> !air.async.token
          %57 = "air.wait_all"() : () -> !air.async.token
          %58:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xbf16, 1>
            "air.execute_terminator"(%124) : (memref<64x256xbf16, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xbf16, 1>)
          %59:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xbf16, 1>
            "air.execute_terminator"(%124) : (memref<64x256xbf16, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xbf16, 1>)
          %60:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xbf16, 1>
            "air.execute_terminator"(%124) : (memref<64x256xbf16, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xbf16, 1>)
          %61:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xbf16, 1>
            "air.execute_terminator"(%124) : (memref<64x256xbf16, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xbf16, 1>)
          %62 = "air.wait_all"() : () -> !air.async.token
          %63 = "air.channel.get"(%62, %56, %54, %54, %58#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> {id = 13 : i32} : (!air.async.token, !air.async.token, index, index, memref<64x256xbf16, 1>) -> !air.async.token
          %64 = "air.channel.get"(%62, %56, %52, %54, %59#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> {id = 14 : i32} : (!air.async.token, !air.async.token, index, index, memref<64x256xbf16, 1>) -> !air.async.token
          %65 = "air.channel.get"(%62, %56, %45, %54, %60#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> {id = 15 : i32} : (!air.async.token, !air.async.token, index, index, memref<64x256xbf16, 1>) -> !air.async.token
          %66 = "air.channel.get"(%62, %56, %44, %54, %61#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> {id = 16 : i32} : (!air.async.token, !air.async.token, index, index, memref<64x256xbf16, 1>) -> !air.async.token
          %67 = "air.wait_all"(%63, %64, %65, %66) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %68:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xbf16, 1>
            "air.execute_terminator"(%124) : (memref<64x256xbf16, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xbf16, 1>)
          %69:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xbf16, 1>
            "air.execute_terminator"(%124) : (memref<64x256xbf16, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xbf16, 1>)
          %70:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xbf16, 1>
            "air.execute_terminator"(%124) : (memref<64x256xbf16, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xbf16, 1>)
          %71:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xbf16, 1>
            "air.execute_terminator"(%124) : (memref<64x256xbf16, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xbf16, 1>)
          %72 = "air.wait_all"() : () -> !air.async.token
          %73 = "air.channel.get"(%72, %57, %54, %54, %68#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> {id = 17 : i32} : (!air.async.token, !air.async.token, index, index, memref<64x256xbf16, 1>) -> !air.async.token
          %74 = "air.channel.get"(%72, %57, %52, %54, %69#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> {id = 18 : i32} : (!air.async.token, !air.async.token, index, index, memref<64x256xbf16, 1>) -> !air.async.token
          %75 = "air.channel.get"(%72, %57, %45, %54, %70#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> {id = 19 : i32} : (!air.async.token, !air.async.token, index, index, memref<64x256xbf16, 1>) -> !air.async.token
          %76 = "air.channel.get"(%72, %57, %44, %54, %71#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> {id = 20 : i32} : (!air.async.token, !air.async.token, index, index, memref<64x256xbf16, 1>) -> !air.async.token
          %77 = "air.wait_all"(%73, %74, %75, %76) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %78:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xf32, 1>
            "air.execute_terminator"(%124) : (memref<64x256xf32, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xf32, 1>)
          %79:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xf32, 1>
            "air.execute_terminator"(%124) : (memref<64x256xf32, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xf32, 1>)
          %80:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xf32, 1>
            "air.execute_terminator"(%124) : (memref<64x256xf32, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xf32, 1>)
          %81:2 = "air.execute"() ({
            %124 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<64x256xf32, 1>
            "air.execute_terminator"(%124) : (memref<64x256xf32, 1>) -> ()
          }) : () -> (!air.async.token, memref<64x256xf32, 1>)
          %82 = "air.channel.put"(%58#0, %58#1, %54, %54, %54, %43, %51, %50, %50, %53, %52) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> {id = 21 : i32} : (!air.async.token, memref<64x256xbf16, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %83 = "air.channel.put"(%59#0, %59#1, %54, %54, %54, %43, %51, %50, %50, %53, %52) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> {id = 22 : i32} : (!air.async.token, memref<64x256xbf16, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %84 = "air.channel.put"(%60#0, %60#1, %54, %54, %54, %43, %51, %50, %50, %53, %52) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> {id = 23 : i32} : (!air.async.token, memref<64x256xbf16, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %85 = "air.channel.put"(%61#0, %61#1, %54, %54, %54, %43, %51, %50, %50, %53, %52) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> {id = 24 : i32} : (!air.async.token, memref<64x256xbf16, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %86 = "air.channel.put"(%68#0, %68#1, %54, %54, %54, %54, %54, %55, %50, %49, %50, %55, %54, %50, %48, %52, %53) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 1, 0, 1, 5, 5, 5>}> {id = 25 : i32} : (!air.async.token, memref<64x256xbf16, 1>, index, index, index, index, index, index, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %87 = "air.channel.put"(%69#0, %69#1, %54, %54, %54, %54, %54, %55, %50, %49, %50, %55, %54, %50, %48, %52, %53) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 1, 0, 1, 5, 5, 5>}> {id = 26 : i32} : (!air.async.token, memref<64x256xbf16, 1>, index, index, index, index, index, index, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %88 = "air.channel.put"(%70#0, %70#1, %54, %54, %54, %54, %54, %55, %50, %49, %50, %55, %54, %50, %48, %52, %53) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 1, 0, 1, 5, 5, 5>}> {id = 27 : i32} : (!air.async.token, memref<64x256xbf16, 1>, index, index, index, index, index, index, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %89 = "air.channel.put"(%71#0, %71#1, %54, %54, %54, %54, %54, %55, %50, %49, %50, %55, %54, %50, %48, %52, %53) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 1, 0, 1, 5, 5, 5>}> {id = 28 : i32} : (!air.async.token, memref<64x256xbf16, 1>, index, index, index, index, index, index, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %90 = "air.channel.get"(%54, %54, %78#1, %54, %54, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 29 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %91 = "air.channel.get"(%52, %54, %79#1, %54, %54, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 30 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %92 = "air.channel.get"(%45, %54, %80#1, %54, %54, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 31 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %93 = "air.channel.get"(%44, %54, %81#1, %54, %54, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 32 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %94 = "air.channel.get"(%54, %52, %78#1, %54, %51, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 33 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %95 = "air.channel.get"(%52, %52, %79#1, %54, %51, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 34 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %96 = "air.channel.get"(%45, %52, %80#1, %54, %51, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 35 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %97 = "air.channel.get"(%44, %52, %81#1, %54, %51, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 36 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %98 = "air.channel.get"(%54, %45, %78#1, %54, %47, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 37 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %99 = "air.channel.get"(%52, %45, %79#1, %54, %47, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 38 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %100 = "air.channel.get"(%45, %45, %80#1, %54, %47, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 39 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %101 = "air.channel.get"(%44, %45, %81#1, %54, %47, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 40 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %102 = "air.channel.get"(%54, %44, %78#1, %54, %46, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 41 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %103 = "air.channel.get"(%52, %44, %79#1, %54, %46, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 42 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %104 = "air.channel.get"(%45, %44, %80#1, %54, %46, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 43 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %105 = "air.channel.get"(%44, %44, %81#1, %54, %46, %51, %51, %53, %52) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 44 : i32} : (index, index, memref<64x256xf32, 1>, index, index, index, index, index, index) -> !air.async.token
          %106 = "air.herd"(%55, %55) <{operandSegmentSizes = array<i32: 0, 2, 0>, sym_name = "herd_0"}> ({
          ^bb0(%arg7: index, %arg8: index, %arg9: index, %arg10: index):
            %124 = "arith.constant"() <{value = 4 : index}> : () -> index
            %125 = "arith.constant"() <{value = 256 : index}> : () -> index
            %126 = "arith.constant"() <{value = 64 : index}> : () -> index
            %127 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
            %128 = "arith.constant"() <{value = 0 : index}> : () -> index
            %129 = "arith.constant"() <{value = 8 : index}> : () -> index
            %130 = "arith.constant"() <{value = 16 : index}> : () -> index
            %131 = "arith.constant"() <{value = 32 : index}> : () -> index
            %132 = "arith.constant"() <{value = 1 : index}> : () -> index
            %133 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
            %134:2 = "air.execute"() ({
              %143 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<16x16x4x4xf32, 2 : i32>
              "air.execute_terminator"(%143) : (memref<16x16x4x4xf32, 2 : i32>) -> ()
            }) : () -> (!air.async.token, memref<16x16x4x4xf32, 2 : i32>)
            %135 = "air.execute"(%134#0) ({
              "scf.for"(%128, %130, %132) ({
              ^bb0(%arg11: index):
                "scf.for"(%128, %130, %132) ({
                ^bb0(%arg12: index):
                  "scf.for"(%128, %124, %132) ({
                  ^bb0(%arg13: index):
                    "scf.for"(%128, %124, %132) ({
                    ^bb0(%arg14: index):
                      "memref.store"(%127, %134#1, %arg11, %arg12, %arg13, %arg14) <{nontemporal = false}> : (f32, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                      "scf.yield"() : () -> ()
                    }) : (index, index, index) -> ()
                    "scf.yield"() : () -> ()
                  }) : (index, index, index) -> ()
                  "scf.yield"() : () -> ()
                }) : (index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "air.execute_terminator"() : () -> ()
            }) : (!air.async.token) -> !air.async.token
            %136:2 = "air.execute"(%135) ({
              %143 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<8x16x8x4xbf16, 2 : i32>
              "air.execute_terminator"(%143) : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
            }) : (!air.async.token) -> (!air.async.token, memref<8x16x8x4xbf16, 2 : i32>)
            %137:2 = "air.execute"(%136#0) ({
              %143 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<8x16x4x8xbf16, 2 : i32>
              "air.execute_terminator"(%143) : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
            }) : (!air.async.token) -> (!air.async.token, memref<8x16x4x8xbf16, 2 : i32>)
            %138:2 = "air.execute"(%137#0) ({
              %143 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<8x16x4x8xbf16, 2 : i32>
              "air.execute_terminator"(%143) : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
            }) : (!air.async.token) -> (!air.async.token, memref<8x16x4x8xbf16, 2 : i32>)
            %139:2 = "air.execute"(%137#0) ({
              %143 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<8x16x8x4xbf16, 2 : i32>
              "air.execute_terminator"(%143) : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
            }) : (!air.async.token) -> (!air.async.token, memref<8x16x8x4xbf16, 2 : i32>)
            %140:3 = "scf.for"(%128, %131, %130, %138#0, %139#0, %139#0) ({
            ^bb0(%arg11: index, %arg12: !air.async.token, %arg13: !air.async.token, %arg14: !air.async.token):
              %143 = "affine.if"(%arg7, %arg8) ({
                %158 = "air.channel.get"(%arg14, %138#0, %arg12, %arg7, %arg8, %138#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 45 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x4x8xbf16, 2 : i32>) -> !air.async.token
                "affine.yield"(%158) : (!air.async.token) -> ()
              }, {
                %158 = "affine.if"(%arg7, %arg8) ({
                  %159 = "air.channel.get"(%arg14, %138#0, %arg12, %arg7, %arg8, %138#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 46 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x4x8xbf16, 2 : i32>) -> !air.async.token
                  "affine.yield"(%159) : (!air.async.token) -> ()
                }, {
                  %159 = "affine.if"(%arg7, %arg8) ({
                    %160 = "air.channel.get"(%arg14, %138#0, %arg12, %arg7, %arg8, %138#1) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 47 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x4x8xbf16, 2 : i32>) -> !air.async.token
                    "affine.yield"(%160) : (!air.async.token) -> ()
                  }, {
                    %160 = "air.channel.get"(%arg14, %138#0, %arg12, %arg7, %arg8, %138#1) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 48 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x4x8xbf16, 2 : i32>) -> !air.async.token
                    "affine.yield"(%160) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 - 2 == 0, s1 >= 0, -s1 + 3 >= 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%159) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 - 1 == 0, s1 >= 0, -s1 + 3 >= 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%158) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 == 0, s1 >= 0, -s1 + 3 >= 0)>} : (index, index) -> !air.async.token
              %144 = "affine.if"(%arg7, %arg8) ({
                %158 = "air.channel.get"(%arg14, %139#0, %arg12, %arg7, %arg8, %139#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 49 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x8x4xbf16, 2 : i32>) -> !air.async.token
                "affine.yield"(%158) : (!air.async.token) -> ()
              }, {
                %158 = "affine.if"(%arg7, %arg8) ({
                  %159 = "air.channel.get"(%arg14, %139#0, %arg12, %arg7, %arg8, %139#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 50 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x8x4xbf16, 2 : i32>) -> !air.async.token
                  "affine.yield"(%159) : (!air.async.token) -> ()
                }, {
                  %159 = "affine.if"(%arg7, %arg8) ({
                    %160 = "air.channel.get"(%arg14, %139#0, %arg12, %arg7, %arg8, %139#1) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 51 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x8x4xbf16, 2 : i32>) -> !air.async.token
                    "affine.yield"(%160) : (!air.async.token) -> ()
                  }, {
                    %160 = "air.channel.get"(%arg14, %139#0, %arg12, %arg7, %arg8, %139#1) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 52 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x8x4xbf16, 2 : i32>) -> !air.async.token
                    "affine.yield"(%160) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 3 >= 0, s1 - 2 == 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%159) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 3 >= 0, s1 - 1 == 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%158) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 3 >= 0, s1 == 0)>} : (index, index) -> !air.async.token
              %145 = "air.wait_all"(%arg14, %arg12, %139#0, %138#0) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
              %146 = "scf.for"(%128, %130, %132, %145) ({
              ^bb0(%arg15: index, %arg16: !air.async.token):
                %158 = "scf.for"(%128, %130, %132, %arg16) ({
                ^bb0(%arg17: index, %arg18: !air.async.token):
                  %159 = "scf.for"(%128, %129, %132, %arg18) ({
                  ^bb0(%arg19: index, %arg20: !air.async.token):
                    %160:2 = "air.execute"(%arg20) ({
                      %168 = "vector.transfer_read"(%138#1, %arg19, %arg15, %128, %128, %133) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                      "air.execute_terminator"(%168) : (vector<1x1x4x8xbf16>) -> ()
                    }) : (!air.async.token) -> (!air.async.token, vector<1x1x4x8xbf16>)
                    %161:2 = "air.execute"(%arg20) ({
                      %168 = "vector.transfer_read"(%139#1, %arg19, %arg17, %128, %128, %133) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                      "air.execute_terminator"(%168) : (vector<1x1x8x4xbf16>) -> ()
                    }) : (!air.async.token) -> (!air.async.token, vector<1x1x8x4xbf16>)
                    %162:2 = "air.execute"(%arg20) ({
                      %168 = "vector.transfer_read"(%134#1, %arg17, %arg15, %128, %128, %127) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                      "air.execute_terminator"(%168) : (vector<1x1x4x4xf32>) -> ()
                    }) : (!air.async.token) -> (!air.async.token, vector<1x1x4x4xf32>)
                    %163 = "arith.extf"(%160#1) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                    %164 = "arith.extf"(%161#1) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                    %165 = "vector.contract"(%163, %164, %162#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                    %166 = "air.execute"(%162#0) ({
                      "vector.transfer_write"(%165, %134#1, %arg17, %arg15, %128, %128) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                      "air.execute_terminator"() : () -> ()
                    }) : (!air.async.token) -> !air.async.token
                    %167 = "air.wait_all"(%166, %161#0, %160#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
                    "scf.yield"(%167) : (!air.async.token) -> ()
                  }) : (index, index, index, !air.async.token) -> !air.async.token
                  "scf.yield"(%159) : (!air.async.token) -> ()
                }) : (index, index, index, !air.async.token) -> !air.async.token
                "scf.yield"(%158) : (!air.async.token) -> ()
              }) : (index, index, index, !air.async.token) -> !air.async.token
              %147 = "air.execute"() ({
                "memref.dealloc"(%138#1) : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
                "air.execute_terminator"() : () -> ()
              }) : () -> !air.async.token
              %148 = "air.execute"() ({
                "memref.dealloc"(%139#1) : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
                "air.execute_terminator"() : () -> ()
              }) : () -> !air.async.token
              %149 = "air.wait_all"(%146, %144, %143) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
              %150 = "affine.if"(%arg7, %arg8) ({
                %158 = "air.channel.get"(%144, %143, %arg13, %arg7, %arg8, %137#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 53 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x4x8xbf16, 2 : i32>) -> !air.async.token
                "affine.yield"(%158) : (!air.async.token) -> ()
              }, {
                %158 = "affine.if"(%arg7, %arg8) ({
                  %159 = "air.channel.get"(%144, %143, %arg13, %arg7, %arg8, %137#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 54 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x4x8xbf16, 2 : i32>) -> !air.async.token
                  "affine.yield"(%159) : (!air.async.token) -> ()
                }, {
                  %159 = "affine.if"(%arg7, %arg8) ({
                    %160 = "air.channel.get"(%144, %143, %arg13, %arg7, %arg8, %137#1) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 55 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x4x8xbf16, 2 : i32>) -> !air.async.token
                    "affine.yield"(%160) : (!air.async.token) -> ()
                  }, {
                    %160 = "air.channel.get"(%144, %143, %arg13, %arg7, %arg8, %137#1) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 56 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x4x8xbf16, 2 : i32>) -> !air.async.token
                    "affine.yield"(%160) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 - 2 == 0, s1 >= 0, -s1 + 3 >= 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%159) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 - 1 == 0, s1 >= 0, -s1 + 3 >= 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%158) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 == 0, s1 >= 0, -s1 + 3 >= 0)>} : (index, index) -> !air.async.token
              %151 = "affine.if"(%arg7, %arg8) ({
                %158 = "air.channel.get"(%144, %143, %arg13, %arg7, %arg8, %136#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 57 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x8x4xbf16, 2 : i32>) -> !air.async.token
                "affine.yield"(%158) : (!air.async.token) -> ()
              }, {
                %158 = "affine.if"(%arg7, %arg8) ({
                  %159 = "air.channel.get"(%144, %143, %arg13, %arg7, %arg8, %136#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 58 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x8x4xbf16, 2 : i32>) -> !air.async.token
                  "affine.yield"(%159) : (!air.async.token) -> ()
                }, {
                  %159 = "affine.if"(%arg7, %arg8) ({
                    %160 = "air.channel.get"(%144, %143, %arg13, %arg7, %arg8, %136#1) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 59 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x8x4xbf16, 2 : i32>) -> !air.async.token
                    "affine.yield"(%160) : (!air.async.token) -> ()
                  }, {
                    %160 = "air.channel.get"(%144, %143, %arg13, %arg7, %arg8, %136#1) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 60 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<8x16x8x4xbf16, 2 : i32>) -> !air.async.token
                    "affine.yield"(%160) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 3 >= 0, s1 - 2 == 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%159) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 3 >= 0, s1 - 1 == 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%158) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 3 >= 0, s1 == 0)>} : (index, index) -> !air.async.token
              %152 = "air.wait_all"(%144, %143, %arg13) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
              %153 = "scf.for"(%128, %130, %132, %152) ({
              ^bb0(%arg15: index, %arg16: !air.async.token):
                %158 = "scf.for"(%128, %130, %132, %arg16) ({
                ^bb0(%arg17: index, %arg18: !air.async.token):
                  %159 = "scf.for"(%128, %129, %132, %arg18) ({
                  ^bb0(%arg19: index, %arg20: !air.async.token):
                    %160:2 = "air.execute"(%arg20) ({
                      %168 = "vector.transfer_read"(%137#1, %arg19, %arg15, %128, %128, %133) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x4x8xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x4x8xbf16>
                      "air.execute_terminator"(%168) : (vector<1x1x4x8xbf16>) -> ()
                    }) : (!air.async.token) -> (!air.async.token, vector<1x1x4x8xbf16>)
                    %161:2 = "air.execute"(%arg20) ({
                      %168 = "vector.transfer_read"(%136#1, %arg19, %arg17, %128, %128, %133) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<8x16x8x4xbf16, 2 : i32>, index, index, index, index, bf16) -> vector<1x1x8x4xbf16>
                      "air.execute_terminator"(%168) : (vector<1x1x8x4xbf16>) -> ()
                    }) : (!air.async.token) -> (!air.async.token, vector<1x1x8x4xbf16>)
                    %162:2 = "air.execute"(%arg20) ({
                      %168 = "vector.transfer_read"(%134#1, %arg17, %arg15, %128, %128, %127) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 4, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, f32) -> vector<1x1x4x4xf32>
                      "air.execute_terminator"(%168) : (vector<1x1x4x4xf32>) -> ()
                    }) : (!air.async.token) -> (!air.async.token, vector<1x1x4x4xf32>)
                    %163 = "arith.extf"(%160#1) : (vector<1x1x4x8xbf16>) -> vector<1x1x4x8xf32>
                    %164 = "arith.extf"(%161#1) : (vector<1x1x8x4xbf16>) -> vector<1x1x8x4xf32>
                    %165 = "vector.contract"(%163, %164, %162#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d1, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x4x8xf32>, vector<1x1x8x4xf32>, vector<1x1x4x4xf32>) -> vector<1x1x4x4xf32>
                    %166 = "air.execute"(%162#0) ({
                      "vector.transfer_write"(%165, %134#1, %arg17, %arg15, %128, %128) <{in_bounds = [true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 4, 0>, permutation_map = affine_map<(d0, d1, d2, d3) -> (d0, d1, d2, d3)>}> : (vector<1x1x4x4xf32>, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index) -> ()
                      "air.execute_terminator"() : () -> ()
                    }) : (!air.async.token) -> !air.async.token
                    %167 = "air.wait_all"(%166, %161#0, %160#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
                    "scf.yield"(%167) : (!air.async.token) -> ()
                  }) : (index, index, index, !air.async.token) -> !air.async.token
                  "scf.yield"(%159) : (!air.async.token) -> ()
                }) : (index, index, index, !air.async.token) -> !air.async.token
                "scf.yield"(%158) : (!air.async.token) -> ()
              }) : (index, index, index, !air.async.token) -> !air.async.token
              %154 = "air.execute"() ({
                "memref.dealloc"(%137#1) : (memref<8x16x4x8xbf16, 2 : i32>) -> ()
                "air.execute_terminator"() : () -> ()
              }) : () -> !air.async.token
              %155 = "air.execute"() ({
                "memref.dealloc"(%136#1) : (memref<8x16x8x4xbf16, 2 : i32>) -> ()
                "air.execute_terminator"() : () -> ()
              }) : () -> !air.async.token
              %156 = "air.wait_all"(%153, %151, %150) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
              %157 = "air.wait_all"(%150, %151) : (!air.async.token, !air.async.token) -> !air.async.token
              "scf.yield"(%149, %156, %157) : (!air.async.token, !air.async.token, !air.async.token) -> ()
            }) : (index, index, index, !air.async.token, !air.async.token, !air.async.token) -> (!air.async.token, !air.async.token, !air.async.token)
            %141 = "air.channel.put"(%140#1, %arg7, %arg8, %134#1, %128, %128, %128, %126, %130, %124, %124, %125, %132) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 1, 2, 1, 3, 3, 3>}> {id = 61 : i32} : (!air.async.token, index, index, memref<16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index, index, index, index) -> !air.async.token
            %142 = "air.execute"(%140#1) ({
              "memref.dealloc"(%134#1) : (memref<16x16x4x4xf32, 2 : i32>) -> ()
              "air.execute_terminator"() : () -> ()
            }) : (!air.async.token) -> !air.async.token
            "air.herd_terminator"() : () -> ()
          }) {id = 3 : i32, x_loc = 0 : i64, y_loc = 2 : i64} : (index, index) -> !air.async.token
          %107 = "air.channel.put"(%106, %57, %56, %54, %54, %78#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 62 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<64x256xf32, 1>) -> !air.async.token
          %108 = "air.channel.put"(%106, %57, %56, %52, %54, %79#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 63 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<64x256xf32, 1>) -> !air.async.token
          %109 = "air.channel.put"(%106, %57, %56, %45, %54, %80#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 64 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<64x256xf32, 1>) -> !air.async.token
          %110 = "air.channel.put"(%106, %57, %56, %44, %54, %81#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 65 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<64x256xf32, 1>) -> !air.async.token
          %111 = "air.wait_all"(%107, %108, %109, %110) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %112 = "air.execute"(%67) ({
            "memref.dealloc"(%61#1) : (memref<64x256xbf16, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %113 = "air.execute"(%67) ({
            "memref.dealloc"(%60#1) : (memref<64x256xbf16, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %114 = "air.execute"(%67) ({
            "memref.dealloc"(%59#1) : (memref<64x256xbf16, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %115 = "air.execute"(%67) ({
            "memref.dealloc"(%58#1) : (memref<64x256xbf16, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %116 = "air.execute"(%77) ({
            "memref.dealloc"(%71#1) : (memref<64x256xbf16, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %117 = "air.execute"(%77) ({
            "memref.dealloc"(%70#1) : (memref<64x256xbf16, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %118 = "air.execute"(%77) ({
            "memref.dealloc"(%69#1) : (memref<64x256xbf16, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %119 = "air.execute"(%77) ({
            "memref.dealloc"(%68#1) : (memref<64x256xbf16, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %120 = "air.execute"(%111) ({
            "memref.dealloc"(%81#1) : (memref<64x256xf32, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %121 = "air.execute"(%111) ({
            "memref.dealloc"(%80#1) : (memref<64x256xf32, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %122 = "air.execute"(%111) ({
            "memref.dealloc"(%79#1) : (memref<64x256xf32, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %123 = "air.execute"(%111) ({
            "memref.dealloc"(%78#1) : (memref<64x256xf32, 1>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          "air.segment_terminator"() : () -> ()
        }) {id = 2 : i32, x_loc = 0 : i64, x_size = 4 : i64, y_loc = 2 : i64, y_size = 4 : i64} : () -> !air.async.token
        "air.launch_terminator"() : () -> ()
      }) {id = 1 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<256x256xbf16>, memref<256x256xbf16>, memref<256x256xf32>) -> !air.async.token
      "func.return"() : () -> ()
    }) {translation_info = #iree_codegen.translation_info<Custom>} : () -> ()
  }) : () -> ()
  "hal.executable.variant_end"() : () -> ()
}) {sym_name = "amdaie_xclbin_fb", target = #hal.executable.target<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>} : () -> ()
failed to translate executables
+ compileResult=1
+ '[' 1 -ne 0 ']'
+ '[' 1 -ne 0 ']'
+ echo 'Expected compilation failure, got compilation failure.'
Expected compilation failure, got compilation failure.
+ return 0
+ run_matmul_test --name_prefix failure_0 --lhs_rhs_type i32 --acc_type i32 --m 1 --n 1 --k 1000 --expect-compile-failure 1
+ local lhs_rhs_type=
+ local acc_type=
+ local m=
+ local n=
+ local k=
+ local name_prefix=noprefix
+ local target_backend=amd-aie
+ local device=xrt
+ local peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ local mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ local vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ local pipeline=pad-pack
+ local dynamicity=static
+ local accumulate=false
+ local expect_compile_failure=0
+ local compile_only=0
+ local do_transpose_rhs=0
+ local max_elements_to_check=20000
+ local use_ukernel=0
+ '[' 14 -gt 0 ']'
+ case "$1" in
+ name_prefix=failure_0
+ shift 2
+ '[' 12 -gt 0 ']'
+ case "$1" in
+ lhs_rhs_type=i32
+ shift 2
+ '[' 10 -gt 0 ']'
+ case "$1" in
+ acc_type=i32
+ shift 2
+ '[' 8 -gt 0 ']'
+ case "$1" in
+ m=1
+ shift 2
+ '[' 6 -gt 0 ']'
+ case "$1" in
+ n=1
+ shift 2
+ '[' 4 -gt 0 ']'
+ case "$1" in
+ k=1000
+ shift 2
+ '[' 2 -gt 0 ']'
+ case "$1" in
+ expect_compile_failure=1
+ shift 2
+ '[' 0 -gt 0 ']'
+ set -x
++ date +%s%3N
+ start_time=1716219040163
+ name=mm_failure_0_i32_i32_m1_n1_k1000
+ set +e
++ echo mm_failure_0_i32_i32_m1_n1_k1000
++ grep -c ,
+ nameContainsComma=0
++ echo mm_failure_0_i32_i32_m1_n1_k1000
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_failure_0_i32_i32_m1_n1_k1000
++ grep -c ,
+ nameContainsComma=0
++ echo mm_failure_0_i32_i32_m1_n1_k1000
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=1                     --n=1                     --k=1000                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=1 --n=1 --k=1000 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000_calls.mlir
[TestShape(m=1, k=1000, n=1, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219040239
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_failure_0_i32_i32_m1_n1_k1000 ****'
**** Generating matmul .vmfb file for mm_failure_0_i32_i32_m1_n1_k1000 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m1_n1_k1000.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_1x1_1000xi32__dispatch_0_matmul_1x1x1000_ --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb
LLVM ERROR: unable to legalize instruction: %151:_(<2 x s32>) = G_MUL %149:_, %147:_ (in function: core_0_2)
PLEASE submit a bug report to https://github.com/llvm/llvm-project/issues/ and include the crash backtrace.
Stack dump:
0.	Program arguments: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/input.o
1.	Running pass 'Function Pass Manager' on module '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll'.
2.	Running pass 'Legalizer' on function '@core_0_2'
 #0 0x0000561fbd017c97 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x2b44c97)
 #1 0x0000561fbd015b1e llvm::sys::RunSignalHandlers() (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x2b42b1e)
 #2 0x0000561fbd01849a SignalHandler(int) Signals.cpp:0:0
 #3 0x00007fc86b042520 (/lib/x86_64-linux-gnu/libc.so.6+0x42520)
 #4 0x00007fc86b0969fc __pthread_kill_implementation ./nptl/pthread_kill.c:44:76
 #5 0x00007fc86b0969fc __pthread_kill_internal ./nptl/pthread_kill.c:78:10
 #6 0x00007fc86b0969fc pthread_kill ./nptl/pthread_kill.c:89:10
 #7 0x00007fc86b042476 gsignal ./signal/../sysdeps/posix/raise.c:27:6
 #8 0x00007fc86b0287f3 abort ./stdlib/abort.c:81:7
 #9 0x0000561fbcf9a77c llvm::report_fatal_error(llvm::Twine const&, bool) (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x2ac777c)
#10 0x0000561fbd3f2a24 (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x2f1fa24)
#11 0x0000561fbd3f2dda llvm::reportGISelFailure(llvm::MachineFunction&, llvm::TargetPassConfig const&, llvm::MachineOptimizationRemarkEmitter&, char const*, llvm::StringRef, llvm::MachineInstr const&) (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x2f1fdda)
#12 0x0000561fbd3930a2 llvm::Legalizer::runOnMachineFunction(llvm::MachineFunction&) (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x2ec00a2)
#13 0x0000561fbc26eae5 llvm::MachineFunctionPass::runOnFunction(llvm::Function&) (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x1d9bae5)
#14 0x0000561fbc767b78 llvm::FPPassManager::runOnFunction(llvm::Function&) (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x2294b78)
#15 0x0000561fbc76e4e1 llvm::FPPassManager::runOnModule(llvm::Module&) (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x229b4e1)
#16 0x0000561fbc768226 llvm::legacy::PassManagerImpl::run(llvm::Module&) (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x2295226)
#17 0x0000561fbb8f7919 main (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x1424919)
#18 0x00007fc86b029d90 __libc_start_call_main ./csu/../sysdeps/nptl/libc_start_call_main.h:58:16
#19 0x00007fc86b029e40 call_init ./csu/../csu/libc-start.c:128:20
#20 0x00007fc86b029e40 __libc_start_main ./csu/../csu/libc-start.c:379:5
#21 0x0000561fbb8f23a5 _start (/proj/gdba/jamesn/workspace/peano/install/bin/llc+0x141f3a5)
loc("/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir":1:1): error: 'builtin.module' op Failed to assemble
loc("/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir":1:1): error: 'builtin.module' op Failed to generate unified object
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_1x1_1000xi32__dispatch_0_amdaie_xclbin_fb/input.o
Failed in 0.000000e+00 code: -2
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_1x1_1000xi32__dispatch_0.mlir:8:4: error: 'builtin.module' op Failed to produce an XCLBin with external tool.
    builtin.module {
   ^
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_1x1_1000xi32__dispatch_0.mlir:8:4: note: see current operation: 
"builtin.module"() ({
  "aie.device"() <{device = 8 : i32}> ({
    %0 = "aie.tile"() <{col = 0 : i32, row = 0 : i32}> : () -> index
    %1 = "aie.tile"() <{col = 0 : i32, row = 1 : i32}> : () -> index
    %2 = "aie.tile"() <{col = 1 : i32, row = 1 : i32}> : () -> index
    %3 = "aie.tile"() <{col = 2 : i32, row = 1 : i32}> : () -> index
    %4 = "aie.tile"() <{col = 0 : i32, row = 2 : i32}> : () -> index
    %5 = "aie.lock"(%2) <{init = 1 : i32, lockID = 5 : i32}> : (index) -> index
    %6 = "aie.lock"(%2) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
    %7 = "aie.lock"(%2) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
    %8 = "aie.lock"(%2) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
    %9 = "aie.lock"(%2) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
    %10 = "aie.lock"(%2) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
    %11 = "aie.lock"(%1) <{init = 1 : i32, lockID = 5 : i32}> : (index) -> index
    %12 = "aie.lock"(%1) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
    %13 = "aie.lock"(%1) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
    %14 = "aie.lock"(%1) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
    %15 = "aie.lock"(%1) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
    %16 = "aie.lock"(%1) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
    %17 = "aie.lock"(%3) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
    %18 = "aie.lock"(%3) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
    %19 = "aie.lock"(%4) <{init = 3 : i32, lockID = 5 : i32}> : (index) -> index
    %20 = "aie.lock"(%4) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
    %21 = "aie.lock"(%4) <{init = 3 : i32, lockID = 3 : i32}> : (index) -> index
    %22 = "aie.lock"(%4) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
    %23 = "aie.lock"(%4) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
    %24 = "aie.lock"(%4) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
    %25 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf13"}> : (index) -> memref<1x200xi32, 1 : i32>
    %26 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf12"}> : (index) -> memref<200x1xi32, 1 : i32>
    %27 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf11"}> : (index) -> memref<1x200xi32, 1 : i32>
    %28 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf10"}> : (index) -> memref<200x1xi32, 1 : i32>
    %29 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf9"}> : (index) -> memref<1x200xi32, 1 : i32>
    %30 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf8"}> : (index) -> memref<200x1xi32, 1 : i32>
    %31 = "aie.buffer"(%3) <{mem_bank = 0 : i32, sym_name = "buf7"}> : (index) -> memref<1x1xi32, 1 : i32>
    %32 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf6"}> : (index) -> memref<1x1x1x1xi32, 2 : i32>
    %33 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf5"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
    %34 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf4"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
    %35 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf3"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
    %36 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf2"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
    %37 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf1"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
    %38 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf0"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
    %39 = "aie.mem"(%4) ({
      %44 = "aie.dma_start"()[^bb1, ^bb9] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb1:  // 2 preds: ^bb0, ^bb3
      "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%35) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
      "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb2] : () -> ()
    ^bb2:  // pred: ^bb1
      "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%34) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
      "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb3] : () -> ()
    ^bb3:  // pred: ^bb2
      "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%37) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
      "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb1] : () -> ()
    ^bb4:  // pred: ^bb5
      "aie.end"() : () -> ()
    ^bb5:  // pred: ^bb9
      %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb6:  // 2 preds: ^bb5, ^bb8
      "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%36) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
      "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb7] : () -> ()
    ^bb7:  // pred: ^bb6
      "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%33) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
      "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb8] : () -> ()
    ^bb8:  // pred: ^bb7
      "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%38) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
      "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb6] : () -> ()
    ^bb9:  // pred: ^bb0
      %46 = "aie.dma_start"()[^bb10, ^bb5] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb10:  // 2 preds: ^bb9, ^bb10
      "aie.use_lock"(%24) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%32) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1x1x1xi32, 2 : i32>) -> ()
      "aie.use_lock"(%23) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb10] : () -> ()
    }) : (index) -> index
    %40 = "aie.core"(%4) <{elf_file = "segment_0_core_0_2.elf", stack_size = 1024 : i32}> ({
      %44 = "arith.constant"() <{value = 0 : i32}> : () -> i32
      %45 = "arith.constant"() <{value = 124 : index}> : () -> index
      %46 = "arith.constant"() <{value = 2 : index}> : () -> index
      %47 = "arith.constant"() <{value = 8 : index}> : () -> index
      %48 = "arith.constant"() <{value = 1 : index}> : () -> index
      %49 = "arith.constant"() <{value = 0 : index}> : () -> index
      "cf.br"()[^bb1] : () -> ()
    ^bb1:  // 2 preds: ^bb0, ^bb1
      "aie.use_lock"(%23) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "memref.store"(%44, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
      "scf.for"(%49, %45, %46) ({
      ^bb0(%arg0: index):
        "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "scf.for"(%49, %47, %48) ({
        ^bb0(%arg1: index):
          %50 = "memref.load"(%35, %49, %49, %49, %arg1) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
          %51 = "memref.load"(%36, %49, %49, %arg1, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
          %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
          %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
          %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
          "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "scf.for"(%49, %47, %48) ({
        ^bb0(%arg1: index):
          %50 = "memref.load"(%34, %49, %49, %49, %arg1) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
          %51 = "memref.load"(%33, %49, %49, %arg1, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
          %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
          %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
          %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
          "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "scf.yield"() : () -> ()
      }) : (index, index, index) -> ()
      "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "scf.for"(%49, %47, %48) ({
      ^bb0(%arg0: index):
        %50 = "memref.load"(%37, %49, %49, %49, %arg0) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
        %51 = "memref.load"(%38, %49, %49, %arg0, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
        %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
        %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
        %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
        "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
        "scf.yield"() : () -> ()
      }) : (index, index, index) -> ()
      "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.use_lock"(%24) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "cf.br"()[^bb1] : () -> ()
    }) : (index) -> index
    "aie.flow"(%0, %1) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
    "aie.flow"(%0, %2) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
    "aie.flow"(%3, %0) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
    "aie.flow"(%1, %4) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
    "aie.flow"(%2, %4) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
    "aie.flow"(%4, %3) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
    %41 = "aie.memtile_dma"(%3) ({
      %44 = "aie.dma_start"()[^bb1, ^bb3] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb1:  // 2 preds: ^bb0, ^bb1
      "aie.use_lock"(%17) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%31) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1xi32, 1 : i32>) -> ()
      "aie.use_lock"(%18) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb1] : () -> ()
    ^bb2:  // pred: ^bb3
      "aie.end"() : () -> ()
    ^bb3:  // pred: ^bb0
      %45 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb4:  // 2 preds: ^bb3, ^bb4
      "aie.use_lock"(%18) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%31) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1xi32, 1 : i32>) -> ()
      "aie.use_lock"(%17) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb4] : () -> ()
    }) : (index) -> index
    %42 = "aie.memtile_dma"(%1) ({
      %44 = "aie.dma_start"()[^bb1, ^bb5] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb1:  // 2 preds: ^bb0, ^bb3
      "aie.use_lock"(%15) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%25) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
      "aie.use_lock"(%16) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb2] : () -> ()
    ^bb2:  // pred: ^bb1
      "aie.use_lock"(%13) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%27) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
      "aie.use_lock"(%14) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb3] : () -> ()
    ^bb3:  // pred: ^bb2
      "aie.use_lock"(%11) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%29) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
      "aie.use_lock"(%12) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb1] : () -> ()
    ^bb4:  // pred: ^bb5
      "aie.end"() : () -> ()
    ^bb5:  // pred: ^bb0
      %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb6:  // 2 preds: ^bb5, ^bb8
      "aie.use_lock"(%16) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%25) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
      "aie.use_lock"(%15) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb7] : () -> ()
    ^bb7:  // pred: ^bb6
      "aie.use_lock"(%14) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%27) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
      "aie.use_lock"(%13) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb8] : () -> ()
    ^bb8:  // pred: ^bb7
      "aie.use_lock"(%12) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%29) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
      "aie.use_lock"(%11) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb6] : () -> ()
    }) : (index) -> index
    %43 = "aie.memtile_dma"(%2) ({
      %44 = "aie.dma_start"()[^bb1, ^bb5] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb1:  // 2 preds: ^bb0, ^bb3
      "aie.use_lock"(%9) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%26) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
      "aie.use_lock"(%10) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb2] : () -> ()
    ^bb2:  // pred: ^bb1
      "aie.use_lock"(%7) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%28) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
      "aie.use_lock"(%8) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb3] : () -> ()
    ^bb3:  // pred: ^bb2
      "aie.use_lock"(%5) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%30) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
      "aie.use_lock"(%6) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb1] : () -> ()
    ^bb4:  // pred: ^bb5
      "aie.end"() : () -> ()
    ^bb5:  // pred: ^bb0
      %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
    ^bb6:  // 2 preds: ^bb5, ^bb8
      "aie.use_lock"(%10) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%26) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
      "aie.use_lock"(%9) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb7] : () -> ()
    ^bb7:  // pred: ^bb6
      "aie.use_lock"(%8) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%28) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
      "aie.use_lock"(%7) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb8] : () -> ()
    ^bb8:  // pred: ^bb7
      "aie.use_lock"(%6) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
      "aie.dma_bd"(%30) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
      "aie.use_lock"(%5) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
      "aie.next_bd"()[^bb6] : () -> ()
    }) : (index) -> index
    "aie.shim_dma_allocation"() <{channel_dir = 0 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId24}> : () -> ()
    "memref.global"() <{sym_name = "airMemcpyId24", sym_visibility = "public", type = memref<1x1xi32, 1 : i32>}> : () -> ()
    "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId4}> : () -> ()
    "memref.global"() <{sym_name = "airMemcpyId4", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
    "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId8}> : () -> ()
    "memref.global"() <{sym_name = "airMemcpyId8", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
    "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId12}> : () -> ()
    "memref.global"() <{sym_name = "airMemcpyId12", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
    "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId6}> : () -> ()
    "memref.global"() <{sym_name = "airMemcpyId6", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
    "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId10}> : () -> ()
    "memref.global"() <{sym_name = "airMemcpyId10", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
    "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId14}> : () -> ()
    "memref.global"() <{sym_name = "airMemcpyId14", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
    "func.func"() <{function_type = (memref<1x1000xi32>, memref<1000x1xi32>, memref<1x1xi32>) -> (), sym_name = "matmul_1x1_1000xi32__dispatch_0_matmul_1x1x1000_i32"}> ({
    ^bb0(%arg0: memref<1x1000xi32>, %arg1: memref<1000x1xi32>, %arg2: memref<1x1xi32>):
      "memref.assume_alignment"(%arg0) <{alignment = 64 : i32}> : (memref<1x1000xi32>) -> ()
      "memref.assume_alignment"(%arg1) <{alignment = 64 : i32}> : (memref<1000x1xi32>) -> ()
      "memref.assume_alignment"(%arg2) <{alignment = 64 : i32}> : (memref<1x1xi32>) -> ()
      "aiex.npu.dma_memcpy_nd"(%arg0) <{id = 0 : i64, issue_token = false, metadata = @airMemcpyId4, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1, 1000>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1x1000xi32>) -> ()
      "aiex.npu.dma_memcpy_nd"(%arg1) <{id = 1 : i64, issue_token = false, metadata = @airMemcpyId6, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1000, 1>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1000x1xi32>) -> ()
      "aiex.npu.dma_memcpy_nd"(%arg2) <{id = 2 : i64, issue_token = false, metadata = @airMemcpyId24, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1, 1>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1x1xi32>) -> ()
      "aiex.npu.sync"() <{channel = 0 : i32, column = 0 : i32, column_num = 1 : i32, direction = 0 : i32, row = 0 : i32, row_num = 1 : i32}> : () -> ()
      "func.return"() : () -> ()
    }) : () -> ()
  }) {sym_name = "segment_0"} : () -> ()
}) : () -> ()
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_1x1_1000xi32__dispatch_0.mlir:2:2: error: failed to serialize executable for target backend amd-aie
  hal.executable.variant public @amdaie_xclbin_fb target(<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>) {
 ^
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_1x1_1000xi32__dispatch_0.mlir:2:2: note: see current operation: 
"hal.executable.variant"() ({
  "hal.executable.export"() ({
  ^bb0(%arg0: !hal.device):
    %0 = "arith.constant"() <{value = 1 : index}> : () -> index
    "hal.return"(%0, %0, %0) : (index, index, index) -> ()
  }) {layout = #hal.pipeline.layout<push_constants = 0, sets = [<0, bindings = [<0, storage_buffer, ReadOnly>, <1, storage_buffer, ReadOnly>, <2, storage_buffer>]>]>, ordinal = 0 : index, sym_name = "matmul_1x1_1000xi32__dispatch_0_matmul_1x1x1000_i32", workgroup_size = [1 : index, 1 : index, 1 : index]} : () -> ()
  "builtin.module"() ({
    "aie.device"() <{device = 8 : i32}> ({
      %0 = "aie.tile"() <{col = 0 : i32, row = 0 : i32}> : () -> index
      %1 = "aie.tile"() <{col = 0 : i32, row = 1 : i32}> : () -> index
      %2 = "aie.tile"() <{col = 1 : i32, row = 1 : i32}> : () -> index
      %3 = "aie.tile"() <{col = 2 : i32, row = 1 : i32}> : () -> index
      %4 = "aie.tile"() <{col = 0 : i32, row = 2 : i32}> : () -> index
      %5 = "aie.lock"(%2) <{init = 1 : i32, lockID = 5 : i32}> : (index) -> index
      %6 = "aie.lock"(%2) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %7 = "aie.lock"(%2) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
      %8 = "aie.lock"(%2) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %9 = "aie.lock"(%2) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %10 = "aie.lock"(%2) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %11 = "aie.lock"(%1) <{init = 1 : i32, lockID = 5 : i32}> : (index) -> index
      %12 = "aie.lock"(%1) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %13 = "aie.lock"(%1) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
      %14 = "aie.lock"(%1) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %15 = "aie.lock"(%1) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %16 = "aie.lock"(%1) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %17 = "aie.lock"(%3) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %18 = "aie.lock"(%3) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %19 = "aie.lock"(%4) <{init = 3 : i32, lockID = 5 : i32}> : (index) -> index
      %20 = "aie.lock"(%4) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %21 = "aie.lock"(%4) <{init = 3 : i32, lockID = 3 : i32}> : (index) -> index
      %22 = "aie.lock"(%4) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %23 = "aie.lock"(%4) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %24 = "aie.lock"(%4) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %25 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf13"}> : (index) -> memref<1x200xi32, 1 : i32>
      %26 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf12"}> : (index) -> memref<200x1xi32, 1 : i32>
      %27 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf11"}> : (index) -> memref<1x200xi32, 1 : i32>
      %28 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf10"}> : (index) -> memref<200x1xi32, 1 : i32>
      %29 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf9"}> : (index) -> memref<1x200xi32, 1 : i32>
      %30 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf8"}> : (index) -> memref<200x1xi32, 1 : i32>
      %31 = "aie.buffer"(%3) <{mem_bank = 0 : i32, sym_name = "buf7"}> : (index) -> memref<1x1xi32, 1 : i32>
      %32 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf6"}> : (index) -> memref<1x1x1x1xi32, 2 : i32>
      %33 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf5"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
      %34 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf4"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
      %35 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf3"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
      %36 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf2"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
      %37 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf1"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
      %38 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf0"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
      %39 = "aie.mem"(%4) ({
        %44 = "aie.dma_start"()[^bb1, ^bb9] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb3
        "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%35) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
        "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%34) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
        "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb3] : () -> ()
      ^bb3:  // pred: ^bb2
        "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%37) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
        "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb4:  // pred: ^bb5
        "aie.end"() : () -> ()
      ^bb5:  // pred: ^bb9
        %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb8
        "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%36) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
        "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb7] : () -> ()
      ^bb7:  // pred: ^bb6
        "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%33) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
        "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      ^bb8:  // pred: ^bb7
        "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%38) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
        "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb9:  // pred: ^bb0
        %46 = "aie.dma_start"()[^bb10, ^bb5] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb10:  // 2 preds: ^bb9, ^bb10
        "aie.use_lock"(%24) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%32) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1x1x1xi32, 2 : i32>) -> ()
        "aie.use_lock"(%23) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb10] : () -> ()
      }) : (index) -> index
      %40 = "aie.core"(%4) <{elf_file = "segment_0_core_0_2.elf", stack_size = 1024 : i32}> ({
        %44 = "arith.constant"() <{value = 0 : i32}> : () -> i32
        %45 = "arith.constant"() <{value = 124 : index}> : () -> index
        %46 = "arith.constant"() <{value = 2 : index}> : () -> index
        %47 = "arith.constant"() <{value = 8 : index}> : () -> index
        %48 = "arith.constant"() <{value = 1 : index}> : () -> index
        %49 = "arith.constant"() <{value = 0 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%23) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "memref.store"(%44, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
        "scf.for"(%49, %45, %46) ({
        ^bb0(%arg0: index):
          "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%49, %47, %48) ({
          ^bb0(%arg1: index):
            %50 = "memref.load"(%35, %49, %49, %49, %arg1) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
            %51 = "memref.load"(%36, %49, %49, %arg1, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
            %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
            %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
            %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
            "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%49, %47, %48) ({
          ^bb0(%arg1: index):
            %50 = "memref.load"(%34, %49, %49, %49, %arg1) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
            %51 = "memref.load"(%33, %49, %49, %arg1, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
            %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
            %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
            %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
            "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "scf.for"(%49, %47, %48) ({
        ^bb0(%arg0: index):
          %50 = "memref.load"(%37, %49, %49, %49, %arg0) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
          %51 = "memref.load"(%38, %49, %49, %arg0, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
          %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
          %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
          %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
          "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%24) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      "aie.flow"(%0, %1) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%0, %2) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%3, %0) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%1, %4) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%2, %4) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %3) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      %41 = "aie.memtile_dma"(%3) ({
        %44 = "aie.dma_start"()[^bb1, ^bb3] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%17) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%31) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1xi32, 1 : i32>) -> ()
        "aie.use_lock"(%18) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb2:  // pred: ^bb3
        "aie.end"() : () -> ()
      ^bb3:  // pred: ^bb0
        %45 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb4:  // 2 preds: ^bb3, ^bb4
        "aie.use_lock"(%18) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%31) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1xi32, 1 : i32>) -> ()
        "aie.use_lock"(%17) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb4] : () -> ()
      }) : (index) -> index
      %42 = "aie.memtile_dma"(%1) ({
        %44 = "aie.dma_start"()[^bb1, ^bb5] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb3
        "aie.use_lock"(%15) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%25) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
        "aie.use_lock"(%16) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%13) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%27) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
        "aie.use_lock"(%14) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb3] : () -> ()
      ^bb3:  // pred: ^bb2
        "aie.use_lock"(%11) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%29) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
        "aie.use_lock"(%12) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb4:  // pred: ^bb5
        "aie.end"() : () -> ()
      ^bb5:  // pred: ^bb0
        %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb8
        "aie.use_lock"(%16) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%25) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
        "aie.use_lock"(%15) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb7] : () -> ()
      ^bb7:  // pred: ^bb6
        "aie.use_lock"(%14) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%27) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
        "aie.use_lock"(%13) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      ^bb8:  // pred: ^bb7
        "aie.use_lock"(%12) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%29) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
        "aie.use_lock"(%11) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      }) : (index) -> index
      %43 = "aie.memtile_dma"(%2) ({
        %44 = "aie.dma_start"()[^bb1, ^bb5] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb3
        "aie.use_lock"(%9) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%26) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
        "aie.use_lock"(%10) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%7) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%28) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
        "aie.use_lock"(%8) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb3] : () -> ()
      ^bb3:  // pred: ^bb2
        "aie.use_lock"(%5) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%30) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
        "aie.use_lock"(%6) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb4:  // pred: ^bb5
        "aie.end"() : () -> ()
      ^bb5:  // pred: ^bb0
        %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb8
        "aie.use_lock"(%10) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%26) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
        "aie.use_lock"(%9) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb7] : () -> ()
      ^bb7:  // pred: ^bb6
        "aie.use_lock"(%8) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%28) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
        "aie.use_lock"(%7) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      ^bb8:  // pred: ^bb7
        "aie.use_lock"(%6) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%30) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
        "aie.use_lock"(%5) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      }) : (index) -> index
      "aie.shim_dma_allocation"() <{channel_dir = 0 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId24}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId24", sym_visibility = "public", type = memref<1x1xi32, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId4}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId4", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId8}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId8", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId12}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId12", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId6}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId6", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId10}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId10", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId14}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId14", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
      "func.func"() <{function_type = (memref<1x1000xi32>, memref<1000x1xi32>, memref<1x1xi32>) -> (), sym_name = "matmul_1x1_1000xi32__dispatch_0_matmul_1x1x1000_i32"}> ({
      ^bb0(%arg0: memref<1x1000xi32>, %arg1: memref<1000x1xi32>, %arg2: memref<1x1xi32>):
        "memref.assume_alignment"(%arg0) <{alignment = 64 : i32}> : (memref<1x1000xi32>) -> ()
        "memref.assume_alignment"(%arg1) <{alignment = 64 : i32}> : (memref<1000x1xi32>) -> ()
        "memref.assume_alignment"(%arg2) <{alignment = 64 : i32}> : (memref<1x1xi32>) -> ()
        "aiex.npu.dma_memcpy_nd"(%arg0) <{id = 0 : i64, issue_token = false, metadata = @airMemcpyId4, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1, 1000>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1x1000xi32>) -> ()
        "aiex.npu.dma_memcpy_nd"(%arg1) <{id = 1 : i64, issue_token = false, metadata = @airMemcpyId6, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1000, 1>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1000x1xi32>) -> ()
        "aiex.npu.dma_memcpy_nd"(%arg2) <{id = 2 : i64, issue_token = false, metadata = @airMemcpyId24, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1, 1>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1x1xi32>) -> ()
        "aiex.npu.sync"() <{channel = 0 : i32, column = 0 : i32, column_num = 1 : i32, direction = 0 : i32, row = 0 : i32, row_num = 1 : i32}> : () -> ()
        "func.return"() : () -> ()
      }) : () -> ()
    }) {sym_name = "segment_0"} : () -> ()
  }) : () -> ()
  "hal.executable.variant_end"() : () -> ()
}) {sym_name = "amdaie_xclbin_fb", target = #hal.executable.target<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>} : () -> ()
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_1x1_1000xi32__dispatch_0.mlir:1:0: error: failed to serialize executables
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_1x1_1000xi32__dispatch_0.mlir:1:0: note: see current operation: 
"hal.executable"() ({
  "hal.executable.variant"() ({
    "hal.executable.export"() ({
    ^bb0(%arg0: !hal.device):
      %0 = "arith.constant"() <{value = 1 : index}> : () -> index
      "hal.return"(%0, %0, %0) : (index, index, index) -> ()
    }) {layout = #hal.pipeline.layout<push_constants = 0, sets = [<0, bindings = [<0, storage_buffer, ReadOnly>, <1, storage_buffer, ReadOnly>, <2, storage_buffer>]>]>, ordinal = 0 : index, sym_name = "matmul_1x1_1000xi32__dispatch_0_matmul_1x1x1000_i32", workgroup_size = [1 : index, 1 : index, 1 : index]} : () -> ()
    "builtin.module"() ({
      "aie.device"() <{device = 8 : i32}> ({
        %0 = "aie.tile"() <{col = 0 : i32, row = 0 : i32}> : () -> index
        %1 = "aie.tile"() <{col = 0 : i32, row = 1 : i32}> : () -> index
        %2 = "aie.tile"() <{col = 1 : i32, row = 1 : i32}> : () -> index
        %3 = "aie.tile"() <{col = 2 : i32, row = 1 : i32}> : () -> index
        %4 = "aie.tile"() <{col = 0 : i32, row = 2 : i32}> : () -> index
        %5 = "aie.lock"(%2) <{init = 1 : i32, lockID = 5 : i32}> : (index) -> index
        %6 = "aie.lock"(%2) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
        %7 = "aie.lock"(%2) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
        %8 = "aie.lock"(%2) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
        %9 = "aie.lock"(%2) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
        %10 = "aie.lock"(%2) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
        %11 = "aie.lock"(%1) <{init = 1 : i32, lockID = 5 : i32}> : (index) -> index
        %12 = "aie.lock"(%1) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
        %13 = "aie.lock"(%1) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
        %14 = "aie.lock"(%1) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
        %15 = "aie.lock"(%1) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
        %16 = "aie.lock"(%1) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
        %17 = "aie.lock"(%3) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
        %18 = "aie.lock"(%3) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
        %19 = "aie.lock"(%4) <{init = 3 : i32, lockID = 5 : i32}> : (index) -> index
        %20 = "aie.lock"(%4) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
        %21 = "aie.lock"(%4) <{init = 3 : i32, lockID = 3 : i32}> : (index) -> index
        %22 = "aie.lock"(%4) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
        %23 = "aie.lock"(%4) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
        %24 = "aie.lock"(%4) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
        %25 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf13"}> : (index) -> memref<1x200xi32, 1 : i32>
        %26 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf12"}> : (index) -> memref<200x1xi32, 1 : i32>
        %27 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf11"}> : (index) -> memref<1x200xi32, 1 : i32>
        %28 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf10"}> : (index) -> memref<200x1xi32, 1 : i32>
        %29 = "aie.buffer"(%1) <{mem_bank = 0 : i32, sym_name = "buf9"}> : (index) -> memref<1x200xi32, 1 : i32>
        %30 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf8"}> : (index) -> memref<200x1xi32, 1 : i32>
        %31 = "aie.buffer"(%3) <{mem_bank = 0 : i32, sym_name = "buf7"}> : (index) -> memref<1x1xi32, 1 : i32>
        %32 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf6"}> : (index) -> memref<1x1x1x1xi32, 2 : i32>
        %33 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf5"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
        %34 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf4"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
        %35 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf3"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
        %36 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf2"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
        %37 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf1"}> : (index) -> memref<1x1x1x8xi32, 2 : i32>
        %38 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf0"}> : (index) -> memref<1x1x8x1xi32, 2 : i32>
        %39 = "aie.mem"(%4) ({
          %44 = "aie.dma_start"()[^bb1, ^bb9] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb1:  // 2 preds: ^bb0, ^bb3
          "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%35) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
          "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb2] : () -> ()
        ^bb2:  // pred: ^bb1
          "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%34) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
          "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb3] : () -> ()
        ^bb3:  // pred: ^bb2
          "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%37) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x1x8xi32, 2 : i32>) -> ()
          "aie.use_lock"(%22) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb1] : () -> ()
        ^bb4:  // pred: ^bb5
          "aie.end"() : () -> ()
        ^bb5:  // pred: ^bb9
          %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb6:  // 2 preds: ^bb5, ^bb8
          "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%36) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
          "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb7] : () -> ()
        ^bb7:  // pred: ^bb6
          "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%33) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
          "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb8] : () -> ()
        ^bb8:  // pred: ^bb7
          "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%38) <{len = 8 : i32, offset = 0 : i32}> : (memref<1x1x8x1xi32, 2 : i32>) -> ()
          "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb6] : () -> ()
        ^bb9:  // pred: ^bb0
          %46 = "aie.dma_start"()[^bb10, ^bb5] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb10:  // 2 preds: ^bb9, ^bb10
          "aie.use_lock"(%24) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%32) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1x1x1xi32, 2 : i32>) -> ()
          "aie.use_lock"(%23) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb10] : () -> ()
        }) : (index) -> index
        %40 = "aie.core"(%4) <{elf_file = "segment_0_core_0_2.elf", stack_size = 1024 : i32}> ({
          %44 = "arith.constant"() <{value = 0 : i32}> : () -> i32
          %45 = "arith.constant"() <{value = 124 : index}> : () -> index
          %46 = "arith.constant"() <{value = 2 : index}> : () -> index
          %47 = "arith.constant"() <{value = 8 : index}> : () -> index
          %48 = "arith.constant"() <{value = 1 : index}> : () -> index
          %49 = "arith.constant"() <{value = 0 : index}> : () -> index
          "cf.br"()[^bb1] : () -> ()
        ^bb1:  // 2 preds: ^bb0, ^bb1
          "aie.use_lock"(%23) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "memref.store"(%44, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
          "scf.for"(%49, %45, %46) ({
          ^bb0(%arg0: index):
            "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
            "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
            "scf.for"(%49, %47, %48) ({
            ^bb0(%arg1: index):
              %50 = "memref.load"(%35, %49, %49, %49, %arg1) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
              %51 = "memref.load"(%36, %49, %49, %arg1, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
              %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
              %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
              %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
              "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
            "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
            "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
            "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
            "scf.for"(%49, %47, %48) ({
            ^bb0(%arg1: index):
              %50 = "memref.load"(%34, %49, %49, %49, %arg1) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
              %51 = "memref.load"(%33, %49, %49, %arg1, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
              %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
              %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
              %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
              "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
            "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%22) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "scf.for"(%49, %47, %48) ({
          ^bb0(%arg0: index):
            %50 = "memref.load"(%37, %49, %49, %49, %arg0) <{nontemporal = false}> : (memref<1x1x1x8xi32, 2 : i32>, index, index, index, index) -> i32
            %51 = "memref.load"(%38, %49, %49, %arg0, %49) <{nontemporal = false}> : (memref<1x1x8x1xi32, 2 : i32>, index, index, index, index) -> i32
            %52 = "memref.load"(%32, %49, %49, %49, %49) <{nontemporal = false}> : (memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> i32
            %53 = "arith.muli"(%50, %51) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
            %54 = "arith.addi"(%52, %53) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
            "memref.store"(%54, %32, %49, %49, %49, %49) <{nontemporal = false}> : (i32, memref<1x1x1x1xi32, 2 : i32>, index, index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.use_lock"(%24) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "cf.br"()[^bb1] : () -> ()
        }) : (index) -> index
        "aie.flow"(%0, %1) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
        "aie.flow"(%0, %2) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
        "aie.flow"(%3, %0) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
        "aie.flow"(%1, %4) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
        "aie.flow"(%2, %4) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
        "aie.flow"(%4, %3) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
        %41 = "aie.memtile_dma"(%3) ({
          %44 = "aie.dma_start"()[^bb1, ^bb3] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb1:  // 2 preds: ^bb0, ^bb1
          "aie.use_lock"(%17) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%31) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1xi32, 1 : i32>) -> ()
          "aie.use_lock"(%18) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb1] : () -> ()
        ^bb2:  // pred: ^bb3
          "aie.end"() : () -> ()
        ^bb3:  // pred: ^bb0
          %45 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb4:  // 2 preds: ^bb3, ^bb4
          "aie.use_lock"(%18) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%31) <{len = 1 : i32, offset = 0 : i32}> : (memref<1x1xi32, 1 : i32>) -> ()
          "aie.use_lock"(%17) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb4] : () -> ()
        }) : (index) -> index
        %42 = "aie.memtile_dma"(%1) ({
          %44 = "aie.dma_start"()[^bb1, ^bb5] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb1:  // 2 preds: ^bb0, ^bb3
          "aie.use_lock"(%15) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%25) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
          "aie.use_lock"(%16) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb2] : () -> ()
        ^bb2:  // pred: ^bb1
          "aie.use_lock"(%13) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%27) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
          "aie.use_lock"(%14) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb3] : () -> ()
        ^bb3:  // pred: ^bb2
          "aie.use_lock"(%11) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%29) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
          "aie.use_lock"(%12) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb1] : () -> ()
        ^bb4:  // pred: ^bb5
          "aie.end"() : () -> ()
        ^bb5:  // pred: ^bb0
          %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb6:  // 2 preds: ^bb5, ^bb8
          "aie.use_lock"(%16) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%25) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
          "aie.use_lock"(%15) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb7] : () -> ()
        ^bb7:  // pred: ^bb6
          "aie.use_lock"(%14) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%27) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
          "aie.use_lock"(%13) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb8] : () -> ()
        ^bb8:  // pred: ^bb7
          "aie.use_lock"(%12) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%29) <{len = 200 : i32, offset = 0 : i32}> : (memref<1x200xi32, 1 : i32>) -> ()
          "aie.use_lock"(%11) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb6] : () -> ()
        }) : (index) -> index
        %43 = "aie.memtile_dma"(%2) ({
          %44 = "aie.dma_start"()[^bb1, ^bb5] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb1:  // 2 preds: ^bb0, ^bb3
          "aie.use_lock"(%9) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%26) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
          "aie.use_lock"(%10) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb2] : () -> ()
        ^bb2:  // pred: ^bb1
          "aie.use_lock"(%7) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%28) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
          "aie.use_lock"(%8) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb3] : () -> ()
        ^bb3:  // pred: ^bb2
          "aie.use_lock"(%5) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%30) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
          "aie.use_lock"(%6) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb1] : () -> ()
        ^bb4:  // pred: ^bb5
          "aie.end"() : () -> ()
        ^bb5:  // pred: ^bb0
          %45 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
        ^bb6:  // 2 preds: ^bb5, ^bb8
          "aie.use_lock"(%10) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%26) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
          "aie.use_lock"(%9) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb7] : () -> ()
        ^bb7:  // pred: ^bb6
          "aie.use_lock"(%8) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%28) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
          "aie.use_lock"(%7) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb8] : () -> ()
        ^bb8:  // pred: ^bb7
          "aie.use_lock"(%6) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
          "aie.dma_bd"(%30) <{len = 200 : i32, offset = 0 : i32}> : (memref<200x1xi32, 1 : i32>) -> ()
          "aie.use_lock"(%5) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
          "aie.next_bd"()[^bb6] : () -> ()
        }) : (index) -> index
        "aie.shim_dma_allocation"() <{channel_dir = 0 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId24}> : () -> ()
        "memref.global"() <{sym_name = "airMemcpyId24", sym_visibility = "public", type = memref<1x1xi32, 1 : i32>}> : () -> ()
        "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId4}> : () -> ()
        "memref.global"() <{sym_name = "airMemcpyId4", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
        "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId8}> : () -> ()
        "memref.global"() <{sym_name = "airMemcpyId8", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
        "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId12}> : () -> ()
        "memref.global"() <{sym_name = "airMemcpyId12", sym_visibility = "public", type = memref<1x200xi32, 1 : i32>}> : () -> ()
        "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId6}> : () -> ()
        "memref.global"() <{sym_name = "airMemcpyId6", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
        "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId10}> : () -> ()
        "memref.global"() <{sym_name = "airMemcpyId10", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
        "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId14}> : () -> ()
        "memref.global"() <{sym_name = "airMemcpyId14", sym_visibility = "public", type = memref<200x1xi32, 1 : i32>}> : () -> ()
        "func.func"() <{function_type = (memref<1x1000xi32>, memref<1000x1xi32>, memref<1x1xi32>) -> (), sym_name = "matmul_1x1_1000xi32__dispatch_0_matmul_1x1x1000_i32"}> ({
        ^bb0(%arg0: memref<1x1000xi32>, %arg1: memref<1000x1xi32>, %arg2: memref<1x1xi32>):
          "memref.assume_alignment"(%arg0) <{alignment = 64 : i32}> : (memref<1x1000xi32>) -> ()
          "memref.assume_alignment"(%arg1) <{alignment = 64 : i32}> : (memref<1000x1xi32>) -> ()
          "memref.assume_alignment"(%arg2) <{alignment = 64 : i32}> : (memref<1x1xi32>) -> ()
          "aiex.npu.dma_memcpy_nd"(%arg0) <{id = 0 : i64, issue_token = false, metadata = @airMemcpyId4, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1, 1000>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1x1000xi32>) -> ()
          "aiex.npu.dma_memcpy_nd"(%arg1) <{id = 1 : i64, issue_token = false, metadata = @airMemcpyId6, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1000, 1>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1000x1xi32>) -> ()
          "aiex.npu.dma_memcpy_nd"(%arg2) <{id = 2 : i64, issue_token = false, metadata = @airMemcpyId24, operandSegmentSizes = array<i32: 1, 0, 0, 0>, static_offsets = array<i64: 0, 0, 0, 0>, static_sizes = array<i64: 1, 1, 1, 1>, static_strides = array<i64: 0, 0, 0>, x = 0 : i64, y = 0 : i64}> : (memref<1x1xi32>) -> ()
          "aiex.npu.sync"() <{channel = 0 : i32, column = 0 : i32, column_num = 1 : i32, direction = 0 : i32, row = 0 : i32, row_num = 1 : i32}> : () -> ()
          "func.return"() : () -> ()
        }) : () -> ()
      }) {sym_name = "segment_0"} : () -> ()
    }) : () -> ()
    "hal.executable.variant_end"() : () -> ()
  }) {sym_name = "amdaie_xclbin_fb", target = #hal.executable.target<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>} : () -> ()
  "hal.executable_end"() : () -> ()
}) {sym_name = "matmul_1x1_1000xi32__dispatch_0", sym_visibility = "private"} : () -> ()
+ compileResult=1
+ '[' 1 -ne 0 ']'
+ '[' 1 -ne 0 ']'
+ echo 'Expected compilation failure, got compilation failure.'
Expected compilation failure, got compilation failure.
+ return 0
+ run_matmul_test --name_prefix failure_0 --lhs_rhs_type i32 --acc_type i32 --m 52 --n 52 --k 63 --expect-compile-failure 1
+ local lhs_rhs_type=
+ local acc_type=
+ local m=
+ local n=
+ local k=
+ local name_prefix=noprefix
+ local target_backend=amd-aie
+ local device=xrt
+ local peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ local mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ local vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ local pipeline=pad-pack
+ local dynamicity=static
+ local accumulate=false
+ local expect_compile_failure=0
+ local compile_only=0
+ local do_transpose_rhs=0
+ local max_elements_to_check=20000
+ local use_ukernel=0
+ '[' 14 -gt 0 ']'
+ case "$1" in
+ name_prefix=failure_0
+ shift 2
+ '[' 12 -gt 0 ']'
+ case "$1" in
+ lhs_rhs_type=i32
+ shift 2
+ '[' 10 -gt 0 ']'
+ case "$1" in
+ acc_type=i32
+ shift 2
+ '[' 8 -gt 0 ']'
+ case "$1" in
+ m=52
+ shift 2
+ '[' 6 -gt 0 ']'
+ case "$1" in
+ n=52
+ shift 2
+ '[' 4 -gt 0 ']'
+ case "$1" in
+ k=63
+ shift 2
+ '[' 2 -gt 0 ']'
+ case "$1" in
+ expect_compile_failure=1
+ shift 2
+ '[' 0 -gt 0 ']'
+ set -x
++ date +%s%3N
+ start_time=1716219040520
+ name=mm_failure_0_i32_i32_m52_n52_k63
+ set +e
++ echo mm_failure_0_i32_i32_m52_n52_k63
++ grep -c ,
+ nameContainsComma=0
++ echo mm_failure_0_i32_i32_m52_n52_k63
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_failure_0_i32_i32_m52_n52_k63
++ grep -c ,
+ nameContainsComma=0
++ echo mm_failure_0_i32_i32_m52_n52_k63
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=52                     --n=52                     --k=63                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=52 --n=52 --k=63 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_calls.mlir
[TestShape(m=52, k=63, n=52, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219040580
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_failure_0_i32_i32_m52_n52_k63 ****'
**** Generating matmul .vmfb file for mm_failure_0_i32_i32_m52_n52_k63 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63.vmfb
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_52x52_63xi32__dispatch_0.mlir:8:4: error: No valid placement found.
    builtin.module {
   ^
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_52x52_63xi32__dispatch_0.mlir:8:4: note: see current operation: 
"builtin.module"() ({
  "air.channel"() <{size = [13, 1], sym_name = "channel_32"}> : () -> ()
  "air.channel"() <{size = [13, 1], sym_name = "channel_31"}> : () -> ()
  "air.channel"() <{size = [13, 1], sym_name = "channel_30"}> : () -> ()
  "air.channel"() <{size = [13, 13], sym_name = "channel_28"}> : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_25"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_24"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_23"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_22"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_21"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_20"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_19"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_18"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_17"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_16"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_15"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_14"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_13"}> {broadcast_shape = [13, 1]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_12"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_11"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_10"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_9"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_8"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_7"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_6"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_5"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_4"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_3"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_2"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_1"}> {broadcast_shape = [1, 13]} : () -> ()
  "air.channel"() <{size = [1, 1], sym_name = "channel_0"}> {broadcast_shape = [1, 13]} : () -> ()
  "func.func"() <{function_type = () -> (), sym_name = "matmul_52x52_63xi32__dispatch_0_matmul_52x52x63_i32"}> ({
    %0 = "arith.constant"() <{value = 1 : index}> : () -> index
    %1 = "arith.constant"() <{value = 0 : index}> : () -> index
    %2:2 = "air.execute"() ({
      %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 0 : index, descriptor_flags = 1 : i32, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<52x63xi32>
      "air.execute_terminator"(%9) : (memref<52x63xi32>) -> ()
    }) : () -> (!air.async.token, memref<52x63xi32>)
    %3 = "air.execute"(%2#0) ({
      "memref.assume_alignment"(%2#1) <{alignment = 64 : i32}> : (memref<52x63xi32>) -> ()
      "air.execute_terminator"() : () -> ()
    }) : (!air.async.token) -> !air.async.token
    %4:2 = "air.execute"() ({
      %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 1 : index, descriptor_flags = 1 : i32, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<63x52xi32>
      "air.execute_terminator"(%9) : (memref<63x52xi32>) -> ()
    }) : () -> (!air.async.token, memref<63x52xi32>)
    %5 = "air.execute"(%4#0) ({
      "memref.assume_alignment"(%4#1) <{alignment = 64 : i32}> : (memref<63x52xi32>) -> ()
      "air.execute_terminator"() : () -> ()
    }) : (!air.async.token) -> !air.async.token
    %6:2 = "air.execute"() ({
      %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 2 : index, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<52x52xi32>
      "air.execute_terminator"(%9) : (memref<52x52xi32>) -> ()
    }) : () -> (!air.async.token, memref<52x52xi32>)
    %7 = "air.execute"(%6#0) ({
      "memref.assume_alignment"(%6#1) <{alignment = 64 : i32}> : (memref<52x52xi32>) -> ()
      "air.execute_terminator"() : () -> ()
    }) : (!air.async.token) -> !air.async.token
    %8 = "air.launch"(%7, %5, %3, %0, %0, %2#1, %4#1, %6#1) <{operandSegmentSizes = array<i32: 3, 2, 3>}> ({
    ^bb0(%arg0: index, %arg1: index, %arg2: index, %arg3: index, %arg4: memref<52x63xi32>, %arg5: memref<63x52xi32>, %arg6: memref<52x52xi32>):
      %9 = "arith.constant"() <{value = 12 : index}> : () -> index
      %10 = "arith.constant"() <{value = 11 : index}> : () -> index
      %11 = "arith.constant"() <{value = 10 : index}> : () -> index
      %12 = "arith.constant"() <{value = 9 : index}> : () -> index
      %13 = "arith.constant"() <{value = 8 : index}> : () -> index
      %14 = "arith.constant"() <{value = 7 : index}> : () -> index
      %15 = "arith.constant"() <{value = 6 : index}> : () -> index
      %16 = "arith.constant"() <{value = 5 : index}> : () -> index
      %17 = "arith.constant"() <{value = 3 : index}> : () -> index
      %18 = "arith.constant"() <{value = 2 : index}> : () -> index
      %19 = "arith.constant"() <{value = 4 : index}> : () -> index
      %20 = "arith.constant"() <{value = 1 : index}> : () -> index
      %21 = "arith.constant"() <{value = 63 : index}> : () -> index
      %22 = "arith.constant"() <{value = 52 : index}> : () -> index
      %23 = "arith.constant"() <{value = 0 : index}> : () -> index
      %24 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52)>}> : (index) -> index
      %25 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 4)>}> : (index) -> index
      %26 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 8)>}> : (index) -> index
      %27 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 12)>}> : (index) -> index
      %28 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 16)>}> : (index) -> index
      %29 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 20)>}> : (index) -> index
      %30 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 24)>}> : (index) -> index
      %31 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 28)>}> : (index) -> index
      %32 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 32)>}> : (index) -> index
      %33 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 36)>}> : (index) -> index
      %34 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 40)>}> : (index) -> index
      %35 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 44)>}> : (index) -> index
      %36 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 52 + 48)>}> : (index) -> index
      %37 = "air.wait_all"() : () -> !air.async.token
      %38 = "air.channel.put"(%37, %23, %23, %arg4, %24, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 1 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %39 = "air.channel.put"(%37, %20, %23, %arg4, %25, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 2 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %40 = "air.channel.put"(%37, %18, %23, %arg4, %26, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 3 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %41 = "air.channel.put"(%37, %17, %23, %arg4, %27, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 4 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %42 = "air.channel.put"(%37, %19, %23, %arg4, %28, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 5 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %43 = "air.channel.put"(%37, %16, %23, %arg4, %29, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 6 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %44 = "air.channel.put"(%37, %15, %23, %arg4, %30, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 7 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %45 = "air.channel.put"(%37, %14, %23, %arg4, %31, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 8 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %46 = "air.channel.put"(%37, %13, %23, %arg4, %32, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 9 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %47 = "air.channel.put"(%37, %12, %23, %arg4, %33, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 10 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %48 = "air.channel.put"(%37, %11, %23, %arg4, %34, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 11 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %49 = "air.channel.put"(%37, %10, %23, %arg4, %35, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 12 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %50 = "air.channel.put"(%37, %9, %23, %arg4, %36, %23, %19, %21, %21, %20) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 13 : i32} : (!air.async.token, index, index, memref<52x63xi32>, index, index, index, index, index, index) -> !air.async.token
      %51 = "air.wait_all"(%38, %39, %40, %41, %42, %43, %44, %45, %46, %47, %48, %49, %50) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
      %52 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52)>}> : (index) -> index
      %53 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 4)>}> : (index) -> index
      %54 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 8)>}> : (index) -> index
      %55 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 12)>}> : (index) -> index
      %56 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 16)>}> : (index) -> index
      %57 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 20)>}> : (index) -> index
      %58 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 24)>}> : (index) -> index
      %59 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 28)>}> : (index) -> index
      %60 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 32)>}> : (index) -> index
      %61 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 36)>}> : (index) -> index
      %62 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 40)>}> : (index) -> index
      %63 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 44)>}> : (index) -> index
      %64 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 52 + 48)>}> : (index) -> index
      %65 = "air.wait_all"() : () -> !air.async.token
      %66 = "air.channel.put"(%65, %23, %23, %arg5, %23, %52, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 14 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %67 = "air.channel.put"(%65, %20, %23, %arg5, %23, %53, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 15 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %68 = "air.channel.put"(%65, %18, %23, %arg5, %23, %54, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 16 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %69 = "air.channel.put"(%65, %17, %23, %arg5, %23, %55, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 17 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %70 = "air.channel.put"(%65, %19, %23, %arg5, %23, %56, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 18 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %71 = "air.channel.put"(%65, %16, %23, %arg5, %23, %57, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 19 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %72 = "air.channel.put"(%65, %15, %23, %arg5, %23, %58, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 20 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %73 = "air.channel.put"(%65, %14, %23, %arg5, %23, %59, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 21 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %74 = "air.channel.put"(%65, %13, %23, %arg5, %23, %60, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 22 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %75 = "air.channel.put"(%65, %12, %23, %arg5, %23, %61, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 23 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %76 = "air.channel.put"(%65, %11, %23, %arg5, %23, %62, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 24 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %77 = "air.channel.put"(%65, %10, %23, %arg5, %23, %63, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 25 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %78 = "air.channel.put"(%65, %9, %23, %arg5, %23, %64, %21, %19, %22, %20) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 1, 2, 1, 2, 2, 2>}> {id = 26 : i32} : (!air.async.token, index, index, memref<63x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %79 = "air.wait_all"(%66, %67, %68, %69, %70, %71, %72, %73, %74, %75, %76, %77, %78) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
      %80 = "air.wait_all"() : () -> !air.async.token
      %81:2 = "air.execute"() ({
        "air.execute_terminator"(%52) : (index) -> ()
      }) : () -> (!air.async.token, index)
      %82 = "air.channel.get"(%81#0, %80, %23, %23, %arg6, %24, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 27 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %83 = "air.channel.get"(%81#0, %80, %20, %23, %arg6, %25, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 28 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %84 = "air.channel.get"(%81#0, %80, %18, %23, %arg6, %26, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 29 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %85 = "air.channel.get"(%81#0, %80, %17, %23, %arg6, %27, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 30 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %86 = "air.channel.get"(%81#0, %80, %19, %23, %arg6, %28, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 31 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %87 = "air.channel.get"(%81#0, %80, %16, %23, %arg6, %29, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 32 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %88 = "air.channel.get"(%81#0, %80, %15, %23, %arg6, %30, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 33 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %89 = "air.channel.get"(%81#0, %80, %14, %23, %arg6, %31, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 34 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %90 = "air.channel.get"(%81#0, %80, %13, %23, %arg6, %32, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 35 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %91 = "air.channel.get"(%81#0, %80, %12, %23, %arg6, %33, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 36 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %92 = "air.channel.get"(%81#0, %80, %11, %23, %arg6, %34, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 37 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %93 = "air.channel.get"(%81#0, %80, %10, %23, %arg6, %35, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 38 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %94 = "air.channel.get"(%81#0, %80, %9, %23, %arg6, %36, %81#1, %19, %22, %22, %20) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 2, 2, 2>}> {id = 39 : i32} : (!air.async.token, !air.async.token, index, index, memref<52x52xi32>, index, index, index, index, index, index) -> !air.async.token
      %95 = "air.wait_all"(%82, %83, %84, %85, %86, %87, %88, %89, %90, %91, %92, %93, %94) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
      %96 = "air.segment"() <{operandSegmentSizes = array<i32: 0, 0, 0>, sym_name = "segment_0"}> ({
        %97 = "arith.constant"() <{value = 11 : index}> : () -> index
        %98 = "arith.constant"() <{value = 10 : index}> : () -> index
        %99 = "arith.constant"() <{value = 6 : index}> : () -> index
        %100 = "arith.constant"() <{value = 5 : index}> : () -> index
        %101 = "arith.constant"() <{value = 2 : index}> : () -> index
        %102 = "arith.constant"() <{value = 48 : index}> : () -> index
        %103 = "arith.constant"() <{value = 44 : index}> : () -> index
        %104 = "arith.constant"() <{value = 40 : index}> : () -> index
        %105 = "arith.constant"() <{value = 36 : index}> : () -> index
        %106 = "arith.constant"() <{value = 32 : index}> : () -> index
        %107 = "arith.constant"() <{value = 28 : index}> : () -> index
        %108 = "arith.constant"() <{value = 24 : index}> : () -> index
        %109 = "arith.constant"() <{value = 20 : index}> : () -> index
        %110 = "arith.constant"() <{value = 16 : index}> : () -> index
        %111 = "arith.constant"() <{value = 12 : index}> : () -> index
        %112 = "arith.constant"() <{value = 8 : index}> : () -> index
        %113 = "arith.constant"() <{value = 9 : index}> : () -> index
        %114 = "arith.constant"() <{value = 3 : index}> : () -> index
        %115 = "arith.constant"() <{value = 4 : index}> : () -> index
        %116 = "arith.constant"() <{value = 7 : index}> : () -> index
        %117 = "arith.constant"() <{value = 1 : index}> : () -> index
        %118 = "arith.constant"() <{value = 63 : index}> : () -> index
        %119 = "arith.constant"() <{value = 52 : index}> : () -> index
        %120 = "arith.constant"() <{value = 0 : index}> : () -> index
        %121 = "arith.constant"() <{value = 13 : index}> : () -> index
        %122 = "air.wait_all"() : () -> !air.async.token
        %123 = "air.wait_all"() : () -> !air.async.token
        %124:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %125:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %126:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %127:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %128:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %129:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %130:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %131:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %132:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %133:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %134:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %135:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %136:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x63xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x63xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x63xi32, 1>)
        %137 = "air.wait_all"() : () -> !air.async.token
        %138 = "air.channel.get"(%137, %122, %120, %120, %124#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %139 = "air.channel.get"(%137, %122, %117, %120, %125#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %140 = "air.channel.get"(%137, %122, %101, %120, %126#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %141 = "air.channel.get"(%137, %122, %114, %120, %127#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %142 = "air.channel.get"(%137, %122, %115, %120, %128#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %143 = "air.channel.get"(%137, %122, %100, %120, %129#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %144 = "air.channel.get"(%137, %122, %99, %120, %130#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %145 = "air.channel.get"(%137, %122, %116, %120, %131#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %146 = "air.channel.get"(%137, %122, %112, %120, %132#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %147 = "air.channel.get"(%137, %122, %113, %120, %133#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %148 = "air.channel.get"(%137, %122, %98, %120, %134#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %149 = "air.channel.get"(%137, %122, %97, %120, %135#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %150 = "air.channel.get"(%137, %122, %111, %120, %136#1) <{chan_name = @channel_30, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x63xi32, 1>) -> !air.async.token
        %151 = "air.wait_all"(%138, %139, %140, %141, %142, %143, %144, %145, %146, %147, %148, %149, %150) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
        %152:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %153:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %154:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %155:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %156:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %157:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %158:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %159:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %160:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %161:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %162:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %163:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %164:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<63x4xi32, 1>
          "air.execute_terminator"(%442) : (memref<63x4xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<63x4xi32, 1>)
        %165 = "air.wait_all"() : () -> !air.async.token
        %166 = "air.channel.get"(%165, %123, %120, %120, %152#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %167 = "air.channel.get"(%165, %123, %117, %120, %153#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %168 = "air.channel.get"(%165, %123, %101, %120, %154#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %169 = "air.channel.get"(%165, %123, %114, %120, %155#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %170 = "air.channel.get"(%165, %123, %115, %120, %156#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %171 = "air.channel.get"(%165, %123, %100, %120, %157#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %172 = "air.channel.get"(%165, %123, %99, %120, %158#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %173 = "air.channel.get"(%165, %123, %116, %120, %159#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %174 = "air.channel.get"(%165, %123, %112, %120, %160#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %175 = "air.channel.get"(%165, %123, %113, %120, %161#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %176 = "air.channel.get"(%165, %123, %98, %120, %162#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %177 = "air.channel.get"(%165, %123, %97, %120, %163#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %178 = "air.channel.get"(%165, %123, %111, %120, %164#1) <{chan_name = @channel_31, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<63x4xi32, 1>) -> !air.async.token
        %179 = "air.wait_all"(%166, %167, %168, %169, %170, %171, %172, %173, %174, %175, %176, %177, %178) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
        %180:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %181:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %182:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %183:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %184:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %185:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %186:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %187:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %188:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %189:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %190:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %191:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %192:2 = "air.execute"() ({
          %442 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<4x52xi32, 1>
          "air.execute_terminator"(%442) : (memref<4x52xi32, 1>) -> ()
        }) : () -> (!air.async.token, memref<4x52xi32, 1>)
        %193 = "air.channel.put"(%124#0, %124#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %194 = "air.channel.put"(%125#0, %125#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %195 = "air.channel.put"(%126#0, %126#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %196 = "air.channel.put"(%127#0, %127#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %197 = "air.channel.put"(%128#0, %128#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %198 = "air.channel.put"(%129#0, %129#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %199 = "air.channel.put"(%130#0, %130#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %200 = "air.channel.put"(%131#0, %131#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %201 = "air.channel.put"(%132#0, %132#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %202 = "air.channel.put"(%133#0, %133#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %203 = "air.channel.put"(%134#0, %134#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %204 = "air.channel.put"(%135#0, %135#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_11, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %205 = "air.channel.put"(%136#0, %136#1, %120, %120, %120, %113, %115, %116, %116, %118, %117) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 1, 0, 1, 3, 3, 3>}> : (!air.async.token, memref<4x63xi32, 1>, index, index, index, index, index, index, index, index, index) -> !air.async.token
        %206 = "air.channel.put"(%152#0, %152#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %207 = "air.channel.put"(%153#0, %153#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %208 = "air.channel.put"(%154#0, %154#1) <{chan_name = @channel_15, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %209 = "air.channel.put"(%155#0, %155#1) <{chan_name = @channel_16, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %210 = "air.channel.put"(%156#0, %156#1) <{chan_name = @channel_17, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %211 = "air.channel.put"(%157#0, %157#1) <{chan_name = @channel_18, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %212 = "air.channel.put"(%158#0, %158#1) <{chan_name = @channel_19, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %213 = "air.channel.put"(%159#0, %159#1) <{chan_name = @channel_20, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %214 = "air.channel.put"(%160#0, %160#1) <{chan_name = @channel_21, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %215 = "air.channel.put"(%161#0, %161#1) <{chan_name = @channel_22, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %216 = "air.channel.put"(%162#0, %162#1) <{chan_name = @channel_23, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %217 = "air.channel.put"(%163#0, %163#1) <{chan_name = @channel_24, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %218 = "air.channel.put"(%164#0, %164#1) <{chan_name = @channel_25, operandSegmentSizes = array<i32: 1, 0, 1, 0, 0, 0>}> : (!air.async.token, memref<63x4xi32, 1>) -> !air.async.token
        %219 = "air.channel.get"(%120, %120, %180#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 92 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %220 = "air.channel.get"(%117, %120, %181#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 93 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %221 = "air.channel.get"(%101, %120, %182#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 94 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %222 = "air.channel.get"(%114, %120, %183#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 95 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %223 = "air.channel.get"(%115, %120, %184#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 96 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %224 = "air.channel.get"(%100, %120, %185#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 97 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %225 = "air.channel.get"(%99, %120, %186#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 98 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %226 = "air.channel.get"(%116, %120, %187#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 99 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %227 = "air.channel.get"(%112, %120, %188#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 100 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %228 = "air.channel.get"(%113, %120, %189#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 101 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %229 = "air.channel.get"(%98, %120, %190#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 102 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %230 = "air.channel.get"(%97, %120, %191#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 103 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %231 = "air.channel.get"(%111, %120, %192#1, %120, %120, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 104 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %232 = "air.channel.get"(%120, %117, %180#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 105 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %233 = "air.channel.get"(%117, %117, %181#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 106 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %234 = "air.channel.get"(%101, %117, %182#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 107 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %235 = "air.channel.get"(%114, %117, %183#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 108 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %236 = "air.channel.get"(%115, %117, %184#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 109 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %237 = "air.channel.get"(%100, %117, %185#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 110 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %238 = "air.channel.get"(%99, %117, %186#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 111 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %239 = "air.channel.get"(%116, %117, %187#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 112 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %240 = "air.channel.get"(%112, %117, %188#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 113 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %241 = "air.channel.get"(%113, %117, %189#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 114 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %242 = "air.channel.get"(%98, %117, %190#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 115 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %243 = "air.channel.get"(%97, %117, %191#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 116 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %244 = "air.channel.get"(%111, %117, %192#1, %120, %115, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 117 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %245 = "air.channel.get"(%120, %101, %180#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 118 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %246 = "air.channel.get"(%117, %101, %181#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 119 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %247 = "air.channel.get"(%101, %101, %182#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 120 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %248 = "air.channel.get"(%114, %101, %183#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 121 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %249 = "air.channel.get"(%115, %101, %184#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 122 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %250 = "air.channel.get"(%100, %101, %185#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 123 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %251 = "air.channel.get"(%99, %101, %186#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 124 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %252 = "air.channel.get"(%116, %101, %187#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 125 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %253 = "air.channel.get"(%112, %101, %188#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 126 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %254 = "air.channel.get"(%113, %101, %189#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 127 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %255 = "air.channel.get"(%98, %101, %190#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 128 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %256 = "air.channel.get"(%97, %101, %191#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 129 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %257 = "air.channel.get"(%111, %101, %192#1, %120, %112, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 130 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %258 = "air.channel.get"(%120, %114, %180#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 131 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %259 = "air.channel.get"(%117, %114, %181#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 132 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %260 = "air.channel.get"(%101, %114, %182#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 133 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %261 = "air.channel.get"(%114, %114, %183#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 134 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %262 = "air.channel.get"(%115, %114, %184#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 135 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %263 = "air.channel.get"(%100, %114, %185#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 136 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %264 = "air.channel.get"(%99, %114, %186#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 137 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %265 = "air.channel.get"(%116, %114, %187#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 138 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %266 = "air.channel.get"(%112, %114, %188#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 139 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %267 = "air.channel.get"(%113, %114, %189#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 140 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %268 = "air.channel.get"(%98, %114, %190#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 141 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %269 = "air.channel.get"(%97, %114, %191#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 142 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %270 = "air.channel.get"(%111, %114, %192#1, %120, %111, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 143 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %271 = "air.channel.get"(%120, %115, %180#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 144 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %272 = "air.channel.get"(%117, %115, %181#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 145 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %273 = "air.channel.get"(%101, %115, %182#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 146 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %274 = "air.channel.get"(%114, %115, %183#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 147 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %275 = "air.channel.get"(%115, %115, %184#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 148 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %276 = "air.channel.get"(%100, %115, %185#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 149 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %277 = "air.channel.get"(%99, %115, %186#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 150 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %278 = "air.channel.get"(%116, %115, %187#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 151 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %279 = "air.channel.get"(%112, %115, %188#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 152 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %280 = "air.channel.get"(%113, %115, %189#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 153 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %281 = "air.channel.get"(%98, %115, %190#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 154 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %282 = "air.channel.get"(%97, %115, %191#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 155 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %283 = "air.channel.get"(%111, %115, %192#1, %120, %110, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 156 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %284 = "air.channel.get"(%120, %100, %180#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 157 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %285 = "air.channel.get"(%117, %100, %181#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 158 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %286 = "air.channel.get"(%101, %100, %182#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 159 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %287 = "air.channel.get"(%114, %100, %183#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 160 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %288 = "air.channel.get"(%115, %100, %184#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 161 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %289 = "air.channel.get"(%100, %100, %185#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 162 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %290 = "air.channel.get"(%99, %100, %186#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 163 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %291 = "air.channel.get"(%116, %100, %187#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 164 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %292 = "air.channel.get"(%112, %100, %188#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 165 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %293 = "air.channel.get"(%113, %100, %189#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 166 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %294 = "air.channel.get"(%98, %100, %190#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 167 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %295 = "air.channel.get"(%97, %100, %191#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 168 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %296 = "air.channel.get"(%111, %100, %192#1, %120, %109, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 169 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %297 = "air.channel.get"(%120, %99, %180#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 170 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %298 = "air.channel.get"(%117, %99, %181#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 171 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %299 = "air.channel.get"(%101, %99, %182#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 172 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %300 = "air.channel.get"(%114, %99, %183#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 173 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %301 = "air.channel.get"(%115, %99, %184#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 174 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %302 = "air.channel.get"(%100, %99, %185#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 175 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %303 = "air.channel.get"(%99, %99, %186#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 176 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %304 = "air.channel.get"(%116, %99, %187#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 177 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %305 = "air.channel.get"(%112, %99, %188#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 178 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %306 = "air.channel.get"(%113, %99, %189#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 179 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %307 = "air.channel.get"(%98, %99, %190#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 180 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %308 = "air.channel.get"(%97, %99, %191#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 181 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %309 = "air.channel.get"(%111, %99, %192#1, %120, %108, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 182 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %310 = "air.channel.get"(%120, %116, %180#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 183 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %311 = "air.channel.get"(%117, %116, %181#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 184 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %312 = "air.channel.get"(%101, %116, %182#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 185 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %313 = "air.channel.get"(%114, %116, %183#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 186 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %314 = "air.channel.get"(%115, %116, %184#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 187 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %315 = "air.channel.get"(%100, %116, %185#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 188 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %316 = "air.channel.get"(%99, %116, %186#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 189 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %317 = "air.channel.get"(%116, %116, %187#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 190 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %318 = "air.channel.get"(%112, %116, %188#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 191 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %319 = "air.channel.get"(%113, %116, %189#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 192 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %320 = "air.channel.get"(%98, %116, %190#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 193 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %321 = "air.channel.get"(%97, %116, %191#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 194 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %322 = "air.channel.get"(%111, %116, %192#1, %120, %107, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 195 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %323 = "air.channel.get"(%120, %112, %180#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 196 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %324 = "air.channel.get"(%117, %112, %181#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 197 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %325 = "air.channel.get"(%101, %112, %182#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 198 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %326 = "air.channel.get"(%114, %112, %183#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 199 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %327 = "air.channel.get"(%115, %112, %184#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 200 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %328 = "air.channel.get"(%100, %112, %185#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 201 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %329 = "air.channel.get"(%99, %112, %186#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 202 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %330 = "air.channel.get"(%116, %112, %187#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 203 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %331 = "air.channel.get"(%112, %112, %188#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 204 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %332 = "air.channel.get"(%113, %112, %189#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 205 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %333 = "air.channel.get"(%98, %112, %190#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 206 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %334 = "air.channel.get"(%97, %112, %191#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 207 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %335 = "air.channel.get"(%111, %112, %192#1, %120, %106, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 208 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %336 = "air.channel.get"(%120, %113, %180#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 209 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %337 = "air.channel.get"(%117, %113, %181#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 210 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %338 = "air.channel.get"(%101, %113, %182#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 211 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %339 = "air.channel.get"(%114, %113, %183#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 212 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %340 = "air.channel.get"(%115, %113, %184#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 213 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %341 = "air.channel.get"(%100, %113, %185#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 214 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %342 = "air.channel.get"(%99, %113, %186#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 215 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %343 = "air.channel.get"(%116, %113, %187#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 216 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %344 = "air.channel.get"(%112, %113, %188#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 217 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %345 = "air.channel.get"(%113, %113, %189#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 218 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %346 = "air.channel.get"(%98, %113, %190#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 219 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %347 = "air.channel.get"(%97, %113, %191#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 220 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %348 = "air.channel.get"(%111, %113, %192#1, %120, %105, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 221 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %349 = "air.channel.get"(%120, %98, %180#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 222 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %350 = "air.channel.get"(%117, %98, %181#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 223 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %351 = "air.channel.get"(%101, %98, %182#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 224 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %352 = "air.channel.get"(%114, %98, %183#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 225 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %353 = "air.channel.get"(%115, %98, %184#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 226 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %354 = "air.channel.get"(%100, %98, %185#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 227 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %355 = "air.channel.get"(%99, %98, %186#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 228 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %356 = "air.channel.get"(%116, %98, %187#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 229 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %357 = "air.channel.get"(%112, %98, %188#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 230 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %358 = "air.channel.get"(%113, %98, %189#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 231 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %359 = "air.channel.get"(%98, %98, %190#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 232 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %360 = "air.channel.get"(%97, %98, %191#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 233 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %361 = "air.channel.get"(%111, %98, %192#1, %120, %104, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 234 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %362 = "air.channel.get"(%120, %97, %180#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 235 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %363 = "air.channel.get"(%117, %97, %181#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 236 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %364 = "air.channel.get"(%101, %97, %182#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 237 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %365 = "air.channel.get"(%114, %97, %183#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 238 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %366 = "air.channel.get"(%115, %97, %184#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 239 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %367 = "air.channel.get"(%100, %97, %185#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 240 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %368 = "air.channel.get"(%99, %97, %186#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 241 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %369 = "air.channel.get"(%116, %97, %187#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 242 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %370 = "air.channel.get"(%112, %97, %188#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 243 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %371 = "air.channel.get"(%113, %97, %189#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 244 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %372 = "air.channel.get"(%98, %97, %190#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 245 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %373 = "air.channel.get"(%97, %97, %191#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 246 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %374 = "air.channel.get"(%111, %97, %192#1, %120, %103, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 247 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %375 = "air.channel.get"(%120, %111, %180#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 248 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %376 = "air.channel.get"(%117, %111, %181#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 249 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %377 = "air.channel.get"(%101, %111, %182#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 250 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %378 = "air.channel.get"(%114, %111, %183#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 251 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %379 = "air.channel.get"(%115, %111, %184#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 252 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %380 = "air.channel.get"(%100, %111, %185#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 253 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %381 = "air.channel.get"(%99, %111, %186#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 254 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %382 = "air.channel.get"(%116, %111, %187#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 255 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %383 = "air.channel.get"(%112, %111, %188#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 256 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %384 = "air.channel.get"(%113, %111, %189#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 257 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %385 = "air.channel.get"(%98, %111, %190#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 258 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %386 = "air.channel.get"(%97, %111, %191#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 259 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %387 = "air.channel.get"(%111, %111, %192#1, %120, %102, %115, %115, %119, %117) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 0, 2, 1, 2, 2, 2>}> {id = 260 : i32} : (index, index, memref<4x52xi32, 1>, index, index, index, index, index, index) -> !air.async.token
        %388 = "air.herd"(%179, %121, %121) <{operandSegmentSizes = array<i32: 1, 2, 0>, sym_name = "herd_0"}> ({
        ^bb0(%arg7: index, %arg8: index, %arg9: index, %arg10: index):
          %442 = "arith.constant"() <{value = 0 : i32}> : () -> i32
          %443 = "arith.constant"() <{value = 0 : index}> : () -> index
          %444 = "arith.constant"() <{value = 3 : index}> : () -> index
          %445 = "arith.constant"() <{value = 1 : index}> : () -> index
          %446:2 = "air.execute"() ({
            %477 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x1x4x4xi32, 2 : i32>
            "air.execute_terminator"(%477) : (memref<1x1x4x4xi32, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x1x4x4xi32, 2 : i32>)
          %447 = "air.execute"(%446#0) ({
            "linalg.fill"(%442, %446#1) <{operandSegmentSizes = array<i32: 1, 1>}> ({
            ^bb0(%arg11: i32, %arg12: i32):
              "linalg.yield"(%arg11) : (i32) -> ()
            }) : (i32, memref<1x1x4x4xi32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %448:2 = "air.execute"() ({
            %477 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<3x1x4x7xi32, 2 : i32>
            "air.execute_terminator"(%477) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<3x1x4x7xi32, 2 : i32>)
          %449 = "affine.if"(%arg7, %arg8) ({
            %477 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }, {
            %477 = "affine.if"(%arg7, %arg8) ({
              %478 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }, {
              %478 = "affine.if"(%arg7, %arg8) ({
                %479 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }, {
                %479 = "affine.if"(%arg7, %arg8) ({
                  %480 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }, {
                  %480 = "affine.if"(%arg7, %arg8) ({
                    %481 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }, {
                    %481 = "affine.if"(%arg7, %arg8) ({
                      %482 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }, {
                      %482 = "affine.if"(%arg7, %arg8) ({
                        %483 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }, {
                        %483 = "affine.if"(%arg7, %arg8) ({
                          %484 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }, {
                          %484 = "affine.if"(%arg7, %arg8) ({
                            %485 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }, {
                            %485 = "affine.if"(%arg7, %arg8) ({
                              %486 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }, {
                              %486 = "affine.if"(%arg7, %arg8) ({
                                %487 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }, {
                                %487 = "affine.if"(%arg7, %arg8) ({
                                  %488 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_11, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }, {
                                  %488 = "air.channel.get"(%448#0, %447, %arg7, %arg8, %448#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }) {condition = affine_set<()[s0, s1] : (s0 - 11 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }) {condition = affine_set<()[s0, s1] : (s0 - 10 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }) {condition = affine_set<()[s0, s1] : (s0 - 9 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }) {condition = affine_set<()[s0, s1] : (s0 - 8 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 - 7 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 - 6 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 - 5 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 - 4 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 - 3 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 - 2 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 - 1 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
          %450:2 = "air.execute"() ({
            %477 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x3x7x4xi32, 2 : i32>
            "air.execute_terminator"(%477) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x3x7x4xi32, 2 : i32>)
          %451 = "affine.if"(%arg7, %arg8) ({
            %477 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }, {
            %477 = "affine.if"(%arg7, %arg8) ({
              %478 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }, {
              %478 = "affine.if"(%arg7, %arg8) ({
                %479 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_15, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }, {
                %479 = "affine.if"(%arg7, %arg8) ({
                  %480 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_16, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }, {
                  %480 = "affine.if"(%arg7, %arg8) ({
                    %481 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_17, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }, {
                    %481 = "affine.if"(%arg7, %arg8) ({
                      %482 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_18, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }, {
                      %482 = "affine.if"(%arg7, %arg8) ({
                        %483 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_19, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }, {
                        %483 = "affine.if"(%arg7, %arg8) ({
                          %484 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_20, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }, {
                          %484 = "affine.if"(%arg7, %arg8) ({
                            %485 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_21, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }, {
                            %485 = "affine.if"(%arg7, %arg8) ({
                              %486 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_22, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }, {
                              %486 = "affine.if"(%arg7, %arg8) ({
                                %487 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_23, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }, {
                                %487 = "affine.if"(%arg7, %arg8) ({
                                  %488 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_24, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }, {
                                  %488 = "air.channel.get"(%450#0, %447, %arg7, %arg8, %450#1) <{chan_name = @channel_25, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 11 == 0)>} : (index, index) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 10 == 0)>} : (index, index) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 9 == 0)>} : (index, index) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 8 == 0)>} : (index, index) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 7 == 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 6 == 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 5 == 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 4 == 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 3 == 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 2 == 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 1 == 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 == 0)>} : (index, index) -> !air.async.token
          %452 = "air.wait_all"(%447, %450#0, %448#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %453 = "scf.for"(%443, %444, %445, %452) ({
          ^bb0(%arg11: index, %arg12: !air.async.token):
            %477 = "memref.subview"(%448#1, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0, 0, 0>, static_sizes = array<i64: 1, 1, 4, 7>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<3x1x4x7xi32, 2 : i32>, index) -> memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>
            %478 = "memref.subview"(%450#1, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: 0, -9223372036854775808, 0, 0>, static_sizes = array<i64: 1, 1, 7, 4>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<1x3x7x4xi32, 2 : i32>, index) -> memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>
            %479 = "air.execute"(%arg12) ({
              "linalg.generic"(%477, %478, %446#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d2, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 2, 1>}> ({
              ^bb0(%arg13: i32, %arg14: i32, %arg15: i32):
                %480 = "arith.muli"(%arg13, %arg14) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
                %481 = "arith.addi"(%arg15, %480) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
                "linalg.yield"(%481) : (i32) -> ()
              }) {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[52, 52], [0, 0, 63], [4, 4], [0, 0, 3]]>, packing_config = #amdaie.packing_config<packing_config = [{packedSizes = [4, 4, 7], transposePackIndices = [0, 1, 2], unpackEmpty = [false, false, true], innerPerm = [[0, 1], [1, 0], [0, 1]], outerPerm = [[1, 0], [1, 0], [1, 0]]}]>} : (memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>, memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>, memref<1x1x4x4xi32, 2 : i32>) -> ()
              "air.execute_terminator"() : () -> ()
            }) : (!air.async.token) -> !air.async.token
            "scf.yield"(%479) : (!air.async.token) -> ()
          }) : (index, index, index, !air.async.token) -> !air.async.token
          %454 = "air.execute"(%448#0) ({
            "memref.dealloc"(%448#1) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %455 = "air.execute"(%450#0) ({
            "memref.dealloc"(%450#1) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %456 = "air.wait_all"(%453, %451, %449) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %457:2 = "air.execute"() ({
            %477 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<3x1x4x7xi32, 2 : i32>
            "air.execute_terminator"(%477) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<3x1x4x7xi32, 2 : i32>)
          %458 = "affine.if"(%arg7, %arg8) ({
            %477 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }, {
            %477 = "affine.if"(%arg7, %arg8) ({
              %478 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }, {
              %478 = "affine.if"(%arg7, %arg8) ({
                %479 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }, {
                %479 = "affine.if"(%arg7, %arg8) ({
                  %480 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }, {
                  %480 = "affine.if"(%arg7, %arg8) ({
                    %481 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }, {
                    %481 = "affine.if"(%arg7, %arg8) ({
                      %482 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }, {
                      %482 = "affine.if"(%arg7, %arg8) ({
                        %483 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }, {
                        %483 = "affine.if"(%arg7, %arg8) ({
                          %484 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }, {
                          %484 = "affine.if"(%arg7, %arg8) ({
                            %485 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }, {
                            %485 = "affine.if"(%arg7, %arg8) ({
                              %486 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }, {
                              %486 = "affine.if"(%arg7, %arg8) ({
                                %487 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }, {
                                %487 = "affine.if"(%arg7, %arg8) ({
                                  %488 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_11, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }, {
                                  %488 = "air.channel.get"(%457#0, %456, %arg7, %arg8, %457#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }) {condition = affine_set<()[s0, s1] : (s0 - 11 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }) {condition = affine_set<()[s0, s1] : (s0 - 10 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }) {condition = affine_set<()[s0, s1] : (s0 - 9 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }) {condition = affine_set<()[s0, s1] : (s0 - 8 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 - 7 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 - 6 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 - 5 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 - 4 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 - 3 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 - 2 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 - 1 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
          %459:2 = "air.execute"() ({
            %477 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x3x7x4xi32, 2 : i32>
            "air.execute_terminator"(%477) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x3x7x4xi32, 2 : i32>)
          %460 = "affine.if"(%arg7, %arg8) ({
            %477 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }, {
            %477 = "affine.if"(%arg7, %arg8) ({
              %478 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }, {
              %478 = "affine.if"(%arg7, %arg8) ({
                %479 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_15, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }, {
                %479 = "affine.if"(%arg7, %arg8) ({
                  %480 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_16, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }, {
                  %480 = "affine.if"(%arg7, %arg8) ({
                    %481 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_17, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }, {
                    %481 = "affine.if"(%arg7, %arg8) ({
                      %482 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_18, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }, {
                      %482 = "affine.if"(%arg7, %arg8) ({
                        %483 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_19, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }, {
                        %483 = "affine.if"(%arg7, %arg8) ({
                          %484 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_20, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }, {
                          %484 = "affine.if"(%arg7, %arg8) ({
                            %485 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_21, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }, {
                            %485 = "affine.if"(%arg7, %arg8) ({
                              %486 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_22, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }, {
                              %486 = "affine.if"(%arg7, %arg8) ({
                                %487 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_23, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }, {
                                %487 = "affine.if"(%arg7, %arg8) ({
                                  %488 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_24, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }, {
                                  %488 = "air.channel.get"(%459#0, %456, %arg7, %arg8, %459#1) <{chan_name = @channel_25, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 11 == 0)>} : (index, index) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 10 == 0)>} : (index, index) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 9 == 0)>} : (index, index) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 8 == 0)>} : (index, index) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 7 == 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 6 == 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 5 == 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 4 == 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 3 == 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 2 == 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 1 == 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 == 0)>} : (index, index) -> !air.async.token
          %461 = "air.wait_all"(%456, %459#0, %457#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %462 = "scf.for"(%443, %444, %445, %461) ({
          ^bb0(%arg11: index, %arg12: !air.async.token):
            %477 = "memref.subview"(%457#1, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0, 0, 0>, static_sizes = array<i64: 1, 1, 4, 7>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<3x1x4x7xi32, 2 : i32>, index) -> memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>
            %478 = "memref.subview"(%459#1, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: 0, -9223372036854775808, 0, 0>, static_sizes = array<i64: 1, 1, 7, 4>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<1x3x7x4xi32, 2 : i32>, index) -> memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>
            %479 = "air.execute"(%arg12) ({
              "linalg.generic"(%477, %478, %446#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d2, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 2, 1>}> ({
              ^bb0(%arg13: i32, %arg14: i32, %arg15: i32):
                %480 = "arith.muli"(%arg13, %arg14) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
                %481 = "arith.addi"(%arg15, %480) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
                "linalg.yield"(%481) : (i32) -> ()
              }) {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[52, 52], [0, 0, 63], [4, 4], [0, 0, 3]]>, packing_config = #amdaie.packing_config<packing_config = [{packedSizes = [4, 4, 7], transposePackIndices = [0, 1, 2], unpackEmpty = [false, false, true], innerPerm = [[0, 1], [1, 0], [0, 1]], outerPerm = [[1, 0], [1, 0], [1, 0]]}]>} : (memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>, memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>, memref<1x1x4x4xi32, 2 : i32>) -> ()
              "air.execute_terminator"() : () -> ()
            }) : (!air.async.token) -> !air.async.token
            "scf.yield"(%479) : (!air.async.token) -> ()
          }) : (index, index, index, !air.async.token) -> !air.async.token
          %463 = "air.execute"(%457#0) ({
            "memref.dealloc"(%457#1) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %464 = "air.execute"(%459#0) ({
            "memref.dealloc"(%459#1) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %465 = "air.wait_all"(%462, %460, %458) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %466:2 = "air.execute"() ({
            %477 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<3x1x4x7xi32, 2 : i32>
            "air.execute_terminator"(%477) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<3x1x4x7xi32, 2 : i32>)
          %467 = "affine.if"(%arg7, %arg8) ({
            %477 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }, {
            %477 = "affine.if"(%arg7, %arg8) ({
              %478 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }, {
              %478 = "affine.if"(%arg7, %arg8) ({
                %479 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }, {
                %479 = "affine.if"(%arg7, %arg8) ({
                  %480 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }, {
                  %480 = "affine.if"(%arg7, %arg8) ({
                    %481 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }, {
                    %481 = "affine.if"(%arg7, %arg8) ({
                      %482 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }, {
                      %482 = "affine.if"(%arg7, %arg8) ({
                        %483 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }, {
                        %483 = "affine.if"(%arg7, %arg8) ({
                          %484 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }, {
                          %484 = "affine.if"(%arg7, %arg8) ({
                            %485 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }, {
                            %485 = "affine.if"(%arg7, %arg8) ({
                              %486 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }, {
                              %486 = "affine.if"(%arg7, %arg8) ({
                                %487 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }, {
                                %487 = "affine.if"(%arg7, %arg8) ({
                                  %488 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_11, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }, {
                                  %488 = "air.channel.get"(%466#0, %465, %arg7, %arg8, %466#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }) {condition = affine_set<()[s0, s1] : (s0 - 11 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }) {condition = affine_set<()[s0, s1] : (s0 - 10 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }) {condition = affine_set<()[s0, s1] : (s0 - 9 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }) {condition = affine_set<()[s0, s1] : (s0 - 8 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 - 7 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 - 6 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 - 5 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 - 4 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 - 3 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 - 2 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 - 1 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
          %468:2 = "air.execute"() ({
            %477 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x3x7x4xi32, 2 : i32>
            "air.execute_terminator"(%477) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x3x7x4xi32, 2 : i32>)
          %469 = "affine.if"(%arg7, %arg8) ({
            %477 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }, {
            %477 = "affine.if"(%arg7, %arg8) ({
              %478 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }, {
              %478 = "affine.if"(%arg7, %arg8) ({
                %479 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_15, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }, {
                %479 = "affine.if"(%arg7, %arg8) ({
                  %480 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_16, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }, {
                  %480 = "affine.if"(%arg7, %arg8) ({
                    %481 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_17, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }, {
                    %481 = "affine.if"(%arg7, %arg8) ({
                      %482 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_18, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }, {
                      %482 = "affine.if"(%arg7, %arg8) ({
                        %483 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_19, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }, {
                        %483 = "affine.if"(%arg7, %arg8) ({
                          %484 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_20, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }, {
                          %484 = "affine.if"(%arg7, %arg8) ({
                            %485 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_21, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }, {
                            %485 = "affine.if"(%arg7, %arg8) ({
                              %486 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_22, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }, {
                              %486 = "affine.if"(%arg7, %arg8) ({
                                %487 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_23, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }, {
                                %487 = "affine.if"(%arg7, %arg8) ({
                                  %488 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_24, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }, {
                                  %488 = "air.channel.get"(%468#0, %465, %arg7, %arg8, %468#1) <{chan_name = @channel_25, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                                  "affine.yield"(%488) : (!air.async.token) -> ()
                                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 11 == 0)>} : (index, index) -> !air.async.token
                                "affine.yield"(%487) : (!air.async.token) -> ()
                              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 10 == 0)>} : (index, index) -> !air.async.token
                              "affine.yield"(%486) : (!air.async.token) -> ()
                            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 9 == 0)>} : (index, index) -> !air.async.token
                            "affine.yield"(%485) : (!air.async.token) -> ()
                          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 8 == 0)>} : (index, index) -> !air.async.token
                          "affine.yield"(%484) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 7 == 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%483) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 6 == 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%482) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 5 == 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%481) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 4 == 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%480) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 3 == 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%479) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 2 == 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%478) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 1 == 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%477) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 == 0)>} : (index, index) -> !air.async.token
          %470 = "air.wait_all"(%465, %468#0, %466#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %471 = "scf.for"(%443, %444, %445, %470) ({
          ^bb0(%arg11: index, %arg12: !air.async.token):
            %477 = "memref.subview"(%466#1, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0, 0, 0>, static_sizes = array<i64: 1, 1, 4, 7>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<3x1x4x7xi32, 2 : i32>, index) -> memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>
            %478 = "memref.subview"(%468#1, %arg11) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: 0, -9223372036854775808, 0, 0>, static_sizes = array<i64: 1, 1, 7, 4>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<1x3x7x4xi32, 2 : i32>, index) -> memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>
            %479 = "air.execute"(%arg12) ({
              "linalg.generic"(%477, %478, %446#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d2, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 2, 1>}> ({
              ^bb0(%arg13: i32, %arg14: i32, %arg15: i32):
                %480 = "arith.muli"(%arg13, %arg14) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
                %481 = "arith.addi"(%arg15, %480) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
                "linalg.yield"(%481) : (i32) -> ()
              }) {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[52, 52], [0, 0, 63], [4, 4], [0, 0, 3]]>, packing_config = #amdaie.packing_config<packing_config = [{packedSizes = [4, 4, 7], transposePackIndices = [0, 1, 2], unpackEmpty = [false, false, true], innerPerm = [[0, 1], [1, 0], [0, 1]], outerPerm = [[1, 0], [1, 0], [1, 0]]}]>} : (memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>, memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>, memref<1x1x4x4xi32, 2 : i32>) -> ()
              "air.execute_terminator"() : () -> ()
            }) : (!air.async.token) -> !air.async.token
            "scf.yield"(%479) : (!air.async.token) -> ()
          }) : (index, index, index, !air.async.token) -> !air.async.token
          %472 = "air.execute"(%466#0) ({
            "memref.dealloc"(%466#1) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %473 = "air.execute"(%468#0) ({
            "memref.dealloc"(%468#1) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %474 = "air.wait_all"(%471, %469, %467) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
          %475 = "air.channel.put"(%474, %arg7, %arg8, %446#1) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 1, 2, 1, 0, 0, 0>}> : (!air.async.token, index, index, memref<1x1x4x4xi32, 2 : i32>) -> !air.async.token
          %476 = "air.execute"(%474) ({
            "memref.dealloc"(%446#1) : (memref<1x1x4x4xi32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          "air.herd_terminator"() : () -> ()
        }) {id = 3 : i32} : (!air.async.token, index, index) -> !air.async.token
        %389 = "air.channel.put"(%388, %122, %120, %120, %180#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %390 = "air.channel.put"(%388, %122, %117, %120, %181#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %391 = "air.channel.put"(%388, %122, %101, %120, %182#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %392 = "air.channel.put"(%388, %122, %114, %120, %183#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %393 = "air.channel.put"(%388, %122, %115, %120, %184#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %394 = "air.channel.put"(%388, %122, %100, %120, %185#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %395 = "air.channel.put"(%388, %122, %99, %120, %186#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %396 = "air.channel.put"(%388, %122, %116, %120, %187#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %397 = "air.channel.put"(%388, %122, %112, %120, %188#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %398 = "air.channel.put"(%388, %122, %113, %120, %189#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %399 = "air.channel.put"(%388, %122, %98, %120, %190#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %400 = "air.channel.put"(%388, %122, %97, %120, %191#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %401 = "air.channel.put"(%388, %122, %111, %120, %192#1) <{chan_name = @channel_32, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<4x52xi32, 1>) -> !air.async.token
        %402 = "air.wait_all"(%389, %390, %391, %392, %393, %394, %395, %396, %397, %398, %399, %400, %401) : (!air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token) -> !air.async.token
        %403 = "air.execute"(%151) ({
          "memref.dealloc"(%136#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %404 = "air.execute"(%151) ({
          "memref.dealloc"(%135#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %405 = "air.execute"(%151) ({
          "memref.dealloc"(%134#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %406 = "air.execute"(%151) ({
          "memref.dealloc"(%133#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %407 = "air.execute"(%151) ({
          "memref.dealloc"(%132#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %408 = "air.execute"(%151) ({
          "memref.dealloc"(%131#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %409 = "air.execute"(%151) ({
          "memref.dealloc"(%130#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %410 = "air.execute"(%151) ({
          "memref.dealloc"(%129#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %411 = "air.execute"(%151) ({
          "memref.dealloc"(%128#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %412 = "air.execute"(%151) ({
          "memref.dealloc"(%127#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %413 = "air.execute"(%151) ({
          "memref.dealloc"(%126#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %414 = "air.execute"(%151) ({
          "memref.dealloc"(%125#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %415 = "air.execute"(%151) ({
          "memref.dealloc"(%124#1) : (memref<4x63xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %416 = "air.execute"(%179) ({
          "memref.dealloc"(%164#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %417 = "air.execute"(%179) ({
          "memref.dealloc"(%163#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %418 = "air.execute"(%179) ({
          "memref.dealloc"(%162#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %419 = "air.execute"(%179) ({
          "memref.dealloc"(%161#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %420 = "air.execute"(%179) ({
          "memref.dealloc"(%160#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %421 = "air.execute"(%179) ({
          "memref.dealloc"(%159#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %422 = "air.execute"(%179) ({
          "memref.dealloc"(%158#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %423 = "air.execute"(%179) ({
          "memref.dealloc"(%157#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %424 = "air.execute"(%179) ({
          "memref.dealloc"(%156#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %425 = "air.execute"(%179) ({
          "memref.dealloc"(%155#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %426 = "air.execute"(%179) ({
          "memref.dealloc"(%154#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %427 = "air.execute"(%179) ({
          "memref.dealloc"(%153#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %428 = "air.execute"(%179) ({
          "memref.dealloc"(%152#1) : (memref<63x4xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %429 = "air.execute"(%402) ({
          "memref.dealloc"(%192#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %430 = "air.execute"(%402) ({
          "memref.dealloc"(%191#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %431 = "air.execute"(%402) ({
          "memref.dealloc"(%190#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %432 = "air.execute"(%402) ({
          "memref.dealloc"(%189#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %433 = "air.execute"(%402) ({
          "memref.dealloc"(%188#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %434 = "air.execute"(%402) ({
          "memref.dealloc"(%187#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %435 = "air.execute"(%402) ({
          "memref.dealloc"(%186#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %436 = "air.execute"(%402) ({
          "memref.dealloc"(%185#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %437 = "air.execute"(%402) ({
          "memref.dealloc"(%184#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %438 = "air.execute"(%402) ({
          "memref.dealloc"(%183#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %439 = "air.execute"(%402) ({
          "memref.dealloc"(%182#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %440 = "air.execute"(%402) ({
          "memref.dealloc"(%181#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        %441 = "air.execute"(%402) ({
          "memref.dealloc"(%180#1) : (memref<4x52xi32, 1>) -> ()
          "air.execute_terminator"() : () -> ()
        }) : (!air.async.token) -> !air.async.token
        "air.segment_terminator"() : () -> ()
      }) {id = 2 : i32} : () -> !air.async.token
      "air.launch_terminator"() : () -> ()
    }) {id = 1 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<52x63xi32>, memref<63x52xi32>, memref<52x52xi32>) -> !air.async.token
    "func.return"() : () -> ()
  }) {translation_info = #iree_codegen.translation_info<Custom>} : () -> ()
}) : () -> ()
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_52x52_63xi32__dispatch_0.mlir:19:8: error: 'air.herd' op 
Unplaced herd: herd_0

        %7 = linalg.matmul ins(%3, %4 : tensor<52x63xi32>, tensor<63x52xi32>) outs(%6 : tensor<52x52xi32>) -> tensor<52x52xi32>
       ^
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_52x52_63xi32__dispatch_0.mlir:19:8: note: see current operation: 
%0 = "air.herd"(<<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>, <<UNKNOWN SSA VALUE>>) <{operandSegmentSizes = array<i32: 1, 2, 0>, sym_name = "herd_0"}> ({
^bb0(%arg0: index, %arg1: index, %arg2: index, %arg3: index):
  %0 = "arith.constant"() <{value = 0 : i32}> : () -> i32
  %1 = "arith.constant"() <{value = 0 : index}> : () -> index
  %2 = "arith.constant"() <{value = 3 : index}> : () -> index
  %3 = "arith.constant"() <{value = 1 : index}> : () -> index
  %4:2 = "air.execute"() ({
    %35 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x1x4x4xi32, 2 : i32>
    "air.execute_terminator"(%35) : (memref<1x1x4x4xi32, 2 : i32>) -> ()
  }) : () -> (!air.async.token, memref<1x1x4x4xi32, 2 : i32>)
  %5 = "air.execute"(%4#0) ({
    "linalg.fill"(%0, %4#1) <{operandSegmentSizes = array<i32: 1, 1>}> ({
    ^bb0(%arg4: i32, %arg5: i32):
      "linalg.yield"(%arg4) : (i32) -> ()
    }) : (i32, memref<1x1x4x4xi32, 2 : i32>) -> ()
    "air.execute_terminator"() : () -> ()
  }) : (!air.async.token) -> !air.async.token
  %6:2 = "air.execute"() ({
    %35 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<3x1x4x7xi32, 2 : i32>
    "air.execute_terminator"(%35) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
  }) : () -> (!air.async.token, memref<3x1x4x7xi32, 2 : i32>)
  %7 = "affine.if"(%arg0, %arg1) ({
    %35 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }, {
    %35 = "affine.if"(%arg0, %arg1) ({
      %36 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }, {
      %36 = "affine.if"(%arg0, %arg1) ({
        %37 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }, {
        %37 = "affine.if"(%arg0, %arg1) ({
          %38 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }, {
          %38 = "affine.if"(%arg0, %arg1) ({
            %39 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }, {
            %39 = "affine.if"(%arg0, %arg1) ({
              %40 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }, {
              %40 = "affine.if"(%arg0, %arg1) ({
                %41 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }, {
                %41 = "affine.if"(%arg0, %arg1) ({
                  %42 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }, {
                  %42 = "affine.if"(%arg0, %arg1) ({
                    %43 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }, {
                    %43 = "affine.if"(%arg0, %arg1) ({
                      %44 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }, {
                      %44 = "affine.if"(%arg0, %arg1) ({
                        %45 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }, {
                        %45 = "affine.if"(%arg0, %arg1) ({
                          %46 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_11, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }, {
                          %46 = "air.channel.get"(%6#0, %5, %arg0, %arg1, %6#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 - 11 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 - 10 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 - 9 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 - 8 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 - 7 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 - 6 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 - 5 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 - 4 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }) {condition = affine_set<()[s0, s1] : (s0 - 3 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }) {condition = affine_set<()[s0, s1] : (s0 - 2 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }) {condition = affine_set<()[s0, s1] : (s0 - 1 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }) {condition = affine_set<()[s0, s1] : (s0 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
  %8:2 = "air.execute"() ({
    %35 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x3x7x4xi32, 2 : i32>
    "air.execute_terminator"(%35) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
  }) : () -> (!air.async.token, memref<1x3x7x4xi32, 2 : i32>)
  %9 = "affine.if"(%arg0, %arg1) ({
    %35 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }, {
    %35 = "affine.if"(%arg0, %arg1) ({
      %36 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }, {
      %36 = "affine.if"(%arg0, %arg1) ({
        %37 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_15, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }, {
        %37 = "affine.if"(%arg0, %arg1) ({
          %38 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_16, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }, {
          %38 = "affine.if"(%arg0, %arg1) ({
            %39 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_17, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }, {
            %39 = "affine.if"(%arg0, %arg1) ({
              %40 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_18, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }, {
              %40 = "affine.if"(%arg0, %arg1) ({
                %41 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_19, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }, {
                %41 = "affine.if"(%arg0, %arg1) ({
                  %42 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_20, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }, {
                  %42 = "affine.if"(%arg0, %arg1) ({
                    %43 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_21, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }, {
                    %43 = "affine.if"(%arg0, %arg1) ({
                      %44 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_22, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }, {
                      %44 = "affine.if"(%arg0, %arg1) ({
                        %45 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_23, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }, {
                        %45 = "affine.if"(%arg0, %arg1) ({
                          %46 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_24, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }, {
                          %46 = "air.channel.get"(%8#0, %5, %arg0, %arg1, %8#1) <{chan_name = @channel_25, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 11 == 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 10 == 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 9 == 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 8 == 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 7 == 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 6 == 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 5 == 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 4 == 0)>} : (index, index) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 3 == 0)>} : (index, index) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 2 == 0)>} : (index, index) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 1 == 0)>} : (index, index) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 == 0)>} : (index, index) -> !air.async.token
  %10 = "air.wait_all"(%5, %8#0, %6#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
  %11 = "scf.for"(%1, %2, %3, %10) ({
  ^bb0(%arg4: index, %arg5: !air.async.token):
    %35 = "memref.subview"(%6#1, %arg4) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0, 0, 0>, static_sizes = array<i64: 1, 1, 4, 7>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<3x1x4x7xi32, 2 : i32>, index) -> memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>
    %36 = "memref.subview"(%8#1, %arg4) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: 0, -9223372036854775808, 0, 0>, static_sizes = array<i64: 1, 1, 7, 4>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<1x3x7x4xi32, 2 : i32>, index) -> memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>
    %37 = "air.execute"(%arg5) ({
      "linalg.generic"(%35, %36, %4#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d2, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 2, 1>}> ({
      ^bb0(%arg6: i32, %arg7: i32, %arg8: i32):
        %38 = "arith.muli"(%arg6, %arg7) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
        %39 = "arith.addi"(%arg8, %38) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
        "linalg.yield"(%39) : (i32) -> ()
      }) {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[52, 52], [0, 0, 63], [4, 4], [0, 0, 3]]>, packing_config = #amdaie.packing_config<packing_config = [{packedSizes = [4, 4, 7], transposePackIndices = [0, 1, 2], unpackEmpty = [false, false, true], innerPerm = [[0, 1], [1, 0], [0, 1]], outerPerm = [[1, 0], [1, 0], [1, 0]]}]>} : (memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>, memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>, memref<1x1x4x4xi32, 2 : i32>) -> ()
      "air.execute_terminator"() : () -> ()
    }) : (!air.async.token) -> !air.async.token
    "scf.yield"(%37) : (!air.async.token) -> ()
  }) : (index, index, index, !air.async.token) -> !air.async.token
  %12 = "air.execute"(%6#0) ({
    "memref.dealloc"(%6#1) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
    "air.execute_terminator"() : () -> ()
  }) : (!air.async.token) -> !air.async.token
  %13 = "air.execute"(%8#0) ({
    "memref.dealloc"(%8#1) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
    "air.execute_terminator"() : () -> ()
  }) : (!air.async.token) -> !air.async.token
  %14 = "air.wait_all"(%11, %9, %7) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
  %15:2 = "air.execute"() ({
    %35 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<3x1x4x7xi32, 2 : i32>
    "air.execute_terminator"(%35) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
  }) : () -> (!air.async.token, memref<3x1x4x7xi32, 2 : i32>)
  %16 = "affine.if"(%arg0, %arg1) ({
    %35 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }, {
    %35 = "affine.if"(%arg0, %arg1) ({
      %36 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }, {
      %36 = "affine.if"(%arg0, %arg1) ({
        %37 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }, {
        %37 = "affine.if"(%arg0, %arg1) ({
          %38 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }, {
          %38 = "affine.if"(%arg0, %arg1) ({
            %39 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }, {
            %39 = "affine.if"(%arg0, %arg1) ({
              %40 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }, {
              %40 = "affine.if"(%arg0, %arg1) ({
                %41 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }, {
                %41 = "affine.if"(%arg0, %arg1) ({
                  %42 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }, {
                  %42 = "affine.if"(%arg0, %arg1) ({
                    %43 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }, {
                    %43 = "affine.if"(%arg0, %arg1) ({
                      %44 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }, {
                      %44 = "affine.if"(%arg0, %arg1) ({
                        %45 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }, {
                        %45 = "affine.if"(%arg0, %arg1) ({
                          %46 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_11, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }, {
                          %46 = "air.channel.get"(%15#0, %14, %arg0, %arg1, %15#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 - 11 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 - 10 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 - 9 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 - 8 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 - 7 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 - 6 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 - 5 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 - 4 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }) {condition = affine_set<()[s0, s1] : (s0 - 3 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }) {condition = affine_set<()[s0, s1] : (s0 - 2 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }) {condition = affine_set<()[s0, s1] : (s0 - 1 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }) {condition = affine_set<()[s0, s1] : (s0 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
  %17:2 = "air.execute"() ({
    %35 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x3x7x4xi32, 2 : i32>
    "air.execute_terminator"(%35) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
  }) : () -> (!air.async.token, memref<1x3x7x4xi32, 2 : i32>)
  %18 = "affine.if"(%arg0, %arg1) ({
    %35 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }, {
    %35 = "affine.if"(%arg0, %arg1) ({
      %36 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }, {
      %36 = "affine.if"(%arg0, %arg1) ({
        %37 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_15, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }, {
        %37 = "affine.if"(%arg0, %arg1) ({
          %38 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_16, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }, {
          %38 = "affine.if"(%arg0, %arg1) ({
            %39 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_17, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }, {
            %39 = "affine.if"(%arg0, %arg1) ({
              %40 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_18, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }, {
              %40 = "affine.if"(%arg0, %arg1) ({
                %41 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_19, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }, {
                %41 = "affine.if"(%arg0, %arg1) ({
                  %42 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_20, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }, {
                  %42 = "affine.if"(%arg0, %arg1) ({
                    %43 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_21, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }, {
                    %43 = "affine.if"(%arg0, %arg1) ({
                      %44 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_22, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }, {
                      %44 = "affine.if"(%arg0, %arg1) ({
                        %45 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_23, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }, {
                        %45 = "affine.if"(%arg0, %arg1) ({
                          %46 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_24, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }, {
                          %46 = "air.channel.get"(%17#0, %14, %arg0, %arg1, %17#1) <{chan_name = @channel_25, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 11 == 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 10 == 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 9 == 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 8 == 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 7 == 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 6 == 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 5 == 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 4 == 0)>} : (index, index) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 3 == 0)>} : (index, index) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 2 == 0)>} : (index, index) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 1 == 0)>} : (index, index) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 == 0)>} : (index, index) -> !air.async.token
  %19 = "air.wait_all"(%14, %17#0, %15#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
  %20 = "scf.for"(%1, %2, %3, %19) ({
  ^bb0(%arg4: index, %arg5: !air.async.token):
    %35 = "memref.subview"(%15#1, %arg4) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0, 0, 0>, static_sizes = array<i64: 1, 1, 4, 7>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<3x1x4x7xi32, 2 : i32>, index) -> memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>
    %36 = "memref.subview"(%17#1, %arg4) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: 0, -9223372036854775808, 0, 0>, static_sizes = array<i64: 1, 1, 7, 4>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<1x3x7x4xi32, 2 : i32>, index) -> memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>
    %37 = "air.execute"(%arg5) ({
      "linalg.generic"(%35, %36, %4#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d2, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 2, 1>}> ({
      ^bb0(%arg6: i32, %arg7: i32, %arg8: i32):
        %38 = "arith.muli"(%arg6, %arg7) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
        %39 = "arith.addi"(%arg8, %38) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
        "linalg.yield"(%39) : (i32) -> ()
      }) {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[52, 52], [0, 0, 63], [4, 4], [0, 0, 3]]>, packing_config = #amdaie.packing_config<packing_config = [{packedSizes = [4, 4, 7], transposePackIndices = [0, 1, 2], unpackEmpty = [false, false, true], innerPerm = [[0, 1], [1, 0], [0, 1]], outerPerm = [[1, 0], [1, 0], [1, 0]]}]>} : (memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>, memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>, memref<1x1x4x4xi32, 2 : i32>) -> ()
      "air.execute_terminator"() : () -> ()
    }) : (!air.async.token) -> !air.async.token
    "scf.yield"(%37) : (!air.async.token) -> ()
  }) : (index, index, index, !air.async.token) -> !air.async.token
  %21 = "air.execute"(%15#0) ({
    "memref.dealloc"(%15#1) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
    "air.execute_terminator"() : () -> ()
  }) : (!air.async.token) -> !air.async.token
  %22 = "air.execute"(%17#0) ({
    "memref.dealloc"(%17#1) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
    "air.execute_terminator"() : () -> ()
  }) : (!air.async.token) -> !air.async.token
  %23 = "air.wait_all"(%20, %18, %16) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
  %24:2 = "air.execute"() ({
    %35 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<3x1x4x7xi32, 2 : i32>
    "air.execute_terminator"(%35) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
  }) : () -> (!air.async.token, memref<3x1x4x7xi32, 2 : i32>)
  %25 = "affine.if"(%arg0, %arg1) ({
    %35 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }, {
    %35 = "affine.if"(%arg0, %arg1) ({
      %36 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }, {
      %36 = "affine.if"(%arg0, %arg1) ({
        %37 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }, {
        %37 = "affine.if"(%arg0, %arg1) ({
          %38 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }, {
          %38 = "affine.if"(%arg0, %arg1) ({
            %39 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }, {
            %39 = "affine.if"(%arg0, %arg1) ({
              %40 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }, {
              %40 = "affine.if"(%arg0, %arg1) ({
                %41 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }, {
                %41 = "affine.if"(%arg0, %arg1) ({
                  %42 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }, {
                  %42 = "affine.if"(%arg0, %arg1) ({
                    %43 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }, {
                    %43 = "affine.if"(%arg0, %arg1) ({
                      %44 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }, {
                      %44 = "affine.if"(%arg0, %arg1) ({
                        %45 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_10, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }, {
                        %45 = "affine.if"(%arg0, %arg1) ({
                          %46 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_11, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }, {
                          %46 = "air.channel.get"(%24#0, %23, %arg0, %arg1, %24#1) <{chan_name = @channel_12, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<3x1x4x7xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 - 11 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 - 10 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 - 9 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 - 8 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 - 7 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 - 6 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 - 5 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 - 4 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }) {condition = affine_set<()[s0, s1] : (s0 - 3 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }) {condition = affine_set<()[s0, s1] : (s0 - 2 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }) {condition = affine_set<()[s0, s1] : (s0 - 1 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }) {condition = affine_set<()[s0, s1] : (s0 == 0, s1 >= 0, -s1 + 12 >= 0)>} : (index, index) -> !air.async.token
  %26:2 = "air.execute"() ({
    %35 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x3x7x4xi32, 2 : i32>
    "air.execute_terminator"(%35) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
  }) : () -> (!air.async.token, memref<1x3x7x4xi32, 2 : i32>)
  %27 = "affine.if"(%arg0, %arg1) ({
    %35 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_13, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }, {
    %35 = "affine.if"(%arg0, %arg1) ({
      %36 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_14, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }, {
      %36 = "affine.if"(%arg0, %arg1) ({
        %37 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_15, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }, {
        %37 = "affine.if"(%arg0, %arg1) ({
          %38 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_16, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }, {
          %38 = "affine.if"(%arg0, %arg1) ({
            %39 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_17, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }, {
            %39 = "affine.if"(%arg0, %arg1) ({
              %40 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_18, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }, {
              %40 = "affine.if"(%arg0, %arg1) ({
                %41 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_19, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }, {
                %41 = "affine.if"(%arg0, %arg1) ({
                  %42 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_20, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }, {
                  %42 = "affine.if"(%arg0, %arg1) ({
                    %43 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_21, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }, {
                    %43 = "affine.if"(%arg0, %arg1) ({
                      %44 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_22, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }, {
                      %44 = "affine.if"(%arg0, %arg1) ({
                        %45 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_23, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }, {
                        %45 = "affine.if"(%arg0, %arg1) ({
                          %46 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_24, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }, {
                          %46 = "air.channel.get"(%26#0, %23, %arg0, %arg1, %26#1) <{chan_name = @channel_25, operandSegmentSizes = array<i32: 2, 2, 1, 0, 0, 0>}> : (!air.async.token, !air.async.token, index, index, memref<1x3x7x4xi32, 2 : i32>) -> !air.async.token
                          "affine.yield"(%46) : (!air.async.token) -> ()
                        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 11 == 0)>} : (index, index) -> !air.async.token
                        "affine.yield"(%45) : (!air.async.token) -> ()
                      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 10 == 0)>} : (index, index) -> !air.async.token
                      "affine.yield"(%44) : (!air.async.token) -> ()
                    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 9 == 0)>} : (index, index) -> !air.async.token
                    "affine.yield"(%43) : (!air.async.token) -> ()
                  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 8 == 0)>} : (index, index) -> !air.async.token
                  "affine.yield"(%42) : (!air.async.token) -> ()
                }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 7 == 0)>} : (index, index) -> !air.async.token
                "affine.yield"(%41) : (!air.async.token) -> ()
              }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 6 == 0)>} : (index, index) -> !air.async.token
              "affine.yield"(%40) : (!air.async.token) -> ()
            }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 5 == 0)>} : (index, index) -> !air.async.token
            "affine.yield"(%39) : (!air.async.token) -> ()
          }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 4 == 0)>} : (index, index) -> !air.async.token
          "affine.yield"(%38) : (!air.async.token) -> ()
        }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 3 == 0)>} : (index, index) -> !air.async.token
        "affine.yield"(%37) : (!air.async.token) -> ()
      }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 2 == 0)>} : (index, index) -> !air.async.token
      "affine.yield"(%36) : (!air.async.token) -> ()
    }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 - 1 == 0)>} : (index, index) -> !air.async.token
    "affine.yield"(%35) : (!air.async.token) -> ()
  }) {condition = affine_set<()[s0, s1] : (s0 >= 0, -s0 + 12 >= 0, s1 == 0)>} : (index, index) -> !air.async.token
  %28 = "air.wait_all"(%23, %26#0, %24#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
  %29 = "scf.for"(%1, %2, %3, %28) ({
  ^bb0(%arg4: index, %arg5: !air.async.token):
    %35 = "memref.subview"(%24#1, %arg4) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: -9223372036854775808, 0, 0, 0>, static_sizes = array<i64: 1, 1, 4, 7>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<3x1x4x7xi32, 2 : i32>, index) -> memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>
    %36 = "memref.subview"(%26#1, %arg4) <{operandSegmentSizes = array<i32: 1, 1, 0, 0>, static_offsets = array<i64: 0, -9223372036854775808, 0, 0>, static_sizes = array<i64: 1, 1, 7, 4>, static_strides = array<i64: 1, 1, 1, 1>}> : (memref<1x3x7x4xi32, 2 : i32>, index) -> memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>
    %37 = "air.execute"(%arg5) ({
      "linalg.generic"(%35, %36, %4#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5) -> (d2, d0, d3, d5)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d2, d5, d4)>, affine_map<(d0, d1, d2, d3, d4, d5) -> (d1, d0, d3, d4)>], iterator_types = [#linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>, #linalg.iterator_type<parallel>, #linalg.iterator_type<parallel>, #linalg.iterator_type<reduction>], operandSegmentSizes = array<i32: 2, 1>}> ({
      ^bb0(%arg6: i32, %arg7: i32, %arg8: i32):
        %38 = "arith.muli"(%arg6, %arg7) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
        %39 = "arith.addi"(%arg8, %38) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
        "linalg.yield"(%39) : (i32) -> ()
      }) {lowering_config = #iree_codegen.lowering_config<tile_sizes = [[52, 52], [0, 0, 63], [4, 4], [0, 0, 3]]>, packing_config = #amdaie.packing_config<packing_config = [{packedSizes = [4, 4, 7], transposePackIndices = [0, 1, 2], unpackEmpty = [false, false, true], innerPerm = [[0, 1], [1, 0], [0, 1]], outerPerm = [[1, 0], [1, 0], [1, 0]]}]>} : (memref<1x1x4x7xi32, strided<[28, 28, 7, 1], offset: ?>, 2 : i32>, memref<1x1x7x4xi32, strided<[84, 28, 4, 1], offset: ?>, 2 : i32>, memref<1x1x4x4xi32, 2 : i32>) -> ()
      "air.execute_terminator"() : () -> ()
    }) : (!air.async.token) -> !air.async.token
    "scf.yield"(%37) : (!air.async.token) -> ()
  }) : (index, index, index, !air.async.token) -> !air.async.token
  %30 = "air.execute"(%24#0) ({
    "memref.dealloc"(%24#1) : (memref<3x1x4x7xi32, 2 : i32>) -> ()
    "air.execute_terminator"() : () -> ()
  }) : (!air.async.token) -> !air.async.token
  %31 = "air.execute"(%26#0) ({
    "memref.dealloc"(%26#1) : (memref<1x3x7x4xi32, 2 : i32>) -> ()
    "air.execute_terminator"() : () -> ()
  }) : (!air.async.token) -> !air.async.token
  %32 = "air.wait_all"(%29, %27, %25) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
  %33 = "air.channel.put"(%32, %arg0, %arg1, %4#1) <{chan_name = @channel_28, operandSegmentSizes = array<i32: 1, 2, 1, 0, 0, 0>}> : (!air.async.token, index, index, memref<1x1x4x4xi32, 2 : i32>) -> !air.async.token
  %34 = "air.execute"(%32) ({
    "memref.dealloc"(%4#1) : (memref<1x1x4x4xi32, 2 : i32>) -> ()
    "air.execute_terminator"() : () -> ()
  }) : (!air.async.token) -> !air.async.token
  "air.herd_terminator"() : () -> ()
}) {id = 3 : i32} : (!air.async.token, index, index) -> !air.async.token
iree-compile: iree/third_party/llvm-project/llvm/include/llvm/ADT/STLExtras.h:1276: ReferenceT llvm::detail::indexed_accessor_range_base<mlir::OperandRange, mlir::OpOperand *, mlir::Value, mlir::Value, mlir::Value>::front() const [DerivedT = mlir::OperandRange, BaseT = mlir::OpOperand *, T = mlir::Value, PointerT = mlir::Value, ReferenceT = mlir::Value]: Assertion `!empty() && "expected non-empty range"' failed.
Please report issues to https://github.com/iree-org/iree/issues and include the crash backtrace.
Stack dump:
0.	Program arguments: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_failure_0_i32_i32_m52_n52_k63.vmfb
Stack dump without symbol names (ensure you have llvm-symbolizer in your PATH or set the environment var `LLVM_SYMBOLIZER_PATH` to point to it):
0  libIREECompiler.so 0x00007fc6460913c8 llvm::sys::PrintStackTrace(llvm::raw_ostream&, int) + 40
1  libIREECompiler.so 0x00007fc64608f5d0 llvm::sys::RunSignalHandlers() + 80
2  libIREECompiler.so 0x00007fc646091a68
3  libc.so.6          0x00007fc641042520
4  libc.so.6          0x00007fc6410969fc pthread_kill + 300
5  libc.so.6          0x00007fc641042476 raise + 22
6  libc.so.6          0x00007fc6410287f3 abort + 211
7  libc.so.6          0x00007fc64102871b
8  libc.so.6          0x00007fc641039e96
9  libIREECompiler.so 0x00007fc646d99424
10 libIREECompiler.so 0x00007fc646d8ac37
11 libIREECompiler.so 0x00007fc64622a3bf mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) + 639
12 libIREECompiler.so 0x00007fc64622ac87 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) + 311
13 libIREECompiler.so 0x00007fc64622fd1a
14 libIREECompiler.so 0x00007fc64622c28b mlir::detail::OpToOpPassAdaptor::runOnOperationAsyncImpl(bool) + 2363
15 libIREECompiler.so 0x00007fc64622a551 mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) + 1041
16 libIREECompiler.so 0x00007fc64622ac87 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) + 311
17 libIREECompiler.so 0x00007fc64622f001
18 libIREECompiler.so 0x00007fc64720c81b
19 libIREECompiler.so 0x00007fc64622a3bf mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) + 639
20 libIREECompiler.so 0x00007fc64622ac87 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) + 311
21 libIREECompiler.so 0x00007fc64622fd1a
22 libIREECompiler.so 0x00007fc64622c28b mlir::detail::OpToOpPassAdaptor::runOnOperationAsyncImpl(bool) + 2363
23 libIREECompiler.so 0x00007fc64622a551 mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) + 1041
24 libIREECompiler.so 0x00007fc64622ac87 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) + 311
25 libIREECompiler.so 0x00007fc64622f001
26 libIREECompiler.so 0x00007fc64720d2da
27 libIREECompiler.so 0x00007fc64622a3bf mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) + 639
28 libIREECompiler.so 0x00007fc64622ac87 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) + 311
29 libIREECompiler.so 0x00007fc64622fd1a
30 libIREECompiler.so 0x00007fc64622c28b mlir::detail::OpToOpPassAdaptor::runOnOperationAsyncImpl(bool) + 2363
31 libIREECompiler.so 0x00007fc64622a551 mlir::detail::OpToOpPassAdaptor::run(mlir::Pass*, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int) + 1041
32 libIREECompiler.so 0x00007fc64622ac87 mlir::detail::OpToOpPassAdaptor::runPipeline(mlir::OpPassManager&, mlir::Operation*, mlir::AnalysisManager, bool, unsigned int, mlir::PassInstrumentor*, mlir::PassInstrumentation::PipelineParentInfo const*) + 311
33 libIREECompiler.so 0x00007fc64622d155 mlir::PassManager::run(mlir::Operation*) + 965
34 libIREECompiler.so 0x00007fc645fe7fc3 ireeCompilerInvocationPipeline + 3411
35 libIREECompiler.so 0x00007fc6461f3abc
36 libIREECompiler.so 0x00007fc6461f335a
37 libc.so.6          0x00007fc641029d90
38 libc.so.6          0x00007fc641029e40 __libc_start_main + 128
39 iree-compile       0x0000559a7e38a6b5
./run_matmul_test.sh: line 172: 2430538 Aborted                 (core dumped) ${IREE_COMPILE_EXE} "${matmul_ir}" ${compilation_flags} -o "${matmul_vmfb}"
+ compileResult=134
+ '[' 1 -ne 0 ']'
+ '[' 134 -ne 0 ']'
+ echo 'Expected compilation failure, got compilation failure.'
Expected compilation failure, got compilation failure.
+ return 0
+ run_matmul_test --name_prefix multiple_matmuls --lhs_rhs_type i32 --acc_type i32 --m 512,8,16,7 --n 512,32,16,15 --k 256,16,8,9 --compile-only 1
+ local lhs_rhs_type=
+ local acc_type=
+ local m=
+ local n=
+ local k=
+ local name_prefix=noprefix
+ local target_backend=amd-aie
+ local device=xrt
+ local peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ local mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ local vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ local pipeline=pad-pack
+ local dynamicity=static
+ local accumulate=false
+ local expect_compile_failure=0
+ local compile_only=0
+ local do_transpose_rhs=0
+ local max_elements_to_check=20000
+ local use_ukernel=0
+ '[' 14 -gt 0 ']'
+ case "$1" in
+ name_prefix=multiple_matmuls
+ shift 2
+ '[' 12 -gt 0 ']'
+ case "$1" in
+ lhs_rhs_type=i32
+ shift 2
+ '[' 10 -gt 0 ']'
+ case "$1" in
+ acc_type=i32
+ shift 2
+ '[' 8 -gt 0 ']'
+ case "$1" in
+ m=512,8,16,7
+ shift 2
+ '[' 6 -gt 0 ']'
+ case "$1" in
+ n=512,32,16,15
+ shift 2
+ '[' 4 -gt 0 ']'
+ case "$1" in
+ k=256,16,8,9
+ shift 2
+ '[' 2 -gt 0 ']'
+ case "$1" in
+ compile_only=1
+ shift 2
+ '[' 0 -gt 0 ']'
+ set -x
++ date +%s%3N
+ start_time=1716219041333
+ name=mm_multiple_matmuls_i32_i32_m512,8,16,7_n512,32,16,15_k256,16,8,9
+ set +e
++ echo mm_multiple_matmuls_i32_i32_m512,8,16,7_n512,32,16,15_k256,16,8,9
++ grep -c ,
+ nameContainsComma=1
++ echo mm_multiple_matmuls_i32_i32_m512,8,16,7_n512,32,16,15_k256,16,8,9
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 1 -ne 0 ']'
+ name=multiple_matmuls
++ echo multiple_matmuls
++ grep -c ,
+ nameContainsComma=0
++ echo multiple_matmuls
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=512,8,16,7                     --n=512,32,16,15                     --k=256,16,8,9                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=512,8,16,7 --n=512,32,16,15 --k=256,16,8,9 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_calls.mlir
[TestShape(m=512, k=256, n=512, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>), TestShape(m=8, k=16, n=32, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>), TestShape(m=16, k=8, n=16, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>), TestShape(m=7, k=9, n=15, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219041392
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for multiple_matmuls ****'
**** Generating matmul .vmfb file for multiple_matmuls ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin  HOME=/home/jnewling/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir  /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin--peano  /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir/proj/gdba/jamesn/workspace/peano/install  --peano--xclbin-name  /proj/gdba/jamesn/workspace/peano/install/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin  --xclbin-name--npu-insts-name  /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb.xclbin/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.npu.txt  --npu-insts-name--xclbin-kernel-name  /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb.npu.txtmatmul_8x32_16xi32__dispatch_0_matmul_8x32x16_i3  --xclbin-kernel-name--tmpdir  matmul_7x15_9xi32__dispatch_0_matmul_7x15x9_i32/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb  --tmpdir-v  /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb
 -v 
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_16x16_8xi32__dispatch_0_matmul_16x16x8_i3 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb -v 
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbinJust entered main and VITIS is not set
 Just entered main and VITIS is not set
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Compiling 
Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
--peano

 /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_512x512_256xi32__dispatch_0_matmul_512x51 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb -v 
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb




****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.

    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully


[INFO]   : Bootimage generated successfully



****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.
XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 4576 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 4784 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (10921 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (11130 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_7x15_9xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 5312 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (11658 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 77856 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (84208 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_256xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for multiple_matmuls ****'
**** Generating calls .vmfb file for multiple_matmuls ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_ir.mlir
+ function_names='matmul_512x512_256xi32_
matmul_8x32_16xi32_
matmul_16x16_8xi32_
matmul_7x15_9xi32_'
++ date +%s%3N
+ compiled_time=1716219043329
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''multiple_matmuls'\'' matmul tests ****'
**** Running 'multiple_matmuls' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/multiple_matmuls_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 1 -ne 0 ']'
+ echo 'Compile only flag is 1 which is not 0, skipping execution'
Compile only flag is 1 which is not 0, skipping execution
+ return 0
+ run_matmul_test --name_prefix small --lhs_rhs_type i32 --acc_type i32 --m 16 --n 16 --k 8
+ local lhs_rhs_type=
+ local acc_type=
+ local m=
+ local n=
+ local k=
+ local name_prefix=noprefix
+ local target_backend=amd-aie
+ local device=xrt
+ local peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ local mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ local vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ local pipeline=pad-pack
+ local dynamicity=static
+ local accumulate=false
+ local expect_compile_failure=0
+ local compile_only=0
+ local do_transpose_rhs=0
+ local max_elements_to_check=20000
+ local use_ukernel=0
+ '[' 12 -gt 0 ']'
+ case "$1" in
+ name_prefix=small
+ shift 2
+ '[' 10 -gt 0 ']'
+ case "$1" in
+ lhs_rhs_type=i32
+ shift 2
+ '[' 8 -gt 0 ']'
+ case "$1" in
+ acc_type=i32
+ shift 2
+ '[' 6 -gt 0 ']'
+ case "$1" in
+ m=16
+ shift 2
+ '[' 4 -gt 0 ']'
+ case "$1" in
+ n=16
+ shift 2
+ '[' 2 -gt 0 ']'
+ case "$1" in
+ k=8
+ shift 2
+ '[' 0 -gt 0 ']'
+ set -x
++ date +%s%3N
+ start_time=1716219043333
+ name=mm_small_i32_i32_m16_n16_k8
+ set +e
++ echo mm_small_i32_i32_m16_n16_k8
++ grep -c ,
+ nameContainsComma=0
++ echo mm_small_i32_i32_m16_n16_k8
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_small_i32_i32_m16_n16_k8
++ grep -c ,
+ nameContainsComma=0
++ echo mm_small_i32_i32_m16_n16_k8
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=16                     --n=16                     --k=8                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=16 --n=16 --k=8 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.mlir
[TestShape(m=16, k=8, n=16, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219043393
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_small_i32_i32_m16_n16_k8 ****'
**** Generating matmul .vmfb file for mm_small_i32_i32_m16_n16_k8 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_16x16_8xi32__dispatch_0_matmul_16x16x8_i3 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 5312 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (11658 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_16x16_8xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_small_i32_i32_m16_n16_k8 ****'
**** Generating calls .vmfb file for mm_small_i32_i32_m16_n16_k8 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_ir.mlir
+ function_names=matmul_16x16_8xi32_
++ date +%s%3N
+ compiled_time=1716219043835
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_small_i32_i32_m16_n16_k8'\'' matmul tests ****'
**** Running 'mm_small_i32_i32_m16_n16_k8' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m16_n16_k8_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_16x16_8xi32__16_8_16_0] ---
Matmul shape (MxKxN): 16x8x16
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219044839
+ echo 'Time spent in generation: 60 [ms]'
Time spent in generation: 60 [ms]
+ echo 'Time spent in compilation: 442 [ms]'
Time spent in compilation: 442 [ms]
+ echo 'Time spent in execution and verification: 1004 [ms]'
Time spent in execution and verification: 1004 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219044842
+ name=mm_small_i32_i32_m8_n32_k16
+ set +e
++ echo mm_small_i32_i32_m8_n32_k16
++ grep -c ,
+ nameContainsComma=0
++ echo mm_small_i32_i32_m8_n32_k16
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_small_i32_i32_m8_n32_k16
++ grep -c ,
+ nameContainsComma=0
++ echo mm_small_i32_i32_m8_n32_k16
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=8                     --n=32                     --k=16                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=8 --n=32 --k=16 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.mlir
[TestShape(m=8, k=16, n=32, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219044918
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_small_i32_i32_m8_n32_k16 ****'
**** Generating matmul .vmfb file for mm_small_i32_i32_m8_n32_k16 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_8x32_16xi32__dispatch_0_matmul_8x32x16_i3 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 4784 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (11130 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8x32_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_small_i32_i32_m8_n32_k16 ****'
**** Generating calls .vmfb file for mm_small_i32_i32_m8_n32_k16 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_ir.mlir
+ function_names=matmul_8x32_16xi32_
++ date +%s%3N
+ compiled_time=1716219045362
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_small_i32_i32_m8_n32_k16'\'' matmul tests ****'
**** Running 'mm_small_i32_i32_m8_n32_k16' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m8_n32_k16_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_8x32_16xi32__8_16_32_0] ---
Matmul shape (MxKxN): 8x16x32
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219045393
+ echo 'Time spent in generation: 76 [ms]'
Time spent in generation: 76 [ms]
+ echo 'Time spent in compilation: 444 [ms]'
Time spent in compilation: 444 [ms]
+ echo 'Time spent in execution and verification: 31 [ms]'
Time spent in execution and verification: 31 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219045397
+ name=mm_small_i32_i32_m9_n7_k16
+ set +e
++ echo mm_small_i32_i32_m9_n7_k16
++ grep -c ,
+ nameContainsComma=0
++ echo mm_small_i32_i32_m9_n7_k16
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_small_i32_i32_m9_n7_k16
++ grep -c ,
+ nameContainsComma=0
++ echo mm_small_i32_i32_m9_n7_k16
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=9                     --n=7                     --k=16                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=9 --n=7 --k=16 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.mlir
[TestShape(m=9, k=16, n=7, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219045458
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_small_i32_i32_m9_n7_k16 ****'
**** Generating matmul .vmfb file for mm_small_i32_i32_m9_n7_k16 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_9x7_16xi32__dispatch_0_matmul_9x7x16_i32 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 4752 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (11097 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_9x7_16xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_small_i32_i32_m9_n7_k16 ****'
**** Generating calls .vmfb file for mm_small_i32_i32_m9_n7_k16 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_ir.mlir
+ function_names=matmul_9x7_16xi32_
++ date +%s%3N
+ compiled_time=1716219045887
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_small_i32_i32_m9_n7_k16'\'' matmul tests ****'
**** Running 'mm_small_i32_i32_m9_n7_k16' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_small_i32_i32_m9_n7_k16_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_9x7_16xi32__9_16_7_0] ---
Matmul shape (MxKxN): 9x16x7
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219045915
+ echo 'Time spent in generation: 61 [ms]'
Time spent in generation: 61 [ms]
+ echo 'Time spent in compilation: 429 [ms]'
Time spent in compilation: 429 [ms]
+ echo 'Time spent in execution and verification: 28 [ms]'
Time spent in execution and verification: 28 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219045918
+ name=mm_large_i32_i32_m64_n64_k128
+ set +e
++ echo mm_large_i32_i32_m64_n64_k128
++ grep -c ,
+ nameContainsComma=0
++ echo mm_large_i32_i32_m64_n64_k128
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_large_i32_i32_m64_n64_k128
++ grep -c ,
+ nameContainsComma=0
++ echo mm_large_i32_i32_m64_n64_k128
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=64                     --n=64                     --k=128                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=64 --n=64 --k=128 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.mlir
[TestShape(m=64, k=128, n=64, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219045978
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_large_i32_i32_m64_n64_k128 ****'
**** Generating matmul .vmfb file for mm_large_i32_i32_m64_n64_k128 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_64x64_128xi32__dispatch_0_matmul_64x64x12 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 86560 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (92912 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_large_i32_i32_m64_n64_k128 ****'
**** Generating calls .vmfb file for mm_large_i32_i32_m64_n64_k128 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_ir.mlir
+ function_names=matmul_64x64_128xi32_
++ date +%s%3N
+ compiled_time=1716219048063
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_large_i32_i32_m64_n64_k128'\'' matmul tests ****'
**** Running 'mm_large_i32_i32_m64_n64_k128' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m64_n64_k128_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_64x64_128xi32__64_128_64_0] ---
Matmul shape (MxKxN): 64x128x64
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219048097
+ echo 'Time spent in generation: 60 [ms]'
Time spent in generation: 60 [ms]
+ echo 'Time spent in compilation: 2085 [ms]'
Time spent in compilation: 2085 [ms]
+ echo 'Time spent in execution and verification: 34 [ms]'
Time spent in execution and verification: 34 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219048099
+ name=mm_large_i32_i32_m512_n512_k512
+ set +e
++ echo mm_large_i32_i32_m512_n512_k512
++ grep -c ,
+ nameContainsComma=0
++ echo mm_large_i32_i32_m512_n512_k512
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_large_i32_i32_m512_n512_k512
++ grep -c ,
+ nameContainsComma=0
++ echo mm_large_i32_i32_m512_n512_k512
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=512                     --n=512                     --k=512                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=512 --n=512 --k=512 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.mlir
[TestShape(m=512, k=512, n=512, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219048160
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_large_i32_i32_m512_n512_k512 ****'
**** Generating matmul .vmfb file for mm_large_i32_i32_m512_n512_k512 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_512x512_512xi32__dispatch_0_matmul_512x51 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 78816 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (85168 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_large_i32_i32_m512_n512_k512 ****'
**** Generating calls .vmfb file for mm_large_i32_i32_m512_n512_k512 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_ir.mlir
+ function_names=matmul_512x512_512xi32_
++ date +%s%3N
+ compiled_time=1716219050080
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_large_i32_i32_m512_n512_k512'\'' matmul tests ****'
**** Running 'mm_large_i32_i32_m512_n512_k512' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_large_i32_i32_m512_n512_k512_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_512x512_512xi32__512_512_512_0] ---
Matmul shape (MxKxN): 512x512x512
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219050165
+ echo 'Time spent in generation: 61 [ms]'
Time spent in generation: 61 [ms]
+ echo 'Time spent in compilation: 1920 [ms]'
Time spent in compilation: 1920 [ms]
+ echo 'Time spent in execution and verification: 85 [ms]'
Time spent in execution and verification: 85 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219050167
+ name=mm_int8_i8_i32_m64_n64_k64
+ set +e
++ echo mm_int8_i8_i32_m64_n64_k64
++ grep -c ,
+ nameContainsComma=0
++ echo mm_int8_i8_i32_m64_n64_k64
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_int8_i8_i32_m64_n64_k64
++ grep -c ,
+ nameContainsComma=0
++ echo mm_int8_i8_i32_m64_n64_k64
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.vmfb
+ generation_flags='--lhs_rhs_type=i8                     --acc_type=i32                     --m=64                     --n=64                     --k=64                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i8 --acc_type=i32 --m=64 --n=64 --k=64 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.mlir
[TestShape(m=64, k=64, n=64, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219050227
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_int8_i8_i32_m64_n64_k64 ****'
**** Generating matmul .vmfb file for mm_int8_i8_i32_m64_n64_k64 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_64x64_64xi8__dispatch_0_matmul_64x64x64_i --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 4576 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (10922 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_64xi8__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_int8_i8_i32_m64_n64_k64 ****'
**** Generating calls .vmfb file for mm_int8_i8_i32_m64_n64_k64 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_ir.mlir
+ function_names=matmul_64x64_64xi8_
++ date +%s%3N
+ compiled_time=1716219050665
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_int8_i8_i32_m64_n64_k64'\'' matmul tests ****'
**** Running 'mm_int8_i8_i32_m64_n64_k64' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_int8_i8_i32_m64_n64_k64_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_64x64_64xi8__64_64_64_0] ---
Matmul shape (MxKxN): 64x64x64
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219050692
+ echo 'Time spent in generation: 60 [ms]'
Time spent in generation: 60 [ms]
+ echo 'Time spent in compilation: 438 [ms]'
Time spent in compilation: 438 [ms]
+ echo 'Time spent in execution and verification: 27 [ms]'
Time spent in execution and verification: 27 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219050695
+ name=mm_bf16_2304_bf16_f32_m128_n128_k2304
+ set +e
++ echo mm_bf16_2304_bf16_f32_m128_n128_k2304
++ grep -c ,
+ nameContainsComma=0
++ echo mm_bf16_2304_bf16_f32_m128_n128_k2304
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_bf16_2304_bf16_f32_m128_n128_k2304
++ grep -c ,
+ nameContainsComma=0
++ echo mm_bf16_2304_bf16_f32_m128_n128_k2304
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=128                     --n=128                     --k=2304                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=128 --n=128 --k=2304 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.mlir
[TestShape(m=128, k=2304, n=128, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219050755
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_bf16_2304_bf16_f32_m128_n128_k2304 ****'
**** Generating matmul .vmfb file for mm_bf16_2304_bf16_f32_m128_n128_k2304 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_128x128_2304xbf16__dispatch_0_matmul_128x --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 74144 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (80496 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_bf16_2304_bf16_f32_m128_n128_k2304 ****'
**** Generating calls .vmfb file for mm_bf16_2304_bf16_f32_m128_n128_k2304 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_ir.mlir
+ function_names=matmul_128x128_2304xbf16_
++ date +%s%3N
+ compiled_time=1716219052417
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_bf16_2304_bf16_f32_m128_n128_k2304'\'' matmul tests ****'
**** Running 'mm_bf16_2304_bf16_f32_m128_n128_k2304' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_bf16_2304_bf16_f32_m128_n128_k2304_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_128x128_2304xbf16__128_2304_128_0] ---
Matmul shape (MxKxN): 128x2304x128
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219053505
+ echo 'Time spent in generation: 60 [ms]'
Time spent in generation: 60 [ms]
+ echo 'Time spent in compilation: 1662 [ms]'
Time spent in compilation: 1662 [ms]
+ echo 'Time spent in execution and verification: 1088 [ms]'
Time spent in execution and verification: 1088 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219053509
+ name=mm_packPeel_i32_i32_m64_n64_k128
+ set +e
++ echo mm_packPeel_i32_i32_m64_n64_k128
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeel_i32_i32_m64_n64_k128
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_packPeel_i32_i32_m64_n64_k128
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeel_i32_i32_m64_n64_k128
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=64                     --n=64                     --k=128                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=64 --n=64 --k=128 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.mlir
[TestShape(m=64, k=128, n=64, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219053572
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pack-peel                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_packPeel_i32_i32_m64_n64_k128 ****'
**** Generating matmul .vmfb file for mm_packPeel_i32_i32_m64_n64_k128 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pack-peel --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_64x64_128xi32__dispatch_0_matmul_64x64x12 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 21040 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (27386 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_64x64_128xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_packPeel_i32_i32_m64_n64_k128 ****'
**** Generating calls .vmfb file for mm_packPeel_i32_i32_m64_n64_k128 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_ir.mlir
+ function_names=matmul_64x64_128xi32_
++ date +%s%3N
+ compiled_time=1716219054350
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_packPeel_i32_i32_m64_n64_k128'\'' matmul tests ****'
**** Running 'mm_packPeel_i32_i32_m64_n64_k128' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_i32_i32_m64_n64_k128_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_64x64_128xi32__64_128_64_0] ---
Matmul shape (MxKxN): 64x128x64
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219055356
+ echo 'Time spent in generation: 63 [ms]'
Time spent in generation: 63 [ms]
+ echo 'Time spent in compilation: 778 [ms]'
Time spent in compilation: 778 [ms]
+ echo 'Time spent in execution and verification: 1006 [ms]'
Time spent in execution and verification: 1006 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219055361
+ name=mm_packPeel_bf16_f32_m64_n64_k128
+ set +e
++ echo mm_packPeel_bf16_f32_m64_n64_k128
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeel_bf16_f32_m64_n64_k128
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_packPeel_bf16_f32_m64_n64_k128
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeel_bf16_f32_m64_n64_k128
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=64                     --n=64                     --k=128                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=64 --n=64 --k=128 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128_calls.mlir
[TestShape(m=64, k=128, n=64, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219055438
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pack-peel                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_packPeel_bf16_f32_m64_n64_k128 ****'
**** Generating matmul .vmfb file for mm_packPeel_bf16_f32_m64_n64_k128 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pack-peel --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel_bf16_f32_m64_n64_k128.vmfb
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_64x64_128xbf16__dispatch_0.mlir:19:8: error: 'aie.dma_bd' op Cannot give more than 3 dimensions for step sizes and wraps in this  tile (got 4 dimensions).
        %7 = linalg.matmul ins(%3, %4 : tensor<64x128xbf16>, tensor<128x64xbf16>) outs(%6 : tensor<64x64xf32>) -> tensor<64x64xf32>
       ^
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_64x64_128xbf16__dispatch_0.mlir:19:8: note: see current operation: "aie.dma_bd"(%25) <{dimensions = #aie<bd_dim_layout_arr[<size = 16, stride = 16>, <size = 4, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x16x16x4x4xf32, 2 : i32>) -> ()
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_64x64_128xbf16__dispatch_0.mlir:2:2: error: failed to run translation of source executable to target executable for backend #hal.executable.target<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>
  hal.executable.variant public @amdaie_xclbin_fb target(<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>) {
 ^
/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/configured_module_matmul_64x64_128xbf16__dispatch_0.mlir:2:2: note: see current operation: 
"hal.executable.variant"() ({
  "hal.executable.export"() ({
  ^bb0(%arg0: !hal.device):
    %0:3 = "flow.dispatch.workgroup_count_from_slice"() : () -> (index, index, index)
    "hal.return"(%0#0, %0#1, %0#2) : (index, index, index) -> ()
  }) {hal.interface.bindings = [#hal.interface.binding<0, 0>, #hal.interface.binding<0, 1>, #hal.interface.binding<0, 2>], layout = #hal.pipeline.layout<push_constants = 0, sets = [<0, bindings = [<0, storage_buffer, ReadOnly>, <1, storage_buffer, ReadOnly>, <2, storage_buffer>]>]>, ordinal = 0 : index, sym_name = "matmul_64x64_128xbf16__dispatch_0_matmul_64x64x128_bf16xbf16xf32"} : () -> ()
  "builtin.module"() ({
    "aie.device"() <{device = 8 : i32}> ({
      %0 = "aie.tile"() <{col = 0 : i32, row = 0 : i32}> : () -> index
      %1 = "aie.tile"() <{col = 1 : i32, row = 0 : i32}> : () -> index
      %2 = "aie.tile"() <{col = 0 : i32, row = 1 : i32}> : () -> index
      %3 = "aie.tile"() <{col = 1 : i32, row = 1 : i32}> : () -> index
      %4 = "aie.tile"() <{col = 2 : i32, row = 1 : i32}> : () -> index
      %5 = "aie.tile"() <{col = 0 : i32, row = 2 : i32}> : () -> index
      %6 = "aie.lock"(%3) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %7 = "aie.lock"(%3) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %8 = "aie.lock"(%2) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %9 = "aie.lock"(%2) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %10 = "aie.lock"(%4) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %11 = "aie.lock"(%4) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %12 = "aie.lock"(%5) <{init = 1 : i32, lockID = 9 : i32}> : (index) -> index
      %13 = "aie.lock"(%5) <{init = 0 : i32, lockID = 8 : i32}> : (index) -> index
      %14 = "aie.lock"(%5) <{init = 1 : i32, lockID = 7 : i32}> : (index) -> index
      %15 = "aie.lock"(%5) <{init = 0 : i32, lockID = 6 : i32}> : (index) -> index
      %16 = "aie.lock"(%5) <{init = 1 : i32, lockID = 5 : i32}> : (index) -> index
      %17 = "aie.lock"(%5) <{init = 0 : i32, lockID = 4 : i32}> : (index) -> index
      %18 = "aie.lock"(%5) <{init = 1 : i32, lockID = 3 : i32}> : (index) -> index
      %19 = "aie.lock"(%5) <{init = 0 : i32, lockID = 2 : i32}> : (index) -> index
      %20 = "aie.lock"(%5) <{init = 1 : i32, lockID = 1 : i32}> : (index) -> index
      %21 = "aie.lock"(%5) <{init = 0 : i32, lockID = 0 : i32}> : (index) -> index
      %22 = "aie.buffer"(%2) <{mem_bank = 0 : i32, sym_name = "buf5"}> : (index) -> memref<1x1x64x64xbf16, 1 : i32>
      %23 = "aie.buffer"(%3) <{mem_bank = 0 : i32, sym_name = "buf4"}> : (index) -> memref<1x1x64x64xbf16, 1 : i32>
      %24 = "aie.buffer"(%4) <{mem_bank = 0 : i32, sym_name = "buf3"}> : (index) -> memref<1x1x64x64xf32, 1 : i32>
      %25 = "aie.buffer"(%5) <{mem_bank = 0 : i32, sym_name = "buf2"}> : (index) -> memref<1x1x16x16x4x4xf32, 2 : i32>
      %26 = "aie.buffer"(%5) <{mem_bank = 0 : i32, sym_name = "buf1"}> : (index) -> memref<1x1x16x8x8x4xbf16, 2 : i32>
      %27 = "aie.buffer"(%5) <{mem_bank = 0 : i32, sym_name = "buf0"}> : (index) -> memref<1x1x8x16x4x8xbf16, 2 : i32>
      %28 = "aie.mem"(%5) ({
        %33 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb3
        "aie.use_lock"(%18) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%27) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%19) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%16) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%27) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x8x16x4x8xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%17) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb3] : () -> ()
      ^bb3:  // pred: ^bb2
        "aie.use_lock"(%14) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%26) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x16x8x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%15) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb4:  // pred: ^bb5
        "aie.end"() : () -> ()
      ^bb5:  // pred: ^bb7
        %34 = "aie.dma_start"()[^bb6, ^bb4] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb6
        "aie.use_lock"(%12) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%26) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x16x8x8x4xbf16, 2 : i32>) -> ()
        "aie.use_lock"(%13) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb7:  // pred: ^bb0
        %35 = "aie.dma_start"()[^bb8, ^bb5] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%21) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%25) <{dimensions = #aie<bd_dim_layout_arr[<size = 16, stride = 16>, <size = 4, stride = 4>, <size = 16, stride = 256>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x16x16x4x4xf32, 2 : i32>) -> ()
        "aie.use_lock"(%20) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %29 = "aie.core"(%5) <{elf_file = "segment_0_core_0_2.elf", stack_size = 1024 : i32}> ({
        %33 = "arith.constant"() <{value = 16 : index}> : () -> index
        %34 = "arith.constant"() <{value = 8 : index}> : () -> index
        %35 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
        %36 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
        %37 = "arith.constant"() <{value = 4 : index}> : () -> index
        %38 = "arith.constant"() <{value = 1 : index}> : () -> index
        %39 = "arith.constant"() <{value = 0 : index}> : () -> index
        "cf.br"()[^bb1] : () -> ()
      ^bb1:  // 2 preds: ^bb0, ^bb6
        "aie.use_lock"(%20) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb2] : () -> ()
      ^bb2:  // pred: ^bb1
        "aie.use_lock"(%19) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%13) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        %40 = "memref.subview"(%25, %39, %39) <{operandSegmentSizes = array<i32: 1, 2, 0, 0>, static_offsets = array<i64: 0, 0, -9223372036854775808, -9223372036854775808, 0, 0>, static_sizes = array<i64: 1, 1, 16, 16, 4, 4>, static_strides = array<i64: 1, 1, 1, 1, 1, 1>}> : (memref<1x1x16x16x4x4xf32, 2 : i32>, index, index) -> memref<1x1x16x16x4x4xf32, strided<[4096, 4096, 256, 16, 4, 1], offset: ?>, 2 : i32>
        "scf.for"(%39, %38, %38) ({
        ^bb0(%arg0: index):
          "scf.for"(%39, %38, %38) ({
          ^bb0(%arg1: index):
            "scf.for"(%39, %33, %38) ({
            ^bb0(%arg2: index):
              "scf.for"(%39, %33, %38) ({
              ^bb0(%arg3: index):
                "scf.for"(%39, %37, %38) ({
                ^bb0(%arg4: index):
                  "scf.for"(%39, %37, %38) ({
                  ^bb0(%arg5: index):
                    "memref.store"(%36, %40, %arg0, %arg1, %arg2, %arg3, %arg4, %arg5) <{nontemporal = false}> : (f32, memref<1x1x16x16x4x4xf32, strided<[4096, 4096, 256, 16, 4, 1], offset: ?>, 2 : i32>, index, index, index, index, index, index) -> ()
                    "scf.yield"() : () -> ()
                  }) : (index, index, index) -> ()
                  "scf.yield"() : () -> ()
                }) : (index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "scf.for"(%39, %33, %38) ({
        ^bb0(%arg0: index):
          "scf.for"(%39, %33, %38) ({
          ^bb0(%arg1: index):
            "scf.for"(%39, %34, %38) ({
            ^bb0(%arg2: index):
              %41 = "vector.transfer_read"(%27, %39, %39, %arg2, %arg0, %39, %39, %35) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x8x16x4x8xbf16, 2 : i32>, index, index, index, index, index, index, bf16) -> vector<1x1x1x1x4x8xbf16>
              %42 = "vector.transfer_read"(%26, %39, %39, %arg1, %arg2, %39, %39, %35) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x16x8x8x4xbf16, 2 : i32>, index, index, index, index, index, index, bf16) -> vector<1x1x1x1x8x4xbf16>
              %43 = "affine.apply"(%arg1, %39) <{map = affine_map<()[s0, s1] -> (s0 + s1 * 16)>}> : (index, index) -> index
              %44 = "affine.apply"(%arg0, %39) <{map = affine_map<()[s0, s1] -> (s0 + s1 * 16)>}> : (index, index) -> index
              %45 = "vector.transfer_read"(%25, %39, %39, %43, %44, %39, %39, %36) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index, f32) -> vector<1x1x1x1x4x4xf32>
              %46 = "arith.extf"(%41) : (vector<1x1x1x1x4x8xbf16>) -> vector<1x1x1x1x4x8xf32>
              %47 = "arith.extf"(%42) : (vector<1x1x1x1x8x4xbf16>) -> vector<1x1x1x1x8x4xf32>
              %48 = "vector.contract"(%46, %47, %45) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d0, d2, d5, d3, d6, d8)>, affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d2, d1, d4, d5, d8, d7)>, affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d0, d1, d4, d3, d6, d7)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x1x1x4x8xf32>, vector<1x1x1x1x8x4xf32>, vector<1x1x1x1x4x4xf32>) -> vector<1x1x1x1x4x4xf32>
              "vector.transfer_write"(%48, %25, %39, %39, %43, %44, %39, %39) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 6, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (vector<1x1x1x1x4x4xf32>, memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%18) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%12) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb3] : () -> ()
      ^bb3:  // pred: ^bb2
        "cf.br"()[^bb4] : () -> ()
      ^bb4:  // pred: ^bb3
        "aie.use_lock"(%17) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%15) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "scf.for"(%39, %33, %38) ({
        ^bb0(%arg0: index):
          "scf.for"(%39, %33, %38) ({
          ^bb0(%arg1: index):
            "scf.for"(%39, %34, %38) ({
            ^bb0(%arg2: index):
              %41 = "vector.transfer_read"(%27, %39, %39, %arg2, %arg0, %39, %39, %35) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x8x16x4x8xbf16, 2 : i32>, index, index, index, index, index, index, bf16) -> vector<1x1x1x1x4x8xbf16>
              %42 = "vector.transfer_read"(%26, %39, %39, %arg1, %arg2, %39, %39, %35) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x16x8x8x4xbf16, 2 : i32>, index, index, index, index, index, index, bf16) -> vector<1x1x1x1x8x4xbf16>
              %43 = "affine.apply"(%arg1, %39) <{map = affine_map<()[s0, s1] -> (s0 + s1 * 16)>}> : (index, index) -> index
              %44 = "affine.apply"(%arg0, %39) <{map = affine_map<()[s0, s1] -> (s0 + s1 * 16)>}> : (index, index) -> index
              %45 = "vector.transfer_read"(%25, %39, %39, %43, %44, %39, %39, %36) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index, f32) -> vector<1x1x1x1x4x4xf32>
              %46 = "arith.extf"(%41) : (vector<1x1x1x1x4x8xbf16>) -> vector<1x1x1x1x4x8xf32>
              %47 = "arith.extf"(%42) : (vector<1x1x1x1x8x4xbf16>) -> vector<1x1x1x1x8x4xf32>
              %48 = "vector.contract"(%46, %47, %45) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d0, d2, d5, d3, d6, d8)>, affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d2, d1, d4, d5, d8, d7)>, affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d0, d1, d4, d3, d6, d7)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x1x1x4x8xf32>, vector<1x1x1x1x8x4xf32>, vector<1x1x1x1x4x4xf32>) -> vector<1x1x1x1x4x4xf32>
              "vector.transfer_write"(%48, %25, %39, %39, %43, %44, %39, %39) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 6, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (vector<1x1x1x1x4x4xf32>, memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index) -> ()
              "scf.yield"() : () -> ()
            }) : (index, index, index) -> ()
            "scf.yield"() : () -> ()
          }) : (index, index, index) -> ()
          "scf.yield"() : () -> ()
        }) : (index, index, index) -> ()
        "aie.use_lock"(%16) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.use_lock"(%14) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb5] : () -> ()
      ^bb5:  // pred: ^bb4
        "cf.br"()[^bb6] : () -> ()
      ^bb6:  // pred: ^bb5
        "aie.use_lock"(%21) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "cf.br"()[^bb1] : () -> ()
      }) : (index) -> index
      "air.channel"() <{size = [1, 1], sym_name = "channel_0"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_1"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_2"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_3"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_4"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_5"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_6"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_7"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_8"}> : () -> ()
      "air.channel"() <{size = [1, 1], sym_name = "channel_9"}> : () -> ()
      "aie.flow"(%0, %2) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%0, %3) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%1, %2) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%1, %3) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%4, %0) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%2, %5) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%3, %5) <{dest_bundle = 1 : i32, dest_channel = 1 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      "aie.flow"(%2, %5) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%3, %5) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 1 : i32}> : (index, index) -> ()
      "aie.flow"(%5, %4) <{dest_bundle = 1 : i32, dest_channel = 0 : i32, source_bundle = 1 : i32, source_channel = 0 : i32}> : (index, index) -> ()
      %30 = "aie.memtile_dma"(%4) ({
        %33 = "aie.dma_start"()[^bb1, ^bb3] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%10) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%24) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xf32, 1 : i32>) -> ()
        "aie.use_lock"(%11) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb2:  // pred: ^bb3
        "aie.end"() : () -> ()
      ^bb3:  // pred: ^bb0
        %34 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb4:  // 2 preds: ^bb3, ^bb4
        "aie.use_lock"(%11) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%24) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xf32, 1 : i32>) -> ()
        "aie.use_lock"(%10) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb4] : () -> ()
      }) : (index) -> index
      %31 = "aie.memtile_dma"(%2) ({
        %33 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%8) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%22) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
        "aie.use_lock"(%9) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb2:  // pred: ^bb3
        "aie.end"() : () -> ()
      ^bb3:  // pred: ^bb5
        %34 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb4:  // 2 preds: ^bb3, ^bb4
        "aie.use_lock"(%8) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%22) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
        "aie.use_lock"(%9) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb4] : () -> ()
      ^bb5:  // pred: ^bb7
        %35 = "aie.dma_start"()[^bb6, ^bb3] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb6
        "aie.use_lock"(%9) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%22) <{dimensions = #aie<bd_dim_layout_arr[<size = 8, stride = 8>, <size = 64, stride = 64>, <size = 8, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
        "aie.use_lock"(%8) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb7:  // pred: ^bb0
        %36 = "aie.dma_start"()[^bb8, ^bb5] <{channel_dir = 1 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%9) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%22) <{dimensions = #aie<bd_dim_layout_arr[<size = 8, stride = 8>, <size = 64, stride = 64>, <size = 8, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
        "aie.use_lock"(%8) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      %32 = "aie.memtile_dma"(%3) ({
        %33 = "aie.dma_start"()[^bb1, ^bb7] <{channel_dir = 0 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb1:  // 2 preds: ^bb0, ^bb1
        "aie.use_lock"(%6) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%23) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
        "aie.use_lock"(%7) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb1] : () -> ()
      ^bb2:  // pred: ^bb3
        "aie.end"() : () -> ()
      ^bb3:  // pred: ^bb5
        %34 = "aie.dma_start"()[^bb4, ^bb2] <{channel_dir = 0 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb4:  // 2 preds: ^bb3, ^bb4
        "aie.use_lock"(%6) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%23) <{len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
        "aie.use_lock"(%7) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb4] : () -> ()
      ^bb5:  // pred: ^bb7
        %35 = "aie.dma_start"()[^bb6, ^bb3] <{channel_dir = 1 : i32, channel_index = 0 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb6:  // 2 preds: ^bb5, ^bb6
        "aie.use_lock"(%7) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%23) <{dimensions = #aie<bd_dim_layout_arr[<size = 16, stride = 4>, <size = 64, stride = 64>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
        "aie.use_lock"(%6) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb6] : () -> ()
      ^bb7:  // pred: ^bb0
        %36 = "aie.dma_start"()[^bb8, ^bb5] <{channel_dir = 1 : i32, channel_index = 1 : i32, repeat_count = 1 : i32}> : () -> i1
      ^bb8:  // 2 preds: ^bb7, ^bb8
        "aie.use_lock"(%7) <{acq_en = true, action = 2 : i32, value = 1 : i32}> : (index) -> ()
        "aie.dma_bd"(%23) <{dimensions = #aie<bd_dim_layout_arr[<size = 16, stride = 4>, <size = 64, stride = 64>, <size = 4, stride = 1>]>, len = 4096 : i32, offset = 0 : i32}> : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
        "aie.use_lock"(%6) <{acq_en = true, action = 1 : i32, value = 1 : i32}> : (index) -> ()
        "aie.next_bd"()[^bb8] : () -> ()
      }) : (index) -> index
      "aie.shim_dma_allocation"() <{channel_dir = 0 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId20}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId20", sym_visibility = "public", type = memref<1x1x64x64xf32, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 0 : i64, sym_name = @airMemcpyId6}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId6", sym_visibility = "public", type = memref<1x1x64x64xbf16, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 0 : i64, sym_name = @airMemcpyId7}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId7", sym_visibility = "public", type = memref<1x1x64x64xbf16, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 0 : i64, col = 1 : i64, sym_name = @airMemcpyId12}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId12", sym_visibility = "public", type = memref<1x1x64x64xbf16, 1 : i32>}> : () -> ()
      "aie.shim_dma_allocation"() <{channel_dir = 1 : i32, channel_index = 1 : i64, col = 1 : i64, sym_name = @airMemcpyId13}> : () -> ()
      "memref.global"() <{sym_name = "airMemcpyId13", sym_visibility = "public", type = memref<1x1x64x64xbf16, 1 : i32>}> : () -> ()
    }) {sym_name = "segment_0"} : () -> ()
    "airrt.module_metadata"() ({
      "airrt.module_metadata_terminator"() : () -> ()
    }) : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_9"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_8"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_7"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_6"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_5"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_4"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_3"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_2"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_1"}> : () -> ()
    "air.channel"() <{size = [1, 1], sym_name = "channel_0"}> : () -> ()
    "func.func"() <{function_type = () -> (), sym_name = "matmul_64x64_128xbf16__dispatch_0_matmul_64x64x128_bf16xbf16xf32"}> ({
      %0 = "arith.constant"() <{value = 1 : index}> : () -> index
      %1 = "arith.constant"() <{value = 0 : index}> : () -> index
      %2:2 = "air.execute"() ({
        %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 0 : index, descriptor_flags = 1 : i32, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<64x128xbf16>
        "air.execute_terminator"(%9) : (memref<64x128xbf16>) -> ()
      }) : () -> (!air.async.token, memref<64x128xbf16>)
      %3 = "air.execute"(%2#0) ({
        "memref.assume_alignment"(%2#1) <{alignment = 64 : i32}> : (memref<64x128xbf16>) -> ()
        "air.execute_terminator"() : () -> ()
      }) : (!air.async.token) -> !air.async.token
      %4:2 = "air.execute"() ({
        %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 1 : index, descriptor_flags = 1 : i32, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<128x64xbf16>
        "air.execute_terminator"(%9) : (memref<128x64xbf16>) -> ()
      }) : () -> (!air.async.token, memref<128x64xbf16>)
      %5 = "air.execute"(%4#0) ({
        "memref.assume_alignment"(%4#1) <{alignment = 64 : i32}> : (memref<128x64xbf16>) -> ()
        "air.execute_terminator"() : () -> ()
      }) : (!air.async.token) -> !air.async.token
      %6:2 = "air.execute"() ({
        %9 = "hal.interface.binding.subspan"(%1) {alignment = 64 : index, binding = 2 : index, descriptor_type = #hal.descriptor_type<storage_buffer>, operandSegmentSizes = array<i32: 1, 0>, set = 0 : index} : (index) -> memref<64x64xf32>
        "air.execute_terminator"(%9) : (memref<64x64xf32>) -> ()
      }) : () -> (!air.async.token, memref<64x64xf32>)
      %7 = "air.execute"(%6#0) ({
        "memref.assume_alignment"(%6#1) <{alignment = 64 : i32}> : (memref<64x64xf32>) -> ()
        "air.execute_terminator"() : () -> ()
      }) : (!air.async.token) -> !air.async.token
      %8 = "air.launch"(%7, %5, %3, %0, %0, %6#1, %2#1, %4#1) <{operandSegmentSizes = array<i32: 3, 2, 3>}> ({
      ^bb0(%arg0: index, %arg1: index, %arg2: index, %arg3: index, %arg4: memref<64x64xf32>, %arg5: memref<64x128xbf16>, %arg6: memref<128x64xbf16>):
        %9 = "arith.constant"() <{value = 64 : index}> : () -> index
        %10 = "arith.constant"() <{value = 128 : index}> : () -> index
        %11 = "arith.constant"() <{value = 0 : index}> : () -> index
        %12 = "arith.constant"() <{value = 1 : index}> : () -> index
        %13:2 = "air.execute"() ({
          %25 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 64)>}> : (index) -> index
          "air.execute_terminator"(%25) : (index) -> ()
        }) : () -> (!air.async.token, index)
        %14 = "air.channel.put"(%13#0, %arg5, %13#1, %11, %9, %9, %10, %12) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 1, 0, 1, 2, 2, 2>}> {id = 1 : i32, metadata = @airMemcpyId6} : (!air.async.token, memref<64x128xbf16>, index, index, index, index, index, index) -> !air.async.token
        %15:2 = "air.execute"() ({
          %25 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 64)>}> : (index) -> index
          "air.execute_terminator"(%25) : (index) -> ()
        }) : () -> (!air.async.token, index)
        %16 = "air.channel.put"(%15#0, %arg6, %11, %15#1, %9, %9, %9, %12) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 1, 0, 1, 2, 2, 2>}> {id = 2 : i32, metadata = @airMemcpyId7} : (!air.async.token, memref<128x64xbf16>, index, index, index, index, index, index) -> !air.async.token
        %17:2 = "air.execute"() ({
          %25 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 64)>}> : (index) -> index
          "air.execute_terminator"(%25) : (index) -> ()
        }) : () -> (!air.async.token, index)
        %18 = "air.channel.put"(%17#0, %arg5, %17#1, %9, %9, %9, %10, %12) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 1, 0, 1, 2, 2, 2>}> {id = 3 : i32, metadata = @airMemcpyId12} : (!air.async.token, memref<64x128xbf16>, index, index, index, index, index, index) -> !air.async.token
        %19:2 = "air.execute"() ({
          %25 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 64)>}> : (index) -> index
          "air.execute_terminator"(%25) : (index) -> ()
        }) : () -> (!air.async.token, index)
        %20 = "air.channel.put"(%19#0, %arg6, %9, %19#1, %9, %9, %9, %12) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 1, 0, 1, 2, 2, 2>}> {id = 4 : i32, metadata = @airMemcpyId13} : (!air.async.token, memref<128x64xbf16>, index, index, index, index, index, index) -> !air.async.token
        %21:2 = "air.execute"() ({
          %25 = "affine.apply"(%arg0) <{map = affine_map<()[s0] -> (s0 * 64)>}> : (index) -> index
          "air.execute_terminator"(%25) : (index) -> ()
        }) : () -> (!air.async.token, index)
        %22:2 = "air.execute"() ({
          %25 = "affine.apply"(%arg1) <{map = affine_map<()[s0] -> (s0 * 64)>}> : (index) -> index
          "air.execute_terminator"(%25) : (index) -> ()
        }) : () -> (!air.async.token, index)
        %23 = "air.channel.get"(%22#0, %21#0, %arg4, %21#1, %22#1, %9, %9, %9, %12) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 2, 0, 1, 2, 2, 2>}> {id = 5 : i32, metadata = @airMemcpyId20} : (!air.async.token, !air.async.token, memref<64x64xf32>, index, index, index, index, index, index) -> !air.async.token
        %24 = "air.segment"() <{operandSegmentSizes = array<i32: 0, 0, 0>, sym_name = "segment_0"}> ({
          %25 = "arith.constant"() <{value = 16 : index}> : () -> index
          %26 = "arith.constant"() <{value = 8 : index}> : () -> index
          %27 = "arith.constant"() <{value = 4 : index}> : () -> index
          %28 = "arith.constant"() <{value = 64 : index}> : () -> index
          %29 = "arith.constant"() <{value = 0 : index}> : () -> index
          %30 = "arith.constant"() <{value = 1 : index}> : () -> index
          %31 = "air.wait_all"() : () -> !air.async.token
          %32 = "air.wait_all"() : () -> !air.async.token
          %33:2 = "air.execute"() ({
            %64 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x1x64x64xf32, 1 : i32>
            "air.execute_terminator"(%64) : (memref<1x1x64x64xf32, 1 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x1x64x64xf32, 1 : i32>)
          %34:2 = "air.execute"() ({
            %64 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x1x16x16x4x4xf32, 2 : i32>
            "air.execute_terminator"(%64) : (memref<1x1x16x16x4x4xf32, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x1x16x16x4x4xf32, 2 : i32>)
          %35:2 = "air.execute"() ({
            %64 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x1x16x8x8x4xbf16, 2 : i32>
            "air.execute_terminator"(%64) : (memref<1x1x16x8x8x4xbf16, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x1x16x8x8x4xbf16, 2 : i32>)
          %36:2 = "air.execute"() ({
            %64 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x1x8x16x4x8xbf16, 2 : i32>
            "air.execute_terminator"(%64) : (memref<1x1x8x16x4x8xbf16, 2 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x1x8x16x4x8xbf16, 2 : i32>)
          %37:2 = "air.execute"() ({
            %64 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x1x64x64xbf16, 1 : i32>
            "air.execute_terminator"(%64) : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x1x64x64xbf16, 1 : i32>)
          %38:2 = "air.execute"() ({
            %64 = "memref.alloc"() <{operandSegmentSizes = array<i32: 0, 0>}> : () -> memref<1x1x64x64xbf16, 1 : i32>
            "air.execute_terminator"(%64) : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
          }) : () -> (!air.async.token, memref<1x1x64x64xbf16, 1 : i32>)
          %39 = "air.channel.get"(%38#0, %31, %38#1) <{chan_name = @channel_0, operandSegmentSizes = array<i32: 2, 0, 1, 0, 0, 0>}> {id = 6 : i32} : (!air.async.token, !air.async.token, memref<1x1x64x64xbf16, 1 : i32>) -> !air.async.token
          %40 = "air.channel.get"(%37#0, %32, %37#1) <{chan_name = @channel_1, operandSegmentSizes = array<i32: 2, 0, 1, 0, 0, 0>}> {id = 7 : i32} : (!air.async.token, !air.async.token, memref<1x1x64x64xbf16, 1 : i32>) -> !air.async.token
          %41 = "air.wait_all"() : () -> !air.async.token
          %42 = "air.channel.put"(%41, %38#0, %29, %29, %38#1, %29, %29, %29, %26, %28, %26, %26, %28, %30) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 2, 2, 1, 3, 3, 3>}> {id = 8 : i32} : (!air.async.token, !air.async.token, index, index, memref<1x1x64x64xbf16, 1 : i32>, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %43 = "air.wait_all"() : () -> !air.async.token
          %44 = "air.channel.put"(%43, %37#0, %29, %29, %37#1, %29, %29, %29, %25, %28, %27, %27, %28, %30) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 2, 2, 1, 3, 3, 3>}> {id = 9 : i32} : (!air.async.token, !air.async.token, index, index, memref<1x1x64x64xbf16, 1 : i32>, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %45 = "air.herd"(%38#0, %37#0, %36#0, %35#0, %34#0, %30, %30, %36#1, %35#1, %34#1) <{operandSegmentSizes = array<i32: 5, 2, 3>, sym_name = "herd_0"}> ({
          ^bb0(%arg7: index, %arg8: index, %arg9: index, %arg10: index, %arg11: memref<1x1x8x16x4x8xbf16, 2 : i32>, %arg12: memref<1x1x16x8x8x4xbf16, 2 : i32>, %arg13: memref<1x1x16x16x4x4xf32, 2 : i32>):
            %64 = "arith.constant"() <{value = 4 : index}> : () -> index
            %65 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
            %66 = "arith.constant"() <{value = 0 : index}> : () -> index
            %67 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
            %68 = "arith.constant"() <{value = 8 : index}> : () -> index
            %69 = "arith.constant"() <{value = 1 : index}> : () -> index
            %70 = "arith.constant"() <{value = 16 : index}> : () -> index
            %71:2 = "air.execute"() ({
              %81 = "affine.apply"(%arg7) <{map = affine_map<()[s0] -> (s0 * 16)>}> : (index) -> index
              "air.execute_terminator"(%81) : (index) -> ()
            }) : () -> (!air.async.token, index)
            %72:2 = "air.execute"() ({
              %81 = "affine.apply"(%arg8) <{map = affine_map<()[s0] -> (s0 * 16)>}> : (index) -> index
              "air.execute_terminator"(%81) : (index) -> ()
            }) : () -> (!air.async.token, index)
            %73 = "air.wait_all"() : () -> !air.async.token
            %74 = "air.channel.get"(%73, %arg7, %arg8, %arg11) <{chan_name = @channel_2, operandSegmentSizes = array<i32: 1, 2, 1, 0, 0, 0>}> {id = 10 : i32} : (!air.async.token, index, index, memref<1x1x8x16x4x8xbf16, 2 : i32>) -> !air.async.token
            %75 = "air.wait_all"() : () -> !air.async.token
            %76 = "air.channel.get"(%75, %arg7, %arg8, %arg12) <{chan_name = @channel_3, operandSegmentSizes = array<i32: 1, 2, 1, 0, 0, 0>}> {id = 11 : i32} : (!air.async.token, index, index, memref<1x1x16x8x8x4xbf16, 2 : i32>) -> !air.async.token
            %77 = "memref.subview"(%arg13, %72#1, %71#1) <{operandSegmentSizes = array<i32: 1, 2, 0, 0>, static_offsets = array<i64: 0, 0, -9223372036854775808, -9223372036854775808, 0, 0>, static_sizes = array<i64: 1, 1, 16, 16, 4, 4>, static_strides = array<i64: 1, 1, 1, 1, 1, 1>}> : (memref<1x1x16x16x4x4xf32, 2 : i32>, index, index) -> memref<1x1x16x16x4x4xf32, strided<[4096, 4096, 256, 16, 4, 1], offset: ?>, 2 : i32>
            %78 = "air.execute"() ({
              "scf.for"(%66, %69, %69) ({
              ^bb0(%arg14: index):
                "scf.for"(%66, %69, %69) ({
                ^bb0(%arg15: index):
                  "scf.for"(%66, %70, %69) ({
                  ^bb0(%arg16: index):
                    "scf.for"(%66, %70, %69) ({
                    ^bb0(%arg17: index):
                      "scf.for"(%66, %64, %69) ({
                      ^bb0(%arg18: index):
                        "scf.for"(%66, %64, %69) ({
                        ^bb0(%arg19: index):
                          "memref.store"(%65, %77, %arg14, %arg15, %arg16, %arg17, %arg18, %arg19) <{nontemporal = false}> : (f32, memref<1x1x16x16x4x4xf32, strided<[4096, 4096, 256, 16, 4, 1], offset: ?>, 2 : i32>, index, index, index, index, index, index) -> ()
                          "scf.yield"() : () -> ()
                        }) : (index, index, index) -> ()
                        "scf.yield"() : () -> ()
                      }) : (index, index, index) -> ()
                      "scf.yield"() : () -> ()
                    }) : (index, index, index) -> ()
                    "scf.yield"() : () -> ()
                  }) : (index, index, index) -> ()
                  "scf.yield"() : () -> ()
                }) : (index, index, index) -> ()
                "scf.yield"() : () -> ()
              }) : (index, index, index) -> ()
              "air.execute_terminator"() : () -> ()
            }) : () -> !air.async.token
            %79 = "air.wait_all"(%76, %74) : (!air.async.token, !air.async.token) -> !air.async.token
            %80 = "scf.for"(%66, %70, %69, %79) ({
            ^bb0(%arg14: index, %arg15: !air.async.token):
              %81 = "scf.for"(%66, %70, %69, %arg15) ({
              ^bb0(%arg16: index, %arg17: !air.async.token):
                %82 = "scf.for"(%66, %68, %69, %arg17) ({
                ^bb0(%arg18: index, %arg19: !air.async.token):
                  %83:2 = "air.execute"(%arg19) ({
                    %93 = "vector.transfer_read"(%arg11, %66, %66, %arg18, %arg14, %66, %66, %67) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x8x16x4x8xbf16, 2 : i32>, index, index, index, index, index, index, bf16) -> vector<1x1x1x1x4x8xbf16>
                    "air.execute_terminator"(%93) : (vector<1x1x1x1x4x8xbf16>) -> ()
                  }) : (!air.async.token) -> (!air.async.token, vector<1x1x1x1x4x8xbf16>)
                  %84:2 = "air.execute"(%arg19) ({
                    %93 = "vector.transfer_read"(%arg12, %66, %66, %arg16, %arg18, %66, %66, %67) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x16x8x8x4xbf16, 2 : i32>, index, index, index, index, index, index, bf16) -> vector<1x1x1x1x8x4xbf16>
                    "air.execute_terminator"(%93) : (vector<1x1x1x1x8x4xbf16>) -> ()
                  }) : (!air.async.token) -> (!air.async.token, vector<1x1x1x1x8x4xbf16>)
                  %85:2 = "air.execute"(%arg19) ({
                    %93 = "affine.apply"(%arg16, %arg8) <{map = affine_map<()[s0, s1] -> (s0 + s1 * 16)>}> : (index, index) -> index
                    "air.execute_terminator"(%93) : (index) -> ()
                  }) : (!air.async.token) -> (!air.async.token, index)
                  %86:2 = "air.execute"(%arg19) ({
                    %93 = "affine.apply"(%arg14, %arg7) <{map = affine_map<()[s0, s1] -> (s0 + s1 * 16)>}> : (index, index) -> index
                    "air.execute_terminator"(%93) : (index) -> ()
                  }) : (!air.async.token) -> (!air.async.token, index)
                  %87:2 = "air.execute"(%86#0, %85#0) ({
                    %93 = "vector.transfer_read"(%arg13, %66, %66, %85#1, %86#1, %66, %66, %65) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index, f32) -> vector<1x1x1x1x4x4xf32>
                    "air.execute_terminator"(%93) : (vector<1x1x1x1x4x4xf32>) -> ()
                  }) : (!air.async.token, !air.async.token) -> (!air.async.token, vector<1x1x1x1x4x4xf32>)
                  %88 = "arith.extf"(%83#1) : (vector<1x1x1x1x4x8xbf16>) -> vector<1x1x1x1x4x8xf32>
                  %89 = "arith.extf"(%84#1) : (vector<1x1x1x1x8x4xbf16>) -> vector<1x1x1x1x8x4xf32>
                  %90 = "vector.contract"(%88, %89, %87#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d0, d2, d5, d3, d6, d8)>, affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d2, d1, d4, d5, d8, d7)>, affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d0, d1, d4, d3, d6, d7)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x1x1x4x8xf32>, vector<1x1x1x1x8x4xf32>, vector<1x1x1x1x4x4xf32>) -> vector<1x1x1x1x4x4xf32>
                  %91 = "air.execute"(%87#0) ({
                    "vector.transfer_write"(%90, %arg13, %66, %66, %85#1, %86#1, %66, %66) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 6, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (vector<1x1x1x1x4x4xf32>, memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index) -> ()
                    "air.execute_terminator"() : () -> ()
                  }) : (!air.async.token) -> !air.async.token
                  %92 = "air.wait_all"(%91, %84#0, %83#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
                  "scf.yield"(%92) : (!air.async.token) -> ()
                }) : (index, index, index, !air.async.token) -> !air.async.token
                "scf.yield"(%82) : (!air.async.token) -> ()
              }) : (index, index, index, !air.async.token) -> !air.async.token
              "scf.yield"(%81) : (!air.async.token) -> ()
            }) : (index, index, index, !air.async.token) -> !air.async.token
            "air.herd_terminator"() : () -> ()
          }) {id = 3 : i32, x_loc = 0 : i64, y_loc = 2 : i64} : (!air.async.token, !air.async.token, !air.async.token, !air.async.token, !air.async.token, index, index, memref<1x1x8x16x4x8xbf16, 2 : i32>, memref<1x1x16x8x8x4xbf16, 2 : i32>, memref<1x1x16x16x4x4xf32, 2 : i32>) -> !air.async.token
          %46 = "air.channel.get"(%45, %39, %38#1) <{chan_name = @channel_4, operandSegmentSizes = array<i32: 2, 0, 1, 0, 0, 0>}> {id = 12 : i32} : (!air.async.token, !air.async.token, memref<1x1x64x64xbf16, 1 : i32>) -> !air.async.token
          %47 = "air.channel.get"(%45, %40, %37#1) <{chan_name = @channel_5, operandSegmentSizes = array<i32: 2, 0, 1, 0, 0, 0>}> {id = 13 : i32} : (!air.async.token, !air.async.token, memref<1x1x64x64xbf16, 1 : i32>) -> !air.async.token
          %48 = "air.wait_all"() : () -> !air.async.token
          %49 = "air.channel.put"(%48, %45, %29, %29, %38#1, %29, %29, %29, %26, %28, %26, %26, %28, %30) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 2, 2, 1, 3, 3, 3>}> {id = 14 : i32} : (!air.async.token, !air.async.token, index, index, memref<1x1x64x64xbf16, 1 : i32>, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %50 = "air.wait_all"() : () -> !air.async.token
          %51 = "air.channel.put"(%50, %45, %29, %29, %37#1, %29, %29, %29, %25, %28, %27, %27, %28, %30) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 2, 2, 1, 3, 3, 3>}> {id = 15 : i32} : (!air.async.token, !air.async.token, index, index, memref<1x1x64x64xbf16, 1 : i32>, index, index, index, index, index, index, index, index, index) -> !air.async.token
          %52 = "air.herd"(%45, %30, %30, %36#1, %35#1, %34#1) <{operandSegmentSizes = array<i32: 1, 2, 3>, sym_name = "herd_0"}> ({
          ^bb0(%arg7: index, %arg8: index, %arg9: index, %arg10: index, %arg11: memref<1x1x8x16x4x8xbf16, 2 : i32>, %arg12: memref<1x1x16x8x8x4xbf16, 2 : i32>, %arg13: memref<1x1x16x16x4x4xf32, 2 : i32>):
            %64 = "arith.constant"() <{value = 0 : index}> : () -> index
            %65 = "arith.constant"() <{value = 0.000000e+00 : bf16}> : () -> bf16
            %66 = "arith.constant"() <{value = 0.000000e+00 : f32}> : () -> f32
            %67 = "arith.constant"() <{value = 8 : index}> : () -> index
            %68 = "arith.constant"() <{value = 1 : index}> : () -> index
            %69 = "arith.constant"() <{value = 16 : index}> : () -> index
            %70 = "air.wait_all"() : () -> !air.async.token
            %71 = "air.channel.get"(%70, %arg7, %arg8, %arg11) <{chan_name = @channel_6, operandSegmentSizes = array<i32: 1, 2, 1, 0, 0, 0>}> {id = 16 : i32} : (!air.async.token, index, index, memref<1x1x8x16x4x8xbf16, 2 : i32>) -> !air.async.token
            %72 = "air.wait_all"() : () -> !air.async.token
            %73 = "air.channel.get"(%72, %arg7, %arg8, %arg12) <{chan_name = @channel_7, operandSegmentSizes = array<i32: 1, 2, 1, 0, 0, 0>}> {id = 17 : i32} : (!air.async.token, index, index, memref<1x1x16x8x8x4xbf16, 2 : i32>) -> !air.async.token
            %74 = "air.wait_all"(%73, %71) : (!air.async.token, !air.async.token) -> !air.async.token
            %75 = "scf.for"(%64, %69, %68, %74) ({
            ^bb0(%arg14: index, %arg15: !air.async.token):
              %76 = "scf.for"(%64, %69, %68, %arg15) ({
              ^bb0(%arg16: index, %arg17: !air.async.token):
                %77 = "scf.for"(%64, %67, %68, %arg17) ({
                ^bb0(%arg18: index, %arg19: !air.async.token):
                  %78:2 = "air.execute"(%arg19) ({
                    %88 = "vector.transfer_read"(%arg11, %64, %64, %arg18, %arg14, %64, %64, %65) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x8x16x4x8xbf16, 2 : i32>, index, index, index, index, index, index, bf16) -> vector<1x1x1x1x4x8xbf16>
                    "air.execute_terminator"(%88) : (vector<1x1x1x1x4x8xbf16>) -> ()
                  }) : (!air.async.token) -> (!air.async.token, vector<1x1x1x1x4x8xbf16>)
                  %79:2 = "air.execute"(%arg19) ({
                    %88 = "vector.transfer_read"(%arg12, %64, %64, %arg16, %arg18, %64, %64, %65) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x16x8x8x4xbf16, 2 : i32>, index, index, index, index, index, index, bf16) -> vector<1x1x1x1x8x4xbf16>
                    "air.execute_terminator"(%88) : (vector<1x1x1x1x8x4xbf16>) -> ()
                  }) : (!air.async.token) -> (!air.async.token, vector<1x1x1x1x8x4xbf16>)
                  %80:2 = "air.execute"(%arg19) ({
                    %88 = "affine.apply"(%arg16, %arg8) <{map = affine_map<()[s0, s1] -> (s0 + s1 * 16)>}> : (index, index) -> index
                    "air.execute_terminator"(%88) : (index) -> ()
                  }) : (!air.async.token) -> (!air.async.token, index)
                  %81:2 = "air.execute"(%arg19) ({
                    %88 = "affine.apply"(%arg14, %arg7) <{map = affine_map<()[s0, s1] -> (s0 + s1 * 16)>}> : (index, index) -> index
                    "air.execute_terminator"(%88) : (index) -> ()
                  }) : (!air.async.token) -> (!air.async.token, index)
                  %82:2 = "air.execute"(%81#0, %80#0) ({
                    %88 = "vector.transfer_read"(%arg13, %64, %64, %80#1, %81#1, %64, %64, %66) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 6, 1, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index, f32) -> vector<1x1x1x1x4x4xf32>
                    "air.execute_terminator"(%88) : (vector<1x1x1x1x4x4xf32>) -> ()
                  }) : (!air.async.token, !air.async.token) -> (!air.async.token, vector<1x1x1x1x4x4xf32>)
                  %83 = "arith.extf"(%78#1) : (vector<1x1x1x1x4x8xbf16>) -> vector<1x1x1x1x4x8xf32>
                  %84 = "arith.extf"(%79#1) : (vector<1x1x1x1x8x4xbf16>) -> vector<1x1x1x1x8x4xf32>
                  %85 = "vector.contract"(%83, %84, %82#1) <{indexing_maps = [affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d0, d2, d5, d3, d6, d8)>, affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d2, d1, d4, d5, d8, d7)>, affine_map<(d0, d1, d2, d3, d4, d5, d6, d7, d8) -> (d0, d1, d4, d3, d6, d7)>], iterator_types = [#vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>, #vector.iterator_type<parallel>, #vector.iterator_type<parallel>, #vector.iterator_type<reduction>], kind = #vector.kind<add>}> : (vector<1x1x1x1x4x8xf32>, vector<1x1x1x1x8x4xf32>, vector<1x1x1x1x4x4xf32>) -> vector<1x1x1x1x4x4xf32>
                  %86 = "air.execute"(%82#0) ({
                    "vector.transfer_write"(%85, %arg13, %64, %64, %80#1, %81#1, %64, %64) <{in_bounds = [true, true, true, true, true, true], operandSegmentSizes = array<i32: 1, 1, 6, 0>, permutation_map = affine_map<(d0, d1, d2, d3, d4, d5) -> (d0, d1, d2, d3, d4, d5)>}> : (vector<1x1x1x1x4x4xf32>, memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index) -> ()
                    "air.execute_terminator"() : () -> ()
                  }) : (!air.async.token) -> !air.async.token
                  %87 = "air.wait_all"(%86, %79#0, %78#0) : (!air.async.token, !air.async.token, !air.async.token) -> !air.async.token
                  "scf.yield"(%87) : (!air.async.token) -> ()
                }) : (index, index, index, !air.async.token) -> !air.async.token
                "scf.yield"(%77) : (!air.async.token) -> ()
              }) : (index, index, index, !air.async.token) -> !air.async.token
              "scf.yield"(%76) : (!air.async.token) -> ()
            }) : (index, index, index, !air.async.token) -> !air.async.token
            "air.herd_terminator"() : () -> ()
          }) {id = 4 : i32, x_loc = 0 : i64, y_loc = 2 : i64} : (!air.async.token, index, index, memref<1x1x8x16x4x8xbf16, 2 : i32>, memref<1x1x16x8x8x4xbf16, 2 : i32>, memref<1x1x16x16x4x4xf32, 2 : i32>) -> !air.async.token
          %53 = "air.wait_all"() : () -> !air.async.token
          %54 = "air.wait_all"() : () -> !air.async.token
          %55 = "air.channel.get"(%54, %53, %33#0, %29, %29, %33#1) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 3, 2, 1, 0, 0, 0>}> {id = 18 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<1x1x64x64xf32, 1 : i32>) -> !air.async.token
          %56 = "air.herd"(%52, %33#0, %30, %30, %34#1) <{operandSegmentSizes = array<i32: 2, 2, 1>, sym_name = "herd_0"}> ({
          ^bb0(%arg7: index, %arg8: index, %arg9: index, %arg10: index, %arg11: memref<1x1x16x16x4x4xf32, 2 : i32>):
            %64 = "arith.constant"() <{value = 1 : index}> : () -> index
            %65 = "arith.constant"() <{value = 256 : index}> : () -> index
            %66 = "arith.constant"() <{value = 4 : index}> : () -> index
            %67 = "arith.constant"() <{value = 16 : index}> : () -> index
            %68 = "arith.constant"() <{value = 0 : index}> : () -> index
            %69:2 = "air.execute"() ({
              %74 = "affine.apply"(%arg7) <{map = affine_map<()[s0] -> (s0 * 16)>}> : (index) -> index
              "air.execute_terminator"(%74) : (index) -> ()
            }) : () -> (!air.async.token, index)
            %70:2 = "air.execute"() ({
              %74 = "affine.apply"(%arg8) <{map = affine_map<()[s0] -> (s0 * 16)>}> : (index) -> index
              "air.execute_terminator"(%74) : (index) -> ()
            }) : () -> (!air.async.token, index)
            %71 = "air.wait_all"() : () -> !air.async.token
            %72 = "air.wait_all"() : () -> !air.async.token
            %73 = "air.channel.put"(%72, %71, %70#0, %69#0, %arg7, %arg8, %arg11, %70#1, %69#1, %68, %68, %67, %66, %67, %66, %67, %66, %65, %64) <{chan_name = @channel_8, operandSegmentSizes = array<i32: 4, 2, 1, 4, 4, 4>}> {id = 19 : i32} : (!air.async.token, !air.async.token, !air.async.token, !air.async.token, index, index, memref<1x1x16x16x4x4xf32, 2 : i32>, index, index, index, index, index, index, index, index, index, index, index, index) -> !air.async.token
            "air.herd_terminator"() : () -> ()
          }) {id = 5 : i32, x_loc = 0 : i64, y_loc = 2 : i64} : (!air.async.token, !air.async.token, index, index, memref<1x1x16x16x4x4xf32, 2 : i32>) -> !air.async.token
          %57 = "air.channel.put"(%56, %32, %31, %33#1) <{chan_name = @channel_9, operandSegmentSizes = array<i32: 3, 0, 1, 0, 0, 0>}> {id = 20 : i32} : (!air.async.token, !air.async.token, !air.async.token, memref<1x1x64x64xf32, 1 : i32>) -> !air.async.token
          %58 = "air.execute"(%46) ({
            "memref.dealloc"(%38#1) : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %59 = "air.execute"(%47) ({
            "memref.dealloc"(%37#1) : (memref<1x1x64x64xbf16, 1 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %60 = "air.execute"(%52) ({
            "memref.dealloc"(%36#1) : (memref<1x1x8x16x4x8xbf16, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %61 = "air.execute"(%52) ({
            "memref.dealloc"(%35#1) : (memref<1x1x16x8x8x4xbf16, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %62 = "air.execute"(%56) ({
            "memref.dealloc"(%34#1) : (memref<1x1x16x16x4x4xf32, 2 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          %63 = "air.execute"(%57) ({
            "memref.dealloc"(%33#1) : (memref<1x1x64x64xf32, 1 : i32>) -> ()
            "air.execute_terminator"() : () -> ()
          }) : (!air.async.token) -> !air.async.token
          "air.segment_terminator"() : () -> ()
        }) {id = 2 : i32, x_loc = 0 : i64, x_size = 4 : i64, y_loc = 2 : i64, y_size = 4 : i64} : () -> !air.async.token
        "air.launch_terminator"() : () -> ()
      }) {id = 1 : i32} : (!air.async.token, !air.async.token, !air.async.token, index, index, memref<64x64xf32>, memref<64x128xbf16>, memref<128x64xbf16>) -> !air.async.token
      "func.return"() : () -> ()
    }) {translation_info = #iree_codegen.translation_info<Custom>} : () -> ()
  }) : () -> ()
  "hal.executable.variant_end"() : () -> ()
}) {sym_name = "amdaie_xclbin_fb", target = #hal.executable.target<"amd-aie", "amdaie-xclbin-fb", {target_arch = "chip-tbd", ukernels = "none"}>} : () -> ()
failed to translate executables
+ compileResult=1
+ '[' 1 -ne 0 ']'
+ '[' 1 -ne 0 ']'
+ echo 'Expected compilation failure, got compilation failure.'
Expected compilation failure, got compilation failure.
+ return 0
+ run_matmul_test --name_prefix packPeelLarge --pipeline pack-peel --lhs_rhs_type bf16 --acc_type f32 --m 512 --n 512 --k 512 --compile-only 1
+ local lhs_rhs_type=
+ local acc_type=
+ local m=
+ local n=
+ local k=
+ local name_prefix=noprefix
+ local target_backend=amd-aie
+ local device=xrt
+ local peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ local mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ local vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ local pipeline=pad-pack
+ local dynamicity=static
+ local accumulate=false
+ local expect_compile_failure=0
+ local compile_only=0
+ local do_transpose_rhs=0
+ local max_elements_to_check=20000
+ local use_ukernel=0
+ '[' 16 -gt 0 ']'
+ case "$1" in
+ name_prefix=packPeelLarge
+ shift 2
+ '[' 14 -gt 0 ']'
+ case "$1" in
+ pipeline=pack-peel
+ shift 2
+ '[' 12 -gt 0 ']'
+ case "$1" in
+ lhs_rhs_type=bf16
+ shift 2
+ '[' 10 -gt 0 ']'
+ case "$1" in
+ acc_type=f32
+ shift 2
+ '[' 8 -gt 0 ']'
+ case "$1" in
+ m=512
+ shift 2
+ '[' 6 -gt 0 ']'
+ case "$1" in
+ n=512
+ shift 2
+ '[' 4 -gt 0 ']'
+ case "$1" in
+ k=512
+ shift 2
+ '[' 2 -gt 0 ']'
+ case "$1" in
+ compile_only=1
+ shift 2
+ '[' 0 -gt 0 ']'
+ set -x
++ date +%s%3N
+ start_time=1716219055653
+ name=mm_packPeelLarge_bf16_f32_m512_n512_k512
+ set +e
++ echo mm_packPeelLarge_bf16_f32_m512_n512_k512
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeelLarge_bf16_f32_m512_n512_k512
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ grep -c ,
++ echo mm_packPeelLarge_bf16_f32_m512_n512_k512
+ nameContainsComma=0
++ echo mm_packPeelLarge_bf16_f32_m512_n512_k512
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=512                     --n=512                     --k=512                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=512 --n=512 --k=512 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_calls.mlir
[TestShape(m=512, k=512, n=512, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219055727
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pack-peel                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_packPeelLarge_bf16_f32_m512_n512_k512 ****'
**** Generating matmul .vmfb file for mm_packPeelLarge_bf16_f32_m512_n512_k512 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pack-peel --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_512x512_512xbf16__dispatch_0_matmul_512x5 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 19632 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (25978 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_packPeelLarge_bf16_f32_m512_n512_k512 ****'
**** Generating calls .vmfb file for mm_packPeelLarge_bf16_f32_m512_n512_k512 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_ir.mlir
+ function_names=matmul_512x512_512xbf16_
++ date +%s%3N
+ compiled_time=1716219056460
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_packPeelLarge_bf16_f32_m512_n512_k512'\'' matmul tests ****'
**** Running 'mm_packPeelLarge_bf16_f32_m512_n512_k512' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_bf16_f32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 1 -ne 0 ']'
+ echo 'Compile only flag is 1 which is not 0, skipping execution'
Compile only flag is 1 which is not 0, skipping execution
+ return 0
+ run_matmul_test --name_prefix packPeel2304 --pipeline pack-peel --lhs_rhs_type bf16 --acc_type f32 --m 128 --n 128 --k 2304 --compile-only 1
+ local lhs_rhs_type=
+ local acc_type=
+ local m=
+ local n=
+ local k=
+ local name_prefix=noprefix
+ local target_backend=amd-aie
+ local device=xrt
+ local peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ local mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ local vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ local pipeline=pad-pack
+ local dynamicity=static
+ local accumulate=false
+ local expect_compile_failure=0
+ local compile_only=0
+ local do_transpose_rhs=0
+ local max_elements_to_check=20000
+ local use_ukernel=0
+ '[' 16 -gt 0 ']'
+ case "$1" in
+ name_prefix=packPeel2304
+ shift 2
+ '[' 14 -gt 0 ']'
+ case "$1" in
+ pipeline=pack-peel
+ shift 2
+ '[' 12 -gt 0 ']'
+ case "$1" in
+ lhs_rhs_type=bf16
+ shift 2
+ '[' 10 -gt 0 ']'
+ case "$1" in
+ acc_type=f32
+ shift 2
+ '[' 8 -gt 0 ']'
+ case "$1" in
+ m=128
+ shift 2
+ '[' 6 -gt 0 ']'
+ case "$1" in
+ n=128
+ shift 2
+ '[' 4 -gt 0 ']'
+ case "$1" in
+ k=2304
+ shift 2
+ '[' 2 -gt 0 ']'
+ case "$1" in
+ compile_only=1
+ shift 2
+ '[' 0 -gt 0 ']'
+ set -x
++ date +%s%3N
+ start_time=1716219056464
+ name=mm_packPeel2304_bf16_f32_m128_n128_k2304
+ set +e
++ echo mm_packPeel2304_bf16_f32_m128_n128_k2304
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeel2304_bf16_f32_m128_n128_k2304
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_packPeel2304_bf16_f32_m128_n128_k2304
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeel2304_bf16_f32_m128_n128_k2304
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=128                     --n=128                     --k=2304                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=128 --n=128 --k=2304 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_calls.mlir
[TestShape(m=128, k=2304, n=128, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219056525
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pack-peel                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_packPeel2304_bf16_f32_m128_n128_k2304 ****'
**** Generating matmul .vmfb file for mm_packPeel2304_bf16_f32_m128_n128_k2304 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pack-peel --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_128x128_2304xbf16__dispatch_0_matmul_128x --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 19568 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (25914 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_128x128_2304xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_packPeel2304_bf16_f32_m128_n128_k2304 ****'
**** Generating calls .vmfb file for mm_packPeel2304_bf16_f32_m128_n128_k2304 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_ir.mlir
+ function_names=matmul_128x128_2304xbf16_
++ date +%s%3N
+ compiled_time=1716219057237
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_packPeel2304_bf16_f32_m128_n128_k2304'\'' matmul tests ****'
**** Running 'mm_packPeel2304_bf16_f32_m128_n128_k2304' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeel2304_bf16_f32_m128_n128_k2304_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 1 -ne 0 ']'
+ echo 'Compile only flag is 1 which is not 0, skipping execution'
Compile only flag is 1 which is not 0, skipping execution
+ return 0
+ run_matmul_test --name_prefix packPeelLarge --pipeline pack-peel --lhs_rhs_type i32 --acc_type i32 --m 512 --n 512 --k 512
+ local lhs_rhs_type=
+ local acc_type=
+ local m=
+ local n=
+ local k=
+ local name_prefix=noprefix
+ local target_backend=amd-aie
+ local device=xrt
+ local peano_install_path=/proj/gdba/jamesn/workspace/peano/install
+ local mlir_aie_install_path=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install
+ local vitis_path=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2
+ local pipeline=pad-pack
+ local dynamicity=static
+ local accumulate=false
+ local expect_compile_failure=0
+ local compile_only=0
+ local do_transpose_rhs=0
+ local max_elements_to_check=20000
+ local use_ukernel=0
+ '[' 14 -gt 0 ']'
+ case "$1" in
+ name_prefix=packPeelLarge
+ shift 2
+ '[' 12 -gt 0 ']'
+ case "$1" in
+ pipeline=pack-peel
+ shift 2
+ '[' 10 -gt 0 ']'
+ case "$1" in
+ lhs_rhs_type=i32
+ shift 2
+ '[' 8 -gt 0 ']'
+ case "$1" in
+ acc_type=i32
+ shift 2
+ '[' 6 -gt 0 ']'
+ case "$1" in
+ m=512
+ shift 2
+ '[' 4 -gt 0 ']'
+ case "$1" in
+ n=512
+ shift 2
+ '[' 2 -gt 0 ']'
+ case "$1" in
+ k=512
+ shift 2
+ '[' 0 -gt 0 ']'
+ set -x
++ date +%s%3N
+ start_time=1716219057241
+ name=mm_packPeelLarge_i32_i32_m512_n512_k512
+ set +e
++ echo mm_packPeelLarge_i32_i32_m512_n512_k512
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeelLarge_i32_i32_m512_n512_k512
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_packPeelLarge_i32_i32_m512_n512_k512
++ grep -c ,
+ nameContainsComma=0
++ echo mm_packPeelLarge_i32_i32_m512_n512_k512
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.vmfb
+ generation_flags='--lhs_rhs_type=i32                     --acc_type=i32                     --m=512                     --n=512                     --k=512                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=i32 --acc_type=i32 --m=512 --n=512 --k=512 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.mlir
[TestShape(m=512, k=512, n=512, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219057303
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pack-peel                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_packPeelLarge_i32_i32_m512_n512_k512 ****'
**** Generating matmul .vmfb file for mm_packPeelLarge_i32_i32_m512_n512_k512 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pack-peel --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_512x512_512xi32__dispatch_0_matmul_512x51 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 21040 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (27386 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_512x512_512xi32__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_packPeelLarge_i32_i32_m512_n512_k512 ****'
**** Generating calls .vmfb file for mm_packPeelLarge_i32_i32_m512_n512_k512 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_ir.mlir
+ function_names=matmul_512x512_512xi32_
++ date +%s%3N
+ compiled_time=1716219058086
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_packPeelLarge_i32_i32_m512_n512_k512'\'' matmul tests ****'
**** Running 'mm_packPeelLarge_i32_i32_m512_n512_k512' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_packPeelLarge_i32_i32_m512_n512_k512_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_512x512_512xi32__512_512_512_0] ---
Matmul shape (MxKxN): 512x512x512
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219059251
+ echo 'Time spent in generation: 62 [ms]'
Time spent in generation: 62 [ms]
+ echo 'Time spent in compilation: 783 [ms]'
Time spent in compilation: 783 [ms]
+ echo 'Time spent in execution and verification: 1165 [ms]'
Time spent in execution and verification: 1165 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219059254
+ name=mm_mm2_bf16_f32_m308_n2432_k9728
+ set +e
++ echo mm_mm2_bf16_f32_m308_n2432_k9728
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm2_bf16_f32_m308_n2432_k9728
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_mm2_bf16_f32_m308_n2432_k9728
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm2_bf16_f32_m308_n2432_k9728
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=308                     --n=2432                     --k=9728                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=308 --n=2432 --k=9728 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.mlir
[TestShape(m=308, k=9728, n=2432, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219059330
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_mm2_bf16_f32_m308_n2432_k9728 ****'
**** Generating matmul .vmfb file for mm_mm2_bf16_f32_m308_n2432_k9728 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_308x2432_9728xbf16__dispatch_0_matmul_308 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 23168 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (29514 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_mm2_bf16_f32_m308_n2432_k9728 ****'
**** Generating calls .vmfb file for mm_mm2_bf16_f32_m308_n2432_k9728 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_ir.mlir
+ function_names=matmul_308x2432_9728xbf16_
++ date +%s%3N
+ compiled_time=1716219060849
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_mm2_bf16_f32_m308_n2432_k9728'\'' matmul tests ****'
**** Running 'mm_mm2_bf16_f32_m308_n2432_k9728' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm2_bf16_f32_m308_n2432_k9728_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_308x2432_9728xbf16__308_9728_2432_0] ---
Matmul shape (MxKxN): 308x9728x2432
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219063167
+ echo 'Time spent in generation: 76 [ms]'
Time spent in generation: 76 [ms]
+ echo 'Time spent in compilation: 1519 [ms]'
Time spent in compilation: 1519 [ms]
+ echo 'Time spent in execution and verification: 2318 [ms]'
Time spent in execution and verification: 2318 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219063169
+ name=mm_mm3_bf16_f32_m308_n2432_k2432
+ set +e
++ echo mm_mm3_bf16_f32_m308_n2432_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm3_bf16_f32_m308_n2432_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_mm3_bf16_f32_m308_n2432_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm3_bf16_f32_m308_n2432_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=308                     --n=2432                     --k=2432                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=308 --n=2432 --k=2432 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.mlir
[TestShape(m=308, k=2432, n=2432, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219063228
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_mm3_bf16_f32_m308_n2432_k2432 ****'
**** Generating matmul .vmfb file for mm_mm3_bf16_f32_m308_n2432_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_308x2432_2432xbf16__dispatch_0_matmul_308 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 23712 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (30058 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_mm3_bf16_f32_m308_n2432_k2432 ****'
**** Generating calls .vmfb file for mm_mm3_bf16_f32_m308_n2432_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_ir.mlir
+ function_names=matmul_308x2432_2432xbf16_
++ date +%s%3N
+ compiled_time=1716219064375
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_mm3_bf16_f32_m308_n2432_k2432'\'' matmul tests ****'
**** Running 'mm_mm3_bf16_f32_m308_n2432_k2432' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm3_bf16_f32_m308_n2432_k2432_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_308x2432_2432xbf16__308_2432_2432_0] ---
Matmul shape (MxKxN): 308x2432x2432
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219065663
+ echo 'Time spent in generation: 59 [ms]'
Time spent in generation: 59 [ms]
+ echo 'Time spent in compilation: 1147 [ms]'
Time spent in compilation: 1147 [ms]
+ echo 'Time spent in execution and verification: 1288 [ms]'
Time spent in execution and verification: 1288 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219065666
+ name=mm_mm4_bf16_f32_m308_n7296_k2432
+ set +e
++ echo mm_mm4_bf16_f32_m308_n7296_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm4_bf16_f32_m308_n7296_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_mm4_bf16_f32_m308_n7296_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm4_bf16_f32_m308_n7296_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=308                     --n=7296                     --k=2432                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=308 --n=7296 --k=2432 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.mlir
[TestShape(m=308, k=2432, n=7296, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219065723
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_mm4_bf16_f32_m308_n7296_k2432 ****'
**** Generating matmul .vmfb file for mm_mm4_bf16_f32_m308_n7296_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_308x7296_2432xbf16__dispatch_0_matmul_308 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 17984 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (24330 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_mm4_bf16_f32_m308_n7296_k2432 ****'
**** Generating calls .vmfb file for mm_mm4_bf16_f32_m308_n7296_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_ir.mlir
+ function_names=matmul_308x7296_2432xbf16_
++ date +%s%3N
+ compiled_time=1716219066636
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_mm4_bf16_f32_m308_n7296_k2432'\'' matmul tests ****'
**** Running 'mm_mm4_bf16_f32_m308_n7296_k2432' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm4_bf16_f32_m308_n7296_k2432_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_308x7296_2432xbf16__308_2432_7296_0] ---
Matmul shape (MxKxN): 308x2432x7296
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219067245
+ echo 'Time spent in generation: 57 [ms]'
Time spent in generation: 57 [ms]
+ echo 'Time spent in compilation: 913 [ms]'
Time spent in compilation: 913 [ms]
+ echo 'Time spent in execution and verification: 609 [ms]'
Time spent in execution and verification: 609 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219067248
+ name=mm_mm5_bf16_f32_m8192_n9728_k2432
+ set +e
++ echo mm_mm5_bf16_f32_m8192_n9728_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm5_bf16_f32_m8192_n9728_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_mm5_bf16_f32_m8192_n9728_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm5_bf16_f32_m8192_n9728_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=8192                     --n=9728                     --k=2432                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=8192 --n=9728 --k=2432 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.mlir
[TestShape(m=8192, k=2432, n=9728, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219067311
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_mm5_bf16_f32_m8192_n9728_k2432 ****'
**** Generating matmul .vmfb file for mm_mm5_bf16_f32_m8192_n9728_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_8192x9728_2432xbf16__dispatch_0_matmul_81 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 74400 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (80752 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_mm5_bf16_f32_m8192_n9728_k2432 ****'
**** Generating calls .vmfb file for mm_mm5_bf16_f32_m8192_n9728_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_ir.mlir
+ function_names=matmul_8192x9728_2432xbf16_
++ date +%s%3N
+ compiled_time=1716219071488
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_mm5_bf16_f32_m8192_n9728_k2432'\'' matmul tests ****'
**** Running 'mm_mm5_bf16_f32_m8192_n9728_k2432' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm5_bf16_f32_m8192_n9728_k2432_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_8192x9728_2432xbf16__8192_2432_9728_0] ---
Matmul shape (MxKxN): 8192x2432x9728
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219073731
+ echo 'Time spent in generation: 63 [ms]'
Time spent in generation: 63 [ms]
+ echo 'Time spent in compilation: 4177 [ms]'
Time spent in compilation: 4177 [ms]
+ echo 'Time spent in execution and verification: 2243 [ms]'
Time spent in execution and verification: 2243 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219073734
+ name=mm_mm6_bf16_f32_m308_n9728_k2432
+ set +e
++ echo mm_mm6_bf16_f32_m308_n9728_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm6_bf16_f32_m308_n9728_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_mm6_bf16_f32_m308_n9728_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm6_bf16_f32_m308_n9728_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=308                     --n=9728                     --k=2432                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=308 --n=9728 --k=2432 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.mlir
[TestShape(m=308, k=2432, n=9728, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219073797
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_mm6_bf16_f32_m308_n9728_k2432 ****'
**** Generating matmul .vmfb file for mm_mm6_bf16_f32_m308_n9728_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_308x9728_2432xbf16__dispatch_0_matmul_308 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 23712 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (30058 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_308x9728_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_mm6_bf16_f32_m308_n9728_k2432 ****'
**** Generating calls .vmfb file for mm_mm6_bf16_f32_m308_n9728_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_ir.mlir
+ function_names=matmul_308x9728_2432xbf16_
++ date +%s%3N
+ compiled_time=1716219074876
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_mm6_bf16_f32_m308_n9728_k2432'\'' matmul tests ****'
**** Running 'mm_mm6_bf16_f32_m308_n9728_k2432' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm6_bf16_f32_m308_n9728_k2432_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_308x9728_2432xbf16__308_2432_9728_0] ---
Matmul shape (MxKxN): 308x2432x9728
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219075573
+ echo 'Time spent in generation: 63 [ms]'
Time spent in generation: 63 [ms]
+ echo 'Time spent in compilation: 1079 [ms]'
Time spent in compilation: 1079 [ms]
+ echo 'Time spent in execution and verification: 697 [ms]'
Time spent in execution and verification: 697 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219075576
+ name=mm_mm7_bf16_f32_m8192_n2432_k2432
+ set +e
++ echo mm_mm7_bf16_f32_m8192_n2432_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm7_bf16_f32_m8192_n2432_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_mm7_bf16_f32_m8192_n2432_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm7_bf16_f32_m8192_n2432_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=8192                     --n=2432                     --k=2432                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=8192 --n=2432 --k=2432 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.mlir
[TestShape(m=8192, k=2432, n=2432, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219075633
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_mm7_bf16_f32_m8192_n2432_k2432 ****'
**** Generating matmul .vmfb file for mm_mm7_bf16_f32_m8192_n2432_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_8192x2432_2432xbf16__dispatch_0_matmul_81 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 73888 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (80240 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_mm7_bf16_f32_m8192_n2432_k2432 ****'
**** Generating calls .vmfb file for mm_mm7_bf16_f32_m8192_n2432_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_ir.mlir
+ function_names=matmul_8192x2432_2432xbf16_
++ date +%s%3N
+ compiled_time=1716219078443
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_mm7_bf16_f32_m8192_n2432_k2432'\'' matmul tests ****'
**** Running 'mm_mm7_bf16_f32_m8192_n2432_k2432' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm7_bf16_f32_m8192_n2432_k2432_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_8192x2432_2432xbf16__8192_2432_2432_0] ---
Matmul shape (MxKxN): 8192x2432x2432
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219079280
+ echo 'Time spent in generation: 57 [ms]'
Time spent in generation: 57 [ms]
+ echo 'Time spent in compilation: 2810 [ms]'
Time spent in compilation: 2810 [ms]
+ echo 'Time spent in execution and verification: 837 [ms]'
Time spent in execution and verification: 837 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219079283
+ name=mm_mm8_bf16_f32_m8192_n2432_k9728
+ set +e
++ echo mm_mm8_bf16_f32_m8192_n2432_k9728
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm8_bf16_f32_m8192_n2432_k9728
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_mm8_bf16_f32_m8192_n2432_k9728
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm8_bf16_f32_m8192_n2432_k9728
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=8192                     --n=2432                     --k=9728                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=8192 --n=2432 --k=9728 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.mlir
[TestShape(m=8192, k=9728, n=2432, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219079343
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_mm8_bf16_f32_m8192_n2432_k9728 ****'
**** Generating matmul .vmfb file for mm_mm8_bf16_f32_m8192_n2432_k9728 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_8192x2432_9728xbf16__dispatch_0_matmul_81 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 73184 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (79536 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_5.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x2432_9728xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_mm8_bf16_f32_m8192_n2432_k9728 ****'
**** Generating calls .vmfb file for mm_mm8_bf16_f32_m8192_n2432_k9728 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_ir.mlir
+ function_names=matmul_8192x2432_9728xbf16_
++ date +%s%3N
+ compiled_time=1716219082628
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_mm8_bf16_f32_m8192_n2432_k9728'\'' matmul tests ****'
**** Running 'mm_mm8_bf16_f32_m8192_n2432_k9728' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm8_bf16_f32_m8192_n2432_k9728_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_8192x2432_9728xbf16__8192_9728_2432_0] ---
Matmul shape (MxKxN): 8192x9728x2432
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219085381
+ echo 'Time spent in generation: 60 [ms]'
Time spent in generation: 60 [ms]
+ echo 'Time spent in compilation: 3285 [ms]'
Time spent in compilation: 3285 [ms]
+ echo 'Time spent in execution and verification: 2753 [ms]'
Time spent in execution and verification: 2753 [ms]
+ set +x
++ date +%s%3N
+ start_time=1716219085384
+ name=mm_mm9_bf16_f32_m8192_n7296_k2432
+ set +e
++ echo mm_mm9_bf16_f32_m8192_n7296_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm9_bf16_f32_m8192_n7296_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
++ echo mm_mm9_bf16_f32_m8192_n7296_k2432
++ grep -c ,
+ nameContainsComma=0
++ echo mm_mm9_bf16_f32_m8192_n7296_k2432
++ grep -c ' '
+ nameContainsSpace=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ matmul_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_ir.mlir
+ calls_ir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.mlir
+ matmul_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432.vmfb
+ calls_vmfb=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.vmfb
+ generation_flags='--lhs_rhs_type=bf16                     --acc_type=f32                     --m=8192                     --n=7296                     --k=2432                     --dynamicity=static                     --accumulate=false                     --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_ir.mlir                     --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.mlir'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating .mlir file containing matmul function(s) ****'
**** Generating .mlir file containing matmul function(s) ****
+ python3 /proj/gdba/jamesn/workspace/iree-amd-aie/tests/matmul/generate_e2e_matmul_tests.py --lhs_rhs_type=bf16 --acc_type=f32 --m=8192 --n=7296 --k=2432 --dynamicity=static --accumulate=false --output_matmuls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_ir.mlir --output_calls_mlir=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.mlir
[TestShape(m=8192, k=2432, n=7296, accumulate=False, dynamicity=<Dynamicity.STATIC: 'static'>)]
++ date +%s%3N
+ generated_time=1716219085446
+ set +e
+ compilation_flags='--iree-hal-target-backends=amd-aie                       --iree-amdaie-use-pipeline=pad-pack                       --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install                       --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install                       --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2                       --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp                       --iree-amd-aie-show-invoked-commands'
+ '[' 0 -ne 0 ']'
+ echo '**** Generating matmul .vmfb file for mm_mm9_bf16_f32_m8192_n7296_k2432 ****'
**** Generating matmul .vmfb file for mm_mm9_bf16_f32_m8192_n7296_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_ir.mlir --iree-hal-target-backends=amd-aie --iree-amdaie-use-pipeline=pad-pack --iree-amd-aie-peano-install-dir=/proj/gdba/jamesn/workspace/peano/install --iree-amd-aie-mlir-aie-install-dir=/proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install --iree-amd-aie-vitis-install-dir=/proj/xbuilds/SWIP/2023.2_1013_2256/installs/lin64/Vitis/2023.2 --iree-hal-dump-executable-files-to=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp --iree-amd-aie-show-invoked-commands -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432.vmfb
PATH=/opt/xilinx/xrt/bin:/home/jnewling/.nvm/versions/node/v21.6.2/bin:/proj/gdba/jamesn/workspace/builds/iree-clang/llvm-project/bin:/proj/gdba/jamesn/workspace/gcc_13/install/bin:/proj/gdba/jamesn/workspace/cmake/cmake-3.29.0-rc3-linux-x86_64/bin:/proj/gdba/jamesn/workspace/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/opt/puppetlabs/bin:/home/jnewling/amd-from-2023/scripts:/proj/gdba/jamesn/mlir-diff-tooling:/home/jnewling/.local/bin:/proj/gdba/jamesn/clang-formats:/proj/gdba/jamesn/workspace/builds/iree-clang/tools:/opt/xilinx/xrt:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/aietools/bin:/proj/xbuilds/2023.2_released/installs/lin64/Vitis/2023.2/bin:/proj/gdba/jamesn/workspace/labs/mlir-air/install-xrt/bin HOME=/home/jnewling /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/aie2xclbin /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir --peano /proj/gdba/jamesn/workspace/peano/install --xclbin-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin --npu-insts-name /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.npu.txt --xclbin-kernel-name matmul_8192x7296_2432xbf16__dispatch_0_matmul_81 --tmpdir /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb -v 
Just entered main and VITIS is not set

Compiling /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.aiecc.mlir
Created temporary directory /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb


****** Bootgen v2023.2
  **** Build date : May 17 2024-18:50:15
    ** Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
    ** Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.


[INFO]   : Bootimage generated successfully

XRT Build Version: 2.17.277 (master)
       Build Date: 2024-04-12 10:05:27
          Hash ID: baf88820fb3fc24dda4dc08c91ecbca2c76c7b0f
Creating a default 'in-memory' xclbin image.

Section: 'MEM_TOPOLOGY'(6) was successfully added.
Size   : 88 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json'

Section: 'AIE_PARTITION'(32) was successfully added.
Size   : 57024 bytes
Format : JSON
File   : '/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json'
Info: Embedded Metadata section is missing project.platform.device.core element, adding it.
Successfully wrote (63370 bytes) to the output file: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Leaving xclbinutil.
Running: builtin.module(lower-affine,aie-canonicalize-device,aie.device(aie-assign-lock-ids,aie-assign-bd-ids,aie-register-objectFifos,aie-objectFifo-stateful-transform,aie-lower-broadcast-packet,aie-create-packet-flows,aie-lower-multicast,aie-assign-buffer-addresses{basic-alloc=false}),convert-scf-to-cf)
Running: builtin.module(aie.device(aie-localize-locks),aie.device(aie-normalize-address-spaces),aie-standard-lowering{tilecol=4294967295 tilerow=4294967295},aiex-standard-lowering,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<RedundantLoadStoreOptimizationPass>,unknown<{anonymous}::CopyRemovalPass>,test-canonicalize-vector-for-aievec{aie-target=aieml target-backend=llvmir},unknown<HoistCastOpToDataSourcePass>,test-lower-vector-to-aievec{aie-target=aieml target-backend=llvmir},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},unknown<ExtendUPDOpsPass>,cse,unknown<SimplifyUPDOpsPass>,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},test-aievec-optimize{aie-target=aieml target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},aievec-convolution-analysis{print=false},test-aievec-convolution-optimize{aie-target=aieml shift=0 target-backend=llvmir},cse,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},loop-invariant-code-motion,canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-aievec-to-llvm{aie2-fp32-emulation-strategy=accuracy-safe},convert-vector-to-llvm{enable-amx=false enable-arm-neon=false enable-arm-sve=false enable-x86vector=false force-32bit-vector-indices=true reassociate-fp-reductions=false},expand-strided-metadata,lower-affine,convert-math-to-llvm{approximate-log1p=true},convert-arith-to-llvm{index-bitwidth=0},finalize-memref-to-llvm{index-bitwidth=0 use-aligned-alloc=false use-generic-functions=false},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-func-to-llvm{index-bitwidth=0 use-bare-ptr-memref-call-conv=true},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,convert-cf-to-llvm{index-bitwidth=0},canonicalize{  max-iterations=10 max-num-rewrites=-1 region-simplify=true test-convergence=false top-down=true},cse,unknown<{anonymous}::RemoveAlignment2FromLLVMLoadPass>)
Run: /proj/gdba/jamesn/workspace/peano/install/bin/opt -O2 --inline-threshold=10 -S /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.ll --disable-builtin=memset -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/llc /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.opt.ll -O2 --march=aie2 --function-sections --filetype=obj -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_2.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_3.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_0_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_1_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_2_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/peano/install/bin/clang -O2 --target=aie2-none-elf /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/input.o /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/aie_runtime_lib/AIE2/me_basic.o /proj/gdba/jamesn/workspace/peano/install/lib/aie2-none-unknown-elf/libc.a -Wl,--gc-sections -Wl,-T,/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf.ld -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/segment_0_core_3_4.elf
Succeeded in 0.000000e+00 code: 0
Run: /proj/gdba/jamesn/workspace/iree-amd-aie/third_party/mlir-aie/install/bin/bootgen -arch versal -image /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.bif -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/design.pdi -w
Succeeded in 0.000000e+00 code: 0
Run: /opt/xilinx/xrt/bin/xclbinutil --add-replace-section MEM_TOPOLOGY:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/mem_topology.json --add-kernel /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/kernels.json --add-replace-section AIE_PARTITION:JSON:/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_partition.json --force --output /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb.xclbin
Succeeded in 0.000000e+00 code: 0
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_elfs.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_init.bin
Generating: /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/module_matmul_8192x7296_2432xbf16__dispatch_0_amdaie_xclbin_fb/aie_cdo_enable.bin
+ compileResult=0
+ '[' 0 -ne 0 ']'
+ '[' 0 -ne 0 ']'
+ set -e
+ echo '**** Generating calls .vmfb file for mm_mm9_bf16_f32_m8192_n7296_k2432 ****'
**** Generating calls .vmfb file for mm_mm9_bf16_f32_m8192_n7296_k2432 ****
+ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/iree-compile /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.mlir --iree-hal-target-backends=amd-aie -o /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.vmfb
++ grep -oP '@\K\S+(?=\()' /proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_ir.mlir
+ function_names=matmul_8192x7296_2432xbf16_
++ date +%s%3N
+ compiled_time=1716219089016
+ '[' 0 -eq 0 ']'
+ echo '**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****'
**** Skipping XCLBIN signing: DO_SIGNING set to 0 ****
+ echo '**** Running '\''mm_mm9_bf16_f32_m8192_n7296_k2432'\'' matmul tests ****'
**** Running 'mm_mm9_bf16_f32_m8192_n7296_k2432' matmul tests ****
+ COMMAND='/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
+ '[' 0 -ne 0 ']'
+ echo 'Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
Running command: /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000
+ eval '/proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432.vmfb       --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.vmfb       --device=xrt       --max_elements_to_check=20000'
++ /proj/gdba/jamesn/workspace/builds/iree-clang/tools/testing/e2e/iree-e2e-matmul-test --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432.vmfb --module=/proj/gdba/jamesn/workspace/iree-amd-aie/build_tools/ci/results_dir_tmp/mm_mm9_bf16_f32_m8192_n7296_k2432_calls.vmfb --device=xrt --max_elements_to_check=20000
--- TEST[matmul_8192x7296_2432xbf16__8192_2432_7296_0] ---
Matmul shape (MxKxN): 8192x2432x7296
+ return_status=0
+ echo 'Command returned with status: 0'
Command returned with status: 0
++ date +%s%3N
+ end_time=1716219091932
+ echo 'Time spent in generation: 62 [ms]'
Time spent in generation: 62 [ms]
+ echo 'Time spent in compilation: 3570 [ms]'
Time spent in compilation: 3570 [ms]
+ echo 'Time spent in execution and verification: 2916 [ms]'
Time spent in execution and verification: 2916 [ms]
+ set +x
