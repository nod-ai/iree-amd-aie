name: CI Linux

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches:
      - main

concurrency:
  # A PR number if a pull request and otherwise the commit hash. This cancels
  # queued and in-progress runs for the same PR (presubmit) or commit
  # (postsubmit).
  group: ci-build-test-cpp-linux-${{ github.event.number || github.sha }}
  cancel-in-progress: true

permissions:
  contents: write

jobs:
  build_and_ctest:
    name: Build and Test (linux)
    runs-on: azure-cpubuilder-linux-scale
    strategy:
      fail-fast: true
      matrix:
        assertions: [ON, OFF]
    env:
      CACHE_DIR: ${{ github.workspace }}/.container-cache
      # either the PR number or `branch-N` where N always increments
      CACHE_KEY: linux-build-test-cpp-asserts=${{ matrix.assertions }}-manylinux-v2-${{ format('{0}-{1}', github.ref_name, github.run_number) }}
    steps:
      - name: Set unified TZ
        uses: szenius/set-timezone@1f9716b0f7120e344f0c62bb7b1ee98819aefd42 # v2.0
        with:
          # this is an arbitrary choice
          timezoneLinux: "Asia/Singapore"
          timezoneMacos: "Asia/Singapore"
          timezoneWindows: "Singapore Standard Time"

      - name: "Checking out repository"
        env:
          BRANCH_NAME: ${{ github.ref }}
          REPO_ADDRESS: ${{ github.server_url }}/${{ github.repository }}
        run: |
          git init
          git remote add origin $REPO_ADDRESS
          git -c protocol.version=2 fetch --depth 1 origin $BRANCH_NAME
          git reset --hard FETCH_HEAD
          git -c submodule."third_party/torch-mlir".update=none \
              -c submodule."third_party/stablehlo".update=none \
              -c submodule."third_party/XRT".update=none \
              submodule update --init --recursive --depth 1 --single-branch -j 10

      - name: "Setting up Python"
        run: |
          sudo apt update
          sudo apt install software-properties-common -y
          sudo add-apt-repository ppa:deadsnakes/ppa -y
          sudo apt install python3.11 python3-pip -y
          sudo apt-get install python3.11-dev python3.11-venv build-essential -y

      - name: ccache
        uses: hendrikmuhs/ccache-action@a1209f81afb8c005c13b4296c32e363431bffea5 # v1.2.17
        with:
          key: ${{ github.job }}
          save: ${{ needs.setup.outputs.write-caches == 1 }}

      - name: Python deps
        run: |
          python3.11 -m venv .venv
          source .venv/bin/activate
          pip install -r third_party/iree/runtime/bindings/python/iree/runtime/build_requirements.txt
          pip install pyyaml pybind11[global]==2.13.6 nanobind==2.4.0

      - name: Enable cache
        uses: actions/cache/restore@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ${{ env.CACHE_DIR }}
          key:  ${{ env.CACHE_KEY }}
          restore-keys: linux-build-test-cpp-

      - name: Peano dep
        run: |
          bash build_tools/download_peano.sh
          echo "PEANO_INSTALL_DIR=$PWD/llvm-aie" >> $GITHUB_ENV
          echo "ENABLE_XRT_LITE_CTS_TESTS=ON" >> $GITHUB_ENV

      - name: Install linux deps
        run: |
          sudo apt remove cmake -y
          bash build_tools/ci/install_cmake.sh
          sudo apt-get install ninja-build clang lld libudev-dev uuid-dev -y

      - name: Build packages
        run: |
          source .venv/bin/activate
          export cache_dir="${{ env.CACHE_DIR }}"
          export CCACHE_COMPILERCHECK="string:$(clang --version)"
          bash build_tools/build_llvm.sh ${{ matrix.assertions }}
          rm -rf llvm-build
          export llvm_install_dir=$PWD/llvm-install
          bash build_tools/build_test_cpp.sh ${{ matrix.assertions }}

      - name: Create artifacts
        if: ${{ !cancelled() }}
        run: |
          pushd third_party/iree/third_party/llvm-project && llvm_sha_short=$(git rev-parse --short HEAD) && popd
          tar cf llvm-dist-linux-$llvm_sha_short.tar llvm-install
          tar cf iree-dist-linux.tar iree-install

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ !cancelled() }}
        with:
          name: linux_x86_64_llvm_packages_asserts=${{ matrix.assertions }}
          path: llvm-dist-*.tar
          if-no-files-found: warn

      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: ${{ !cancelled() }}
        with:
          name: linux_x86_64_iree_packages_asserts=${{ matrix.assertions }}
          path: iree-dist-linux.tar
          if-no-files-found: warn

      - name: Save cache
        uses: actions/cache/save@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        if: ${{ !cancelled() && github.event_name == 'push' && github.ref_name == 'main' }}
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ env.CACHE_KEY }}

  test_linux_phoenix:
    name: E2E Test Linux Phoenix
    needs: build_and_ctest
    strategy:
      fail-fast: false
      matrix:
        runs-on: [linux-phoenix]
    runs-on: ${{ matrix.runs-on }}
    env:
      XILINXD_LICENSE_FILE: /opt/xilinx/Xilinx.lic
    steps:
      - name: "Checking out repository" # for test scripts
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: false # not required for testbench

      - name: Download artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: linux_x86_64_iree_packages_asserts=ON

      - name: Extract artifact
        run: |
          tar -xvf iree-dist-linux.tar
          echo "IREE_INSTALL_DIR=$PWD/iree-install" >> $GITHUB_ENV
          echo "PYTHONPATH=$PWD/iree-install/python_packages/iree_compiler:$PWD/iree-install/python_packages/iree_runtime" >> $GITHUB_ENV
          bash build_tools/download_peano.sh
          echo "PEANO_INSTALL_DIR=$PWD/llvm-aie" >> $GITHUB_ENV

      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.11'

      - name: Create venv and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install pyyaml pytest numpy

      - name: Query device info
        run: |
          source .venv/bin/activate
          echo "aie-metadata"
          python build_tools/ci/amdxdna_driver_utils/amdxdna_ioctl.py --aie-metadata
          echo "aie-version"
          python build_tools/ci/amdxdna_driver_utils/amdxdna_ioctl.py --aie-version
          echo "XRT_LITE_N_CORE_ROWS=$(python build_tools/ci/amdxdna_driver_utils/amdxdna_ioctl.py --num-rows)" >> $GITHUB_ENV
          echo "XRT_LITE_N_CORE_COLS=$(python build_tools/ci/amdxdna_driver_utils/amdxdna_ioctl.py --num-cols)" >> $GITHUB_ENV

      - name: E2E correctness matmul test
        run: |
          # https://stackoverflow.com/a/17567422
          # shim_xdna::bo::map_drm_bo does an mmap with MAP_LOCKED
          # which can fail if limit is to low
          sudo prlimit -lunlimited --pid $$
          source .venv/bin/activate
          bash build_tools/ci/run_matmul_test.sh \
            test_matmuls \
            iree-install \
            $PWD/llvm-aie


      - name : E2E comparison of AIE to llvm-cpu
        run: |
          sudo prlimit -lunlimited --pid $$
          source .venv/bin/activate
          python build_tools/ci/cpu_comparison/run.py \
            test_aie_vs_cpu \
            $PWD/iree-install \
            --peano_dir=$PWD/llvm-aie \
            --vitis_dir=/opt/Xilinx/Vitis/2024.2 \
            --target_device="npu1_4col" \
            --xrt_lite_n_core_rows=$XRT_LITE_N_CORE_ROWS \
            --xrt_lite_n_core_cols=$XRT_LITE_N_CORE_COLS \
            --skip_tests=Performance \
            -v

      # Run the 'Performance' tests. These do not check numerical correctness,
      # just measure the time to run some workloads.
      - name : Performance benchmarks
        run: |
          source .venv/bin/activate
          python build_tools/ci/cpu_comparison/run.py \
            test_aie_vs_cpu \
            $PWD/iree-install \
            --peano_dir=$PWD/llvm-aie \
            --vitis_dir=/opt/Xilinx/Vitis/2024.2 \
            --target_device="npu1_4col" \
            --xrt_lite_n_core_rows=$XRT_LITE_N_CORE_ROWS \
            --xrt_lite_n_core_cols=$XRT_LITE_N_CORE_COLS \
            --tests=Performance \
            -v > performance_npu1.log

          # Print a summary of the findings.
          python build_tools/ci/cpu_comparison/performance_summarizer.py \
            performance_npu1.log results_npu1.json

      - name: XRT-LITE tests
        run: |
          DEVICE_TEST_DIR="$PWD/iree-install/device_tests"
          for t in $(ls $DEVICE_TEST_DIR); do
            $DEVICE_TEST_DIR/$t --xrt_lite_n_core_rows=$XRT_LITE_N_CORE_ROWS --xrt_lite_n_core_cols=$XRT_LITE_N_CORE_COLS
          done

      # Only publish the performance results on main branch pushes.
      - name: Publish performance results
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: |
          cp build_tools/ci/cpu_comparison/performance_publish.py .
          git fetch origin gh-pages
          git checkout gh-pages
          python performance_publish.py results_npu1.json results_history_npu1.json results_history_npu1.html
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add results_history_npu1.json results_history_npu1.html
          git commit -m "Update NPU1 performance results and deploy"
          git push

  test_linux_strix:
    name: E2E Test Linux Strix
    needs: build_and_ctest
    strategy:
      fail-fast: false
      matrix:
        runs-on: [linux-strix]
    runs-on: ${{ matrix.runs-on }}
    env:
      XILINXD_LICENSE_FILE: /opt/xilinx/Xilinx.lic
    steps:
      - name: "Checking out repository" # for test scripts
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          submodules: false # not required for testbench

      - name: Download artifacts
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: linux_x86_64_iree_packages_asserts=ON

      - name: Extract artifact
        run: |
          tar -xvf iree-dist-linux.tar
          echo "IREE_INSTALL_DIR=$PWD/iree-install" >> $GITHUB_ENV
          echo "PYTHONPATH=$PWD/iree-install/python_packages/iree_compiler:$PWD/iree-install/python_packages/iree_runtime" >> $GITHUB_ENV
          bash build_tools/download_peano.sh
          echo "PEANO_INSTALL_DIR=$PWD/llvm-aie" >> $GITHUB_ENV

      - uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version: '3.11'

      - name: Create venv and install dependencies
        run: |
          python -m venv .venv
          source .venv/bin/activate
          pip install pyyaml pytest numpy

      - name: Query device info
        run: |
          source .venv/bin/activate
          echo "aie-metadata"
          python build_tools/ci/amdxdna_driver_utils/amdxdna_ioctl.py --aie-metadata
          echo "aie-version"
          python build_tools/ci/amdxdna_driver_utils/amdxdna_ioctl.py --aie-version
          echo "XRT_LITE_N_CORE_ROWS=$(python build_tools/ci/amdxdna_driver_utils/amdxdna_ioctl.py --num-rows)" >> $GITHUB_ENV
          echo "XRT_LITE_N_CORE_COLS=$(python build_tools/ci/amdxdna_driver_utils/amdxdna_ioctl.py --num-cols)" >> $GITHUB_ENV

      - name : E2E comparison of AIE to llvm-cpu
        run: |
          source .venv/bin/activate
          python build_tools/ci/cpu_comparison/run.py \
            test_aie_vs_cpu \
            $PWD/iree-install \
            --peano_dir=$PWD/llvm-aie \
            --vitis_dir=/opt/xilinx/Vitis/2024.2 \
            --target_device="npu4" \
            --reset_npu_between_runs \
            --xrt_lite_n_core_rows=$XRT_LITE_N_CORE_ROWS \
            --xrt_lite_n_core_cols=$XRT_LITE_N_CORE_COLS \
            -v

      # Run the 'Performance' tests. These do not check numerical correctness,
      # just measure the time to run some workloads.
      - name : Performance benchmarks
        run: |
          source .venv/bin/activate
          python build_tools/ci/cpu_comparison/run.py \
            test_aie_vs_cpu \
            $PWD/iree-install \
            --peano_dir=$PWD/llvm-aie \
            --vitis_dir=/opt/xilinx/Vitis/2024.2 \
            --target_device="npu4" \
            --reset_npu_between_runs -v \
            --xrt_lite_n_core_rows=$XRT_LITE_N_CORE_ROWS \
            --xrt_lite_n_core_cols=$XRT_LITE_N_CORE_COLS \
            --tests=Performance > performance_npu4.log

          # Print a summary of the findings.
          python build_tools/ci/cpu_comparison/performance_summarizer.py \
            performance_npu4.log results_npu4.json

      # Only publish the performance results on main branch pushes.
      - name: Publish performance results
        if: github.event_name == 'push' && github.ref_name == 'main'
        run: |
          cp build_tools/ci/cpu_comparison/performance_publish.py .
          git fetch origin gh-pages
          git checkout gh-pages
          python performance_publish.py results_npu4.json results_history_npu4.json results_history_npu4.html
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add results_history_npu4.json results_history_npu4.html
          git commit -m "Update NPU4 performance results and deploy"
          git push
