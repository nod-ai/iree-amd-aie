name: CI Windows

on:
  workflow_call:
  workflow_dispatch:
  pull_request:
  merge_group:
  push:
    branches:
      - main

  schedule:
    - cron: '0 */6 * * *'

concurrency:
  group: ci-build-test-cpp-windows-${{ github.event.number || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    # force bash for windows
    shell: bash

jobs:
  build_and_ctest:
    name: Build and Test (windows, ASSERTIONS)
    runs-on: windows-2019
    strategy:
      fail-fast: true
    env:
      CACHE_DIR: ${{ github.workspace }}/.container-cache
      CACHE_KEY: windows-build-test-cpp-asserts-v1-${{ github.event.number || format('{0}-{1}', github.ref_name, github.run_number) }}
    steps:
      - name: Set unified TZ
        uses: szenius/set-timezone@v2.0
        with:
          # this is an arbitrary choice
          timezoneLinux: "Asia/Singapore"
          timezoneMacos: "Asia/Singapore"
          timezoneWindows: "Singapore Standard Time"
          
      - name: "Checking out repository"
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
        with:
          submodules: recursive

      - name: Setup Cpp
        uses: aminya/setup-cpp@v1
        with:
          compiler: llvm
          vcvarsall: true
          cmake: true
          ninja: true
          ccache: true

      - uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Sync source deps
        run: |
          python ./sync_deps.py

      - name: Python deps
        run: |
          pip install "numpy<2" pyyaml "pybind11[global]==2.10.3" nanobind

      - name: Enable cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ env.CACHE_KEY }}
          restore-keys: windows-build-test-cpp-

      - name: Build packages
        run: |
          export cache_dir="${{ env.CACHE_DIR }}"
          export CCACHE_COMPILERCHECK="string:$(clang-cl.exe --version)"
          bash build_tools/ci/build_test_cpp.sh

      - name: Create artifacts
        if: ${{ !cancelled() }}
        run: |
          tar cf iree-dist-windows.tar -C iree-install .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: windows_x86_64_release_packages
          path: iree-dist-windows.tar
          if-no-files-found: warn

      - name: Save cache
        uses: actions/cache/save@v3
        if: ${{ !cancelled() && github.event_name != 'pull_request' }}
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ env.CACHE_KEY }}

  test_windows:
    name: E2E Test windows
    runs-on: windows-phoenix
    needs: build_and_ctest
    strategy:
      fail-fast: true
    steps:
      - name: "Checking out repository" # for test scripts
        uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
        with:
          submodules: false # not required for testbench

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows_x86_64_release_packages

      - name: Extract artifact
        run: |
          mkdir iree-install
          tar -xf iree-dist-windows.tar -C iree-install
          bash build_tools/download_peano.sh

      - name: Create venv and install dependencies
        run: |
          python -m venv .venv
          source .venv/Scripts/activate
          pip install -r tests/matmul/requirements.txt

      - name: E2E correctness matmul test
        run: |
          source .venv/Scripts/activate
          export XILINX_XRT=/c/Xilinx/XRT
          bash build_tools/ci/run_matmul_test.sh \
            /c/test_matmuls \
            $PWD/iree-install \
            $PWD/llvm-aie

      - name : E2E comparison of AIE to llvm-cpu
        run: |
          source .venv/Scripts/activate
          export XILINX_XRT=/c/Xilinx/XRT
          python build_tools/ci/cpu_comparison/run_test.py \
            /c/test_aie_vs_cpu \
            $PWD/iree-install \
            $PWD/llvm-aie -v

      - name: Printing IR from aie2xclbin
        run: |
          source .venv/Scripts/activate
          export XILINX_XRT=/c/Xilinx/XRT
          bash build_tools/ci/print_ir_aie2xclbin/print_ir_aie2xclbin.sh \
            $PWD/iree-install \
            /c/print_ir_aie2xclbin_results \
            $PWD/llvm-aie
