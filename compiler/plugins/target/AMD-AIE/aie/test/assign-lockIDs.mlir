
// RUN: iree-opt --aie-assign-lock-ids --split-input-file %s | FileCheck %s

// CHECK-LABEL:   aie.device(xcvc1902) {
// CHECK:           %[[TILE_2_2:.*]] = aie.tile(2, 2)
// CHECK:           %[[TILE_2_3:.*]] = aie.tile(2, 3)
// CHECK:           %[[TILE_3_3:.*]] = aie.tile(3, 3)
// CHECK:           %[[TILE_3_4:.*]] = aie.tile(3, 4)
// CHECK:           %[[LOCK_2_2:.*]] = aie.lock(%[[TILE_2_2]], 0)
// CHECK:           %[[LOCK_2_2_0:.*]] = aie.lock(%[[TILE_2_2]], 2)
// CHECK:           %[[LOCK_2_2_1:.*]] = aie.lock(%[[TILE_2_2]], 1)
// CHECK:           %[[LOCK_2_3:.*]] = aie.lock(%[[TILE_2_3]], 0)
// CHECK:           %[[LOCK_2_3_2:.*]] = aie.lock(%[[TILE_2_3]], 1)
// CHECK:           %[[LOCK_2_3_3:.*]] = aie.lock(%[[TILE_2_3]], 4)
// CHECK:           %[[LOCK_2_3_4:.*]] = aie.lock(%[[TILE_2_3]], 2)
// CHECK:           %[[LOCK_2_3_5:.*]] = aie.lock(%[[TILE_2_3]], 3)
// CHECK:           %[[LOCK_2_3_6:.*]] = aie.lock(%[[TILE_2_3]], 5)
// CHECK:           %[[LOCK_2_3_7:.*]] = aie.lock(%[[TILE_2_3]], 6)
// CHECK:           %[[LOCK_2_3_8:.*]] = aie.lock(%[[TILE_2_3]], 7)
// CHECK:           %[[LOCK_2_3_9:.*]] = aie.lock(%[[TILE_2_3]], 10)
// CHECK:           %[[LOCK_2_3_10:.*]] = aie.lock(%[[TILE_2_3]], 11)
// CHECK:           %[[LOCK_2_3_11:.*]] = aie.lock(%[[TILE_2_3]], 8)
// CHECK:           %[[LOCK_2_3_12:.*]] = aie.lock(%[[TILE_2_3]], 9)
// CHECK:           %[[LOCK_2_3_13:.*]] = aie.lock(%[[TILE_2_3]], 12)
// CHECK:           %[[LOCK_2_3_14:.*]] = aie.lock(%[[TILE_2_3]], 13)
// CHECK:           %[[LOCK_2_3_15:.*]] = aie.lock(%[[TILE_2_3]], 14)
// CHECK:           %[[LOCK_2_3_16:.*]] = aie.lock(%[[TILE_2_3]], 15)
// CHECK:           %[[LOCK_3_3:.*]] = aie.lock(%[[TILE_3_3]], 0)
// CHECK:           %[[LOCK_3_3_17:.*]] = aie.lock(%[[TILE_3_3]], 1)
// CHECK:           %[[LOCK_3_3_18:.*]] = aie.lock(%[[TILE_3_3]], 9)
// CHECK:           %[[LOCK_3_3_19:.*]] = aie.lock(%[[TILE_3_3]], 2)
// CHECK:           %[[LOCK_3_4:.*]] = aie.lock(%[[TILE_3_4]], 0)
// CHECK:           %[[LOCK_3_4_20:.*]] = aie.lock(%[[TILE_3_4]], 1)
// CHECK:           %[[LOCK_3_4_21:.*]] = aie.lock(%[[TILE_3_4]], 2)
// CHECK:           %[[LOCK_3_4_22:.*]] = aie.lock(%[[TILE_3_4]], 3)
// CHECK:           %[[TILE_6_0:.*]] = aie.tile(6, 0)
// CHECK:           %[[LOCK_6_0:.*]] = aie.lock(%[[TILE_6_0]], 0)
// CHECK:         }

module @test_assign_lockIDs {
 aie.device(xcvc1902) {
  %t22 = aie.tile(2, 2)
  %t23 = aie.tile(2, 3)
  %t33 = aie.tile(3, 3)
  %t34 = aie.tile(3, 4)
  %l22_0 = aie.lock(%t22, 0)
  %l22_2 = aie.lock(%t22, 2)
  %l22_1 = aie.lock(%t22)
  %l23_0 = aie.lock(%t23)
  %l23_1 = aie.lock(%t23)
  %l23_4 = aie.lock(%t23, 4)
  %l23_2 = aie.lock(%t23)
  %l23_3 = aie.lock(%t23)
  %l23_5 = aie.lock(%t23)
  %l23_6 = aie.lock(%t23)
  %l23_7 = aie.lock(%t23)
  %l23_10 = aie.lock(%t23)
  %l23_11 = aie.lock(%t23)
  %l23_8 = aie.lock(%t23, 8)
  %l23_9 = aie.lock(%t23, 9)
  %l23_12 = aie.lock(%t23)
  %l23_13 = aie.lock(%t23)
  %l23_14 = aie.lock(%t23)
  %l23_15 = aie.lock(%t23)
  %l33_0 = aie.lock(%t33, 0)
  %l33_1 = aie.lock(%t33)
  %l33_9 = aie.lock(%t33, 9)
  %l33_2 = aie.lock(%t33)
  %l34_0 = aie.lock(%t34)
  %l34_1 = aie.lock(%t34)
  %l34_2 = aie.lock(%t34)
  %l34_3 = aie.lock(%t34)
  %t60 = aie.tile(6, 0)
  %l60 = aie.lock(%t60)
 }
}

// -----

// CHECK-LABEL:   aie.device(xcve2802) {
// CHECK:           %[[TILE_1_1:.*]] = aie.tile(1, 1)
// CHECK:           %[[LOCK_1_1:.*]] = aie.lock(%[[TILE_1_1]], 1)
// CHECK:           %[[LOCK_1_1_0:.*]] = aie.lock(%[[TILE_1_1]], 0)
// CHECK:           %[[LOCK_1_1_1:.*]] = aie.lock(%[[TILE_1_1]], 3)
// CHECK:           %[[LOCK_1_1_2:.*]] = aie.lock(%[[TILE_1_1]], 4)
// CHECK:           %[[LOCK_1_1_3:.*]] = aie.lock(%[[TILE_1_1]], 5)
// CHECK:           %[[LOCK_1_1_4:.*]] = aie.lock(%[[TILE_1_1]], 6)
// CHECK:           %[[LOCK_1_1_5:.*]] = aie.lock(%[[TILE_1_1]], 7)
// CHECK:           %[[LOCK_1_1_6:.*]] = aie.lock(%[[TILE_1_1]], 8)
// CHECK:           %[[LOCK_1_1_7:.*]] = aie.lock(%[[TILE_1_1]], 9)
// CHECK:           %[[LOCK_1_1_8:.*]] = aie.lock(%[[TILE_1_1]], 10)
// CHECK:           %[[LOCK_1_1_9:.*]] = aie.lock(%[[TILE_1_1]], 11)
// CHECK:           %[[LOCK_1_1_10:.*]] = aie.lock(%[[TILE_1_1]], 12)
// CHECK:           %[[LOCK_1_1_11:.*]] = aie.lock(%[[TILE_1_1]], 13)
// CHECK:           %[[LOCK_1_1_12:.*]] = aie.lock(%[[TILE_1_1]], 14)
// CHECK:           %[[LOCK_1_1_13:.*]] = aie.lock(%[[TILE_1_1]], 33)
// CHECK:           %[[LOCK_1_1_14:.*]] = aie.lock(%[[TILE_1_1]], 15)
// CHECK:           %[[LOCK_1_1_15:.*]] = aie.lock(%[[TILE_1_1]], 16)
// CHECK:           %[[LOCK_1_1_16:.*]] = aie.lock(%[[TILE_1_1]], 17)
// CHECK:           %[[LOCK_1_1_17:.*]] = aie.lock(%[[TILE_1_1]], 18)
// CHECK:           %[[LOCK_1_1_18:.*]] = aie.lock(%[[TILE_1_1]], 2)
// CHECK:         }

module @memTileTest {
  aie.device(xcve2802) {
    // Memory tiles on xcve have 64 locks.
    %tmemtile = aie.tile(1,1)
    %l0 = aie.lock(%tmemtile, 1)
    %l1 = aie.lock(%tmemtile, 0)
    %l2 = aie.lock(%tmemtile)
    %l3 = aie.lock(%tmemtile)
    %l4 = aie.lock(%tmemtile)
    %l5 = aie.lock(%tmemtile)
    %l6 = aie.lock(%tmemtile)
    %l7 = aie.lock(%tmemtile)
    %l8 = aie.lock(%tmemtile)
    %l9 = aie.lock(%tmemtile)
    %l10 = aie.lock(%tmemtile)
    %l11 = aie.lock(%tmemtile)
    %l12 = aie.lock(%tmemtile)
    %l13 = aie.lock(%tmemtile)
    %l14 = aie.lock(%tmemtile,33)
    %l15 = aie.lock(%tmemtile)
    %l16 = aie.lock(%tmemtile)
    %l17 = aie.lock(%tmemtile)
    %l18 = aie.lock(%tmemtile)
    %l19 = aie.lock(%tmemtile,2)
  }
}
